//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inventory.Inventoryserref {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALItemMap", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALItemMap : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsStrActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemMapIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListItemCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoggedINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorItemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsStrActive {
            get {
                return this.IsStrActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsStrActiveField, value) != true)) {
                    this.IsStrActiveField = value;
                    this.RaisePropertyChanged("IsStrActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemCategory {
            get {
                return this.ItemCategoryField;
            }
            set {
                if ((this.ItemCategoryField.Equals(value) != true)) {
                    this.ItemCategoryField = value;
                    this.RaisePropertyChanged("ItemCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemMapID {
            get {
                return this.ItemMapIDField;
            }
            set {
                if ((this.ItemMapIDField.Equals(value) != true)) {
                    this.ItemMapIDField = value;
                    this.RaisePropertyChanged("ItemMapID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListItemCategory {
            get {
                return this.ListItemCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.ListItemCategoryField, value) != true)) {
                    this.ListItemCategoryField = value;
                    this.RaisePropertyChanged("ListItemCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListVendorID {
            get {
                return this.ListVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListVendorIDField, value) != true)) {
                    this.ListVendorIDField = value;
                    this.RaisePropertyChanged("ListVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoggedIN {
            get {
                return this.LoggedINField;
            }
            set {
                if ((this.LoggedINField.Equals(value) != true)) {
                    this.LoggedINField = value;
                    this.RaisePropertyChanged("LoggedIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorItemID {
            get {
                return this.VendorItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorItemIDField, value) != true)) {
                    this.VendorItemIDField = value;
                    this.RaisePropertyChanged("VendorItemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchVendorItemMap", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchVendorItemMap : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionWithCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemMapIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionWithCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorItemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsActiveField, value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescriptionWithCode {
            get {
                return this.ItemDescriptionWithCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionWithCodeField, value) != true)) {
                    this.ItemDescriptionWithCodeField = value;
                    this.RaisePropertyChanged("ItemDescriptionWithCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemMapID {
            get {
                return this.ItemMapIDField;
            }
            set {
                if ((this.ItemMapIDField.Equals(value) != true)) {
                    this.ItemMapIDField = value;
                    this.RaisePropertyChanged("ItemMapID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescriptionWithCode {
            get {
                return this.VendorDescriptionWithCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionWithCodeField, value) != true)) {
                    this.VendorDescriptionWithCodeField = value;
                    this.RaisePropertyChanged("VendorDescriptionWithCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorItemID {
            get {
                return this.VendorItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorItemIDField, value) != true)) {
                    this.VendorItemIDField = value;
                    this.RaisePropertyChanged("VendorItemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALUser", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ApproveRangeFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ApproveRangeToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApproveorderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BudgetCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BudgetValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfirmPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DeletedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeletedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeletedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsApproveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDenyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEmailNotificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastLoginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListCorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListFacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListRoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MultipleRolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PageMasterPermissionMultiRoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PermissionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RegionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RoleUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SubMenuIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserRoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long XtnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveField, value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ApproveRangeFrom {
            get {
                return this.ApproveRangeFromField;
            }
            set {
                if ((this.ApproveRangeFromField.Equals(value) != true)) {
                    this.ApproveRangeFromField = value;
                    this.RaisePropertyChanged("ApproveRangeFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ApproveRangeTo {
            get {
                return this.ApproveRangeToField;
            }
            set {
                if ((this.ApproveRangeToField.Equals(value) != true)) {
                    this.ApproveRangeToField = value;
                    this.RaisePropertyChanged("ApproveRangeTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Approveorder {
            get {
                return this.ApproveorderField;
            }
            set {
                if ((this.ApproveorderField.Equals(value) != true)) {
                    this.ApproveorderField = value;
                    this.RaisePropertyChanged("Approveorder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BudgetCurrency {
            get {
                return this.BudgetCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.BudgetCurrencyField, value) != true)) {
                    this.BudgetCurrencyField = value;
                    this.RaisePropertyChanged("BudgetCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BudgetValue {
            get {
                return this.BudgetValueField;
            }
            set {
                if ((this.BudgetValueField.Equals(value) != true)) {
                    this.BudgetValueField = value;
                    this.RaisePropertyChanged("BudgetValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfirmPassword {
            get {
                return this.ConfirmPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfirmPasswordField, value) != true)) {
                    this.ConfirmPasswordField = value;
                    this.RaisePropertyChanged("ConfirmPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DeletedBy {
            get {
                return this.DeletedByField;
            }
            set {
                if ((this.DeletedByField.Equals(value) != true)) {
                    this.DeletedByField = value;
                    this.RaisePropertyChanged("DeletedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeletedDate {
            get {
                return this.DeletedDateField;
            }
            set {
                if ((this.DeletedDateField.Equals(value) != true)) {
                    this.DeletedDateField = value;
                    this.RaisePropertyChanged("DeletedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeletedOn {
            get {
                return this.DeletedOnField;
            }
            set {
                if ((this.DeletedOnField.Equals(value) != true)) {
                    this.DeletedOnField = value;
                    this.RaisePropertyChanged("DeletedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityName {
            get {
                return this.FacilityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityNameField, value) != true)) {
                    this.FacilityNameField = value;
                    this.RaisePropertyChanged("FacilityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApprove {
            get {
                return this.IsApproveField;
            }
            set {
                if ((this.IsApproveField.Equals(value) != true)) {
                    this.IsApproveField = value;
                    this.RaisePropertyChanged("IsApprove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeny {
            get {
                return this.IsDenyField;
            }
            set {
                if ((this.IsDenyField.Equals(value) != true)) {
                    this.IsDenyField = value;
                    this.RaisePropertyChanged("IsDeny");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEdit {
            get {
                return this.IsEditField;
            }
            set {
                if ((this.IsEditField.Equals(value) != true)) {
                    this.IsEditField = value;
                    this.RaisePropertyChanged("IsEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEmailNotification {
            get {
                return this.IsEmailNotificationField;
            }
            set {
                if ((this.IsEmailNotificationField.Equals(value) != true)) {
                    this.IsEmailNotificationField = value;
                    this.RaisePropertyChanged("IsEmailNotification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOrder {
            get {
                return this.IsOrderField;
            }
            set {
                if ((this.IsOrderField.Equals(value) != true)) {
                    this.IsOrderField = value;
                    this.RaisePropertyChanged("IsOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsView {
            get {
                return this.IsViewField;
            }
            set {
                if ((this.IsViewField.Equals(value) != true)) {
                    this.IsViewField = value;
                    this.RaisePropertyChanged("IsView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastLoginDate {
            get {
                return this.LastLoginDateField;
            }
            set {
                if ((this.LastLoginDateField.Equals(value) != true)) {
                    this.LastLoginDateField = value;
                    this.RaisePropertyChanged("LastLoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListCorporateID {
            get {
                return this.ListCorporateIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCorporateIDField, value) != true)) {
                    this.ListCorporateIDField = value;
                    this.RaisePropertyChanged("ListCorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListFacilityID {
            get {
                return this.ListFacilityIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListFacilityIDField, value) != true)) {
                    this.ListFacilityIDField = value;
                    this.RaisePropertyChanged("ListFacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListRoleID {
            get {
                return this.ListRoleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListRoleIDField, value) != true)) {
                    this.ListRoleIDField = value;
                    this.RaisePropertyChanged("ListRoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((this.LoggedinByField.Equals(value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MenuID {
            get {
                return this.MenuIDField;
            }
            set {
                if ((this.MenuIDField.Equals(value) != true)) {
                    this.MenuIDField = value;
                    this.RaisePropertyChanged("MenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MultipleRoles {
            get {
                return this.MultipleRolesField;
            }
            set {
                if ((object.ReferenceEquals(this.MultipleRolesField, value) != true)) {
                    this.MultipleRolesField = value;
                    this.RaisePropertyChanged("MultipleRoles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PageMasterPermissionMultiRoleID {
            get {
                return this.PageMasterPermissionMultiRoleIDField;
            }
            set {
                if ((this.PageMasterPermissionMultiRoleIDField.Equals(value) != true)) {
                    this.PageMasterPermissionMultiRoleIDField = value;
                    this.RaisePropertyChanged("PageMasterPermissionMultiRoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageName {
            get {
                return this.PageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PageNameField, value) != true)) {
                    this.PageNameField = value;
                    this.RaisePropertyChanged("PageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PermissionID {
            get {
                return this.PermissionIDField;
            }
            set {
                if ((this.PermissionIDField.Equals(value) != true)) {
                    this.PermissionIDField = value;
                    this.RaisePropertyChanged("PermissionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RegionID {
            get {
                return this.RegionIDField;
            }
            set {
                if ((this.RegionIDField.Equals(value) != true)) {
                    this.RegionIDField = value;
                    this.RaisePropertyChanged("RegionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RoleUserID {
            get {
                return this.RoleUserIDField;
            }
            set {
                if ((this.RoleUserIDField.Equals(value) != true)) {
                    this.RoleUserIDField = value;
                    this.RaisePropertyChanged("RoleUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SubMenuId {
            get {
                return this.SubMenuIdField;
            }
            set {
                if ((this.SubMenuIdField.Equals(value) != true)) {
                    this.SubMenuIdField = value;
                    this.RaisePropertyChanged("SubMenuId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleField, value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserRoleID {
            get {
                return this.UserRoleIDField;
            }
            set {
                if ((this.UserRoleIDField.Equals(value) != true)) {
                    this.UserRoleIDField = value;
                    this.RaisePropertyChanged("UserRoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Xtn {
            get {
                return this.XtnField;
            }
            set {
                if ((this.XtnField.Equals(value) != true)) {
                    this.XtnField = value;
                    this.RaisePropertyChanged("Xtn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchUserDetails", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchUserDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UserRoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> XtnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveField, value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateDescription {
            get {
                return this.CorporateDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateDescriptionField, value) != true)) {
                    this.CorporateDescriptionField = value;
                    this.RaisePropertyChanged("CorporateDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedinByField, value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNo {
            get {
                return this.PhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNoField, value) != true)) {
                    this.PhoneNoField = value;
                    this.RaisePropertyChanged("PhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleField, value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UserRoleID {
            get {
                return this.UserRoleIDField;
            }
            set {
                if ((this.UserRoleIDField.Equals(value) != true)) {
                    this.UserRoleIDField = value;
                    this.RaisePropertyChanged("UserRoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Xtn {
            get {
                return this.XtnField;
            }
            set {
                if ((this.XtnField.Equals(value) != true)) {
                    this.XtnField = value;
                    this.RaisePropertyChanged("Xtn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALCorporate", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALCorporate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiededByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiededOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchCorporateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchTextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveField, value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateDescription {
            get {
                return this.CorporateDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateDescriptionField, value) != true)) {
                    this.CorporateDescriptionField = value;
                    this.RaisePropertyChanged("CorporateDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiededBy {
            get {
                return this.LastModifiededByField;
            }
            set {
                if ((this.LastModifiededByField.Equals(value) != true)) {
                    this.LastModifiededByField = value;
                    this.RaisePropertyChanged("LastModifiededBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiededOn {
            get {
                return this.LastModifiededOnField;
            }
            set {
                if ((this.LastModifiededOnField.Equals(value) != true)) {
                    this.LastModifiededOnField = value;
                    this.RaisePropertyChanged("LastModifiededOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((this.LoggedinByField.Equals(value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeField, value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POEmail {
            get {
                return this.POEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.POEmailField, value) != true)) {
                    this.POEmailField = value;
                    this.RaisePropertyChanged("POEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchCorporate {
            get {
                return this.SearchCorporateField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchCorporateField, value) != true)) {
                    this.SearchCorporateField = value;
                    this.RaisePropertyChanged("SearchCorporate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchText {
            get {
                return this.SearchTextField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchTextField, value) != true)) {
                    this.SearchTextField = value;
                    this.RaisePropertyChanged("SearchText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="chkvalidcorporate", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class chkvalidcorporate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FCorporateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateDescription {
            get {
                return this.CorporateDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateDescriptionField, value) != true)) {
                    this.CorporateDescriptionField = value;
                    this.RaisePropertyChanged("CorporateDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FCorporate {
            get {
                return this.FCorporateField;
            }
            set {
                if ((this.FCorporateField.Equals(value) != true)) {
                    this.FCorporateField = value;
                    this.RaisePropertyChanged("FCorporate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCategoryByListVendorID", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetCategoryByListVendorID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALCapitalReceiving", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALCapitalReceiving : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AudittrialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BalenceQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CPONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CPROField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalItemMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalReceivingDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalReceivingMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ClosedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipementListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long INSERTRECORDIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InvoicedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListCorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListFacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] OrderContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PackingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PartialByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PartialOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PricePerQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ReceivedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReceivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivingActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ReceivingOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VoidByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> VoidOnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audittrial {
            get {
                return this.AudittrialField;
            }
            set {
                if ((object.ReferenceEquals(this.AudittrialField, value) != true)) {
                    this.AudittrialField = value;
                    this.RaisePropertyChanged("Audittrial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BalenceQty {
            get {
                return this.BalenceQtyField;
            }
            set {
                if ((this.BalenceQtyField.Equals(value) != true)) {
                    this.BalenceQtyField = value;
                    this.RaisePropertyChanged("BalenceQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CPONo {
            get {
                return this.CPONoField;
            }
            set {
                if ((object.ReferenceEquals(this.CPONoField, value) != true)) {
                    this.CPONoField = value;
                    this.RaisePropertyChanged("CPONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CPRO {
            get {
                return this.CPROField;
            }
            set {
                if ((object.ReferenceEquals(this.CPROField, value) != true)) {
                    this.CPROField = value;
                    this.RaisePropertyChanged("CPRO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalItemMasterID {
            get {
                return this.CapitalItemMasterIDField;
            }
            set {
                if ((this.CapitalItemMasterIDField.Equals(value) != true)) {
                    this.CapitalItemMasterIDField = value;
                    this.RaisePropertyChanged("CapitalItemMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalOrderID {
            get {
                return this.CapitalOrderIDField;
            }
            set {
                if ((this.CapitalOrderIDField.Equals(value) != true)) {
                    this.CapitalOrderIDField = value;
                    this.RaisePropertyChanged("CapitalOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalReceivingDetailsID {
            get {
                return this.CapitalReceivingDetailsIDField;
            }
            set {
                if ((this.CapitalReceivingDetailsIDField.Equals(value) != true)) {
                    this.CapitalReceivingDetailsIDField = value;
                    this.RaisePropertyChanged("CapitalReceivingDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalReceivingMasterID {
            get {
                return this.CapitalReceivingMasterIDField;
            }
            set {
                if ((this.CapitalReceivingMasterIDField.Equals(value) != true)) {
                    this.CapitalReceivingMasterIDField = value;
                    this.RaisePropertyChanged("CapitalReceivingMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ClosedBy {
            get {
                return this.ClosedByField;
            }
            set {
                if ((this.ClosedByField.Equals(value) != true)) {
                    this.ClosedByField = value;
                    this.RaisePropertyChanged("ClosedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosedOn {
            get {
                return this.ClosedOnField;
            }
            set {
                if ((this.ClosedOnField.Equals(value) != true)) {
                    this.ClosedOnField = value;
                    this.RaisePropertyChanged("ClosedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipementList {
            get {
                return this.EquipementListField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipementListField, value) != true)) {
                    this.EquipementListField = value;
                    this.RaisePropertyChanged("EquipementList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategory {
            get {
                return this.EquipmentSubCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryField, value) != true)) {
                    this.EquipmentSubCategoryField = value;
                    this.RaisePropertyChanged("EquipmentSubCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FinalStatus {
            get {
                return this.FinalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.FinalStatusField, value) != true)) {
                    this.FinalStatusField = value;
                    this.RaisePropertyChanged("FinalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long INSERTRECORDID {
            get {
                return this.INSERTRECORDIDField;
            }
            set {
                if ((this.INSERTRECORDIDField.Equals(value) != true)) {
                    this.INSERTRECORDIDField = value;
                    this.RaisePropertyChanged("INSERTRECORDID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNo {
            get {
                return this.InvoiceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNoField, value) != true)) {
                    this.InvoiceNoField = value;
                    this.RaisePropertyChanged("InvoiceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceStatus {
            get {
                return this.InvoiceStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceStatusField, value) != true)) {
                    this.InvoiceStatusField = value;
                    this.RaisePropertyChanged("InvoiceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InvoicedBy {
            get {
                return this.InvoicedByField;
            }
            set {
                if ((this.InvoicedByField.Equals(value) != true)) {
                    this.InvoicedByField = value;
                    this.RaisePropertyChanged("InvoicedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListCorporateID {
            get {
                return this.ListCorporateIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCorporateIDField, value) != true)) {
                    this.ListCorporateIDField = value;
                    this.RaisePropertyChanged("ListCorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListFacilityID {
            get {
                return this.ListFacilityIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListFacilityIDField, value) != true)) {
                    this.ListFacilityIDField = value;
                    this.RaisePropertyChanged("ListFacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListVendorID {
            get {
                return this.ListVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListVendorIDField, value) != true)) {
                    this.ListVendorIDField = value;
                    this.RaisePropertyChanged("ListVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((this.LoggedinByField.Equals(value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] OrderContent {
            get {
                return this.OrderContentField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderContentField, value) != true)) {
                    this.OrderContentField = value;
                    this.RaisePropertyChanged("OrderContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherReason {
            get {
                return this.OtherReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherReasonField, value) != true)) {
                    this.OtherReasonField = value;
                    this.RaisePropertyChanged("OtherReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PackingDate {
            get {
                return this.PackingDateField;
            }
            set {
                if ((this.PackingDateField.Equals(value) != true)) {
                    this.PackingDateField = value;
                    this.RaisePropertyChanged("PackingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipNo {
            get {
                return this.PackingSlipNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipNoField, value) != true)) {
                    this.PackingSlipNoField = value;
                    this.RaisePropertyChanged("PackingSlipNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PartialBy {
            get {
                return this.PartialByField;
            }
            set {
                if ((this.PartialByField.Equals(value) != true)) {
                    this.PartialByField = value;
                    this.RaisePropertyChanged("PartialBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PartialOn {
            get {
                return this.PartialOnField;
            }
            set {
                if ((this.PartialOnField.Equals(value) != true)) {
                    this.PartialOnField = value;
                    this.RaisePropertyChanged("PartialOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PricePerQty {
            get {
                return this.PricePerQtyField;
            }
            set {
                if ((this.PricePerQtyField.Equals(value) != true)) {
                    this.PricePerQtyField = value;
                    this.RaisePropertyChanged("PricePerQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ReceivedBy {
            get {
                return this.ReceivedByField;
            }
            set {
                if ((this.ReceivedByField.Equals(value) != true)) {
                    this.ReceivedByField = value;
                    this.RaisePropertyChanged("ReceivedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReceivedQty {
            get {
                return this.ReceivedQtyField;
            }
            set {
                if ((this.ReceivedQtyField.Equals(value) != true)) {
                    this.ReceivedQtyField = value;
                    this.RaisePropertyChanged("ReceivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivingAction {
            get {
                return this.ReceivingActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivingActionField, value) != true)) {
                    this.ReceivingActionField = value;
                    this.RaisePropertyChanged("ReceivingAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ReceivingOrder {
            get {
                return this.ReceivingOrderField;
            }
            set {
                if ((this.ReceivingOrderField.Equals(value) != true)) {
                    this.ReceivingOrderField = value;
                    this.RaisePropertyChanged("ReceivingOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VoidBy {
            get {
                return this.VoidByField;
            }
            set {
                if ((this.VoidByField.Equals(value) != true)) {
                    this.VoidByField = value;
                    this.RaisePropertyChanged("VoidBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> VoidOn {
            get {
                return this.VoidOnField;
            }
            set {
                if ((this.VoidOnField.Equals(value) != true)) {
                    this.VoidOnField = value;
                    this.RaisePropertyChanged("VoidOn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchCapitalReceivingSummaryReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchCapitalReceivingSummaryReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CPRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalItemMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CapitalOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalReceivingMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAccount {
            get {
                return this.BillAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BillAccountField, value) != true)) {
                    this.BillAccountField = value;
                    this.RaisePropertyChanged("BillAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CPRONo {
            get {
                return this.CPRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.CPRONoField, value) != true)) {
                    this.CPRONoField = value;
                    this.RaisePropertyChanged("CPRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CRONo {
            get {
                return this.CRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.CRONoField, value) != true)) {
                    this.CRONoField = value;
                    this.RaisePropertyChanged("CRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalItemMasterID {
            get {
                return this.CapitalItemMasterIDField;
            }
            set {
                if ((this.CapitalItemMasterIDField.Equals(value) != true)) {
                    this.CapitalItemMasterIDField = value;
                    this.RaisePropertyChanged("CapitalItemMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CapitalOrderID {
            get {
                return this.CapitalOrderIDField;
            }
            set {
                if ((this.CapitalOrderIDField.Equals(value) != true)) {
                    this.CapitalOrderIDField = value;
                    this.RaisePropertyChanged("CapitalOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalReceivingMasterID {
            get {
                return this.CapitalReceivingMasterIDField;
            }
            set {
                if ((this.CapitalReceivingMasterIDField.Equals(value) != true)) {
                    this.CapitalReceivingMasterIDField = value;
                    this.RaisePropertyChanged("CapitalReceivingMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceDateField, value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNo {
            get {
                return this.InvoiceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNoField, value) != true)) {
                    this.InvoiceNoField = value;
                    this.RaisePropertyChanged("InvoiceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingDate {
            get {
                return this.PackingDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingDateField, value) != true)) {
                    this.PackingDateField = value;
                    this.RaisePropertyChanged("PackingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipNo {
            get {
                return this.PackingSlipNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipNoField, value) != true)) {
                    this.PackingSlipNoField = value;
                    this.RaisePropertyChanged("PackingSlipNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivedDateField, value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAccount {
            get {
                return this.ShipAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAccountField, value) != true)) {
                    this.ShipAccountField = value;
                    this.RaisePropertyChanged("ShipAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALRequestITReceiving", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALRequestITReceiving : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AudittrialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BalacedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ClosedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquimentSubCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipmentListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITNNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ITReceivingDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ITReceivingMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InsertRecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InvoicedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] OrderContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PackingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PartialByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PartialOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PricePerQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReceivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivingactionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RequestITMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RequestITOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingcostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VoidByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> VoidOnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audittrial {
            get {
                return this.AudittrialField;
            }
            set {
                if ((object.ReferenceEquals(this.AudittrialField, value) != true)) {
                    this.AudittrialField = value;
                    this.RaisePropertyChanged("Audittrial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BalacedQty {
            get {
                return this.BalacedQtyField;
            }
            set {
                if ((this.BalacedQtyField.Equals(value) != true)) {
                    this.BalacedQtyField = value;
                    this.RaisePropertyChanged("BalacedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ClosedBy {
            get {
                return this.ClosedByField;
            }
            set {
                if ((this.ClosedByField.Equals(value) != true)) {
                    this.ClosedByField = value;
                    this.RaisePropertyChanged("ClosedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosedOn {
            get {
                return this.ClosedOnField;
            }
            set {
                if ((this.ClosedOnField.Equals(value) != true)) {
                    this.ClosedOnField = value;
                    this.RaisePropertyChanged("ClosedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateIDs {
            get {
                return this.CorporateIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateIDsField, value) != true)) {
                    this.CorporateIDsField = value;
                    this.RaisePropertyChanged("CorporateIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquimentSubCategory {
            get {
                return this.EquimentSubCategoryField;
            }
            set {
                if ((this.EquimentSubCategoryField.Equals(value) != true)) {
                    this.EquimentSubCategoryField = value;
                    this.RaisePropertyChanged("EquimentSubCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipmentList {
            get {
                return this.EquipmentListField;
            }
            set {
                if ((this.EquipmentListField.Equals(value) != true)) {
                    this.EquipmentListField = value;
                    this.RaisePropertyChanged("EquipmentList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityIDs {
            get {
                return this.FacilityIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityIDsField, value) != true)) {
                    this.FacilityIDsField = value;
                    this.RaisePropertyChanged("FacilityIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FinalStatus {
            get {
                return this.FinalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.FinalStatusField, value) != true)) {
                    this.FinalStatusField = value;
                    this.RaisePropertyChanged("FinalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITNNo {
            get {
                return this.ITNNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITNNoField, value) != true)) {
                    this.ITNNoField = value;
                    this.RaisePropertyChanged("ITNNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITRNo {
            get {
                return this.ITRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITRNoField, value) != true)) {
                    this.ITRNoField = value;
                    this.RaisePropertyChanged("ITRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ITReceivingDetailsID {
            get {
                return this.ITReceivingDetailsIDField;
            }
            set {
                if ((this.ITReceivingDetailsIDField.Equals(value) != true)) {
                    this.ITReceivingDetailsIDField = value;
                    this.RaisePropertyChanged("ITReceivingDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ITReceivingMasterID {
            get {
                return this.ITReceivingMasterIDField;
            }
            set {
                if ((this.ITReceivingMasterIDField.Equals(value) != true)) {
                    this.ITReceivingMasterIDField = value;
                    this.RaisePropertyChanged("ITReceivingMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InsertRecordID {
            get {
                return this.InsertRecordIDField;
            }
            set {
                if ((this.InsertRecordIDField.Equals(value) != true)) {
                    this.InsertRecordIDField = value;
                    this.RaisePropertyChanged("InsertRecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNo {
            get {
                return this.InvoiceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNoField, value) != true)) {
                    this.InvoiceNoField = value;
                    this.RaisePropertyChanged("InvoiceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceStatus {
            get {
                return this.InvoiceStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceStatusField, value) != true)) {
                    this.InvoiceStatusField = value;
                    this.RaisePropertyChanged("InvoiceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InvoicedBy {
            get {
                return this.InvoicedByField;
            }
            set {
                if ((this.InvoicedByField.Equals(value) != true)) {
                    this.InvoicedByField = value;
                    this.RaisePropertyChanged("InvoicedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((this.LoggedinByField.Equals(value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] OrderContent {
            get {
                return this.OrderContentField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderContentField, value) != true)) {
                    this.OrderContentField = value;
                    this.RaisePropertyChanged("OrderContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherReason {
            get {
                return this.OtherReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherReasonField, value) != true)) {
                    this.OtherReasonField = value;
                    this.RaisePropertyChanged("OtherReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PackingDate {
            get {
                return this.PackingDateField;
            }
            set {
                if ((this.PackingDateField.Equals(value) != true)) {
                    this.PackingDateField = value;
                    this.RaisePropertyChanged("PackingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipNo {
            get {
                return this.PackingSlipNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipNoField, value) != true)) {
                    this.PackingSlipNoField = value;
                    this.RaisePropertyChanged("PackingSlipNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PartialBy {
            get {
                return this.PartialByField;
            }
            set {
                if ((this.PartialByField.Equals(value) != true)) {
                    this.PartialByField = value;
                    this.RaisePropertyChanged("PartialBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PartialOn {
            get {
                return this.PartialOnField;
            }
            set {
                if ((this.PartialOnField.Equals(value) != true)) {
                    this.PartialOnField = value;
                    this.RaisePropertyChanged("PartialOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PricePerQty {
            get {
                return this.PricePerQtyField;
            }
            set {
                if ((this.PricePerQtyField.Equals(value) != true)) {
                    this.PricePerQtyField = value;
                    this.RaisePropertyChanged("PricePerQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReceivedQty {
            get {
                return this.ReceivedQtyField;
            }
            set {
                if ((this.ReceivedQtyField.Equals(value) != true)) {
                    this.ReceivedQtyField = value;
                    this.RaisePropertyChanged("ReceivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Receivingaction {
            get {
                return this.ReceivingactionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivingactionField, value) != true)) {
                    this.ReceivingactionField = value;
                    this.RaisePropertyChanged("Receivingaction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RequestITMasterID {
            get {
                return this.RequestITMasterIDField;
            }
            set {
                if ((this.RequestITMasterIDField.Equals(value) != true)) {
                    this.RequestITMasterIDField = value;
                    this.RaisePropertyChanged("RequestITMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RequestITOrderID {
            get {
                return this.RequestITOrderIDField;
            }
            set {
                if ((this.RequestITOrderIDField.Equals(value) != true)) {
                    this.RequestITOrderIDField = value;
                    this.RaisePropertyChanged("RequestITOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shippingcost {
            get {
                return this.ShippingcostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingcostField, value) != true)) {
                    this.ShippingcostField = value;
                    this.RaisePropertyChanged("Shippingcost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorIDs {
            get {
                return this.VendorIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorIDsField, value) != true)) {
                    this.VendorIDsField = value;
                    this.RaisePropertyChanged("VendorIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VoidBy {
            get {
                return this.VoidByField;
            }
            set {
                if ((this.VoidByField.Equals(value) != true)) {
                    this.VoidByField = value;
                    this.RaisePropertyChanged("VoidBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> VoidOn {
            get {
                return this.VoidOnField;
            }
            set {
                if ((this.VoidOnField.Equals(value) != true)) {
                    this.VoidOnField = value;
                    this.RaisePropertyChanged("VoidOn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchITReceivingSummaryReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchITReceivingSummaryReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITNNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ITReceivingMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RequestITMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> RequestITOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAccount {
            get {
                return this.BillAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BillAccountField, value) != true)) {
                    this.BillAccountField = value;
                    this.RaisePropertyChanged("BillAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Facility {
            get {
                return this.FacilityField;
            }
            set {
                if ((this.FacilityField.Equals(value) != true)) {
                    this.FacilityField = value;
                    this.RaisePropertyChanged("Facility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITNNo {
            get {
                return this.ITNNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITNNoField, value) != true)) {
                    this.ITNNoField = value;
                    this.RaisePropertyChanged("ITNNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITRNo {
            get {
                return this.ITRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITRNoField, value) != true)) {
                    this.ITRNoField = value;
                    this.RaisePropertyChanged("ITRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITRONo {
            get {
                return this.ITRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITRONoField, value) != true)) {
                    this.ITRONoField = value;
                    this.RaisePropertyChanged("ITRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ITReceivingMasterID {
            get {
                return this.ITReceivingMasterIDField;
            }
            set {
                if ((this.ITReceivingMasterIDField.Equals(value) != true)) {
                    this.ITReceivingMasterIDField = value;
                    this.RaisePropertyChanged("ITReceivingMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceDateField, value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNo {
            get {
                return this.InvoiceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNoField, value) != true)) {
                    this.InvoiceNoField = value;
                    this.RaisePropertyChanged("InvoiceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceStatus {
            get {
                return this.InvoiceStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceStatusField, value) != true)) {
                    this.InvoiceStatusField = value;
                    this.RaisePropertyChanged("InvoiceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingDate {
            get {
                return this.PackingDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingDateField, value) != true)) {
                    this.PackingDateField = value;
                    this.RaisePropertyChanged("PackingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipNo {
            get {
                return this.PackingSlipNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipNoField, value) != true)) {
                    this.PackingSlipNoField = value;
                    this.RaisePropertyChanged("PackingSlipNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivedDateField, value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RequestITMasterID {
            get {
                return this.RequestITMasterIDField;
            }
            set {
                if ((this.RequestITMasterIDField.Equals(value) != true)) {
                    this.RequestITMasterIDField = value;
                    this.RaisePropertyChanged("RequestITMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> RequestITOrderID {
            get {
                return this.RequestITOrderIDField;
            }
            set {
                if ((this.RequestITOrderIDField.Equals(value) != true)) {
                    this.RequestITOrderIDField = value;
                    this.RaisePropertyChanged("RequestITOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAccount {
            get {
                return this.ShipAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAccountField, value) != true)) {
                    this.ShipAccountField = value;
                    this.RaisePropertyChanged("ShipAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALMachinePartsReceiveOrder", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALMachinePartsReceiveOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BalanceQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ClosedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DeletedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long INSERTRECORDIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvenValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InvoicedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListCorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListFacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Inventory.Inventoryserref.GetMPRDetailsbyMPRMasterID[] MPDetailsListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MPRMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MachinePartsReceiveDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MachinePartsReceiveMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MachinePartsRequestOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] OrderContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OthersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PackingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PackingSlipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PartialByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PartialOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReceivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivingActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatekeyvalueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VoidByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> VoidOnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BalanceQty {
            get {
                return this.BalanceQtyField;
            }
            set {
                if ((this.BalanceQtyField.Equals(value) != true)) {
                    this.BalanceQtyField = value;
                    this.RaisePropertyChanged("BalanceQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ClosedBy {
            get {
                return this.ClosedByField;
            }
            set {
                if ((this.ClosedByField.Equals(value) != true)) {
                    this.ClosedByField = value;
                    this.RaisePropertyChanged("ClosedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosedOn {
            get {
                return this.ClosedOnField;
            }
            set {
                if ((this.ClosedOnField.Equals(value) != true)) {
                    this.ClosedOnField = value;
                    this.RaisePropertyChanged("ClosedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DeletedBy {
            get {
                return this.DeletedByField;
            }
            set {
                if ((this.DeletedByField.Equals(value) != true)) {
                    this.DeletedByField = value;
                    this.RaisePropertyChanged("DeletedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FinalStatus {
            get {
                return this.FinalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.FinalStatusField, value) != true)) {
                    this.FinalStatusField = value;
                    this.RaisePropertyChanged("FinalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long INSERTRECORDID {
            get {
                return this.INSERTRECORDIDField;
            }
            set {
                if ((this.INSERTRECORDIDField.Equals(value) != true)) {
                    this.INSERTRECORDIDField = value;
                    this.RaisePropertyChanged("INSERTRECORDID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvenValue {
            get {
                return this.InvenValueField;
            }
            set {
                if ((object.ReferenceEquals(this.InvenValueField, value) != true)) {
                    this.InvenValueField = value;
                    this.RaisePropertyChanged("InvenValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNo {
            get {
                return this.InvoiceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNoField, value) != true)) {
                    this.InvoiceNoField = value;
                    this.RaisePropertyChanged("InvoiceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceStatus {
            get {
                return this.InvoiceStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceStatusField, value) != true)) {
                    this.InvoiceStatusField = value;
                    this.RaisePropertyChanged("InvoiceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InvoicedBy {
            get {
                return this.InvoicedByField;
            }
            set {
                if ((this.InvoicedByField.Equals(value) != true)) {
                    this.InvoicedByField = value;
                    this.RaisePropertyChanged("InvoicedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListCorporateID {
            get {
                return this.ListCorporateIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCorporateIDField, value) != true)) {
                    this.ListCorporateIDField = value;
                    this.RaisePropertyChanged("ListCorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListFacilityID {
            get {
                return this.ListFacilityIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListFacilityIDField, value) != true)) {
                    this.ListFacilityIDField = value;
                    this.RaisePropertyChanged("ListFacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListVendorID {
            get {
                return this.ListVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListVendorIDField, value) != true)) {
                    this.ListVendorIDField = value;
                    this.RaisePropertyChanged("ListVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((this.LoggedinByField.Equals(value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Inventory.Inventoryserref.GetMPRDetailsbyMPRMasterID[] MPDetailsList {
            get {
                return this.MPDetailsListField;
            }
            set {
                if ((object.ReferenceEquals(this.MPDetailsListField, value) != true)) {
                    this.MPDetailsListField = value;
                    this.RaisePropertyChanged("MPDetailsList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPONo {
            get {
                return this.MPONoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPONoField, value) != true)) {
                    this.MPONoField = value;
                    this.RaisePropertyChanged("MPONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MPRMasterID {
            get {
                return this.MPRMasterIDField;
            }
            set {
                if ((this.MPRMasterIDField.Equals(value) != true)) {
                    this.MPRMasterIDField = value;
                    this.RaisePropertyChanged("MPRMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPRONo {
            get {
                return this.MPRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPRONoField, value) != true)) {
                    this.MPRONoField = value;
                    this.RaisePropertyChanged("MPRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MachinePartsReceiveDetailsID {
            get {
                return this.MachinePartsReceiveDetailsIDField;
            }
            set {
                if ((this.MachinePartsReceiveDetailsIDField.Equals(value) != true)) {
                    this.MachinePartsReceiveDetailsIDField = value;
                    this.RaisePropertyChanged("MachinePartsReceiveDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MachinePartsReceiveMasterID {
            get {
                return this.MachinePartsReceiveMasterIDField;
            }
            set {
                if ((this.MachinePartsReceiveMasterIDField.Equals(value) != true)) {
                    this.MachinePartsReceiveMasterIDField = value;
                    this.RaisePropertyChanged("MachinePartsReceiveMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MachinePartsRequestOrderID {
            get {
                return this.MachinePartsRequestOrderIDField;
            }
            set {
                if ((this.MachinePartsRequestOrderIDField.Equals(value) != true)) {
                    this.MachinePartsRequestOrderIDField = value;
                    this.RaisePropertyChanged("MachinePartsRequestOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] OrderContent {
            get {
                return this.OrderContentField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderContentField, value) != true)) {
                    this.OrderContentField = value;
                    this.RaisePropertyChanged("OrderContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Others {
            get {
                return this.OthersField;
            }
            set {
                if ((object.ReferenceEquals(this.OthersField, value) != true)) {
                    this.OthersField = value;
                    this.RaisePropertyChanged("Others");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PackingDate {
            get {
                return this.PackingDateField;
            }
            set {
                if ((this.PackingDateField.Equals(value) != true)) {
                    this.PackingDateField = value;
                    this.RaisePropertyChanged("PackingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PackingSlipDate {
            get {
                return this.PackingSlipDateField;
            }
            set {
                if ((this.PackingSlipDateField.Equals(value) != true)) {
                    this.PackingSlipDateField = value;
                    this.RaisePropertyChanged("PackingSlipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipNo {
            get {
                return this.PackingSlipNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipNoField, value) != true)) {
                    this.PackingSlipNoField = value;
                    this.RaisePropertyChanged("PackingSlipNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PartialBy {
            get {
                return this.PartialByField;
            }
            set {
                if ((this.PartialByField.Equals(value) != true)) {
                    this.PartialByField = value;
                    this.RaisePropertyChanged("PartialBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PartialOn {
            get {
                return this.PartialOnField;
            }
            set {
                if ((this.PartialOnField.Equals(value) != true)) {
                    this.PartialOnField = value;
                    this.RaisePropertyChanged("PartialOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReceivedQty {
            get {
                return this.ReceivedQtyField;
            }
            set {
                if ((this.ReceivedQtyField.Equals(value) != true)) {
                    this.ReceivedQtyField = value;
                    this.RaisePropertyChanged("ReceivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivingAction {
            get {
                return this.ReceivingActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivingActionField, value) != true)) {
                    this.ReceivingActionField = value;
                    this.RaisePropertyChanged("ReceivingAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Updatekeyvalue {
            get {
                return this.UpdatekeyvalueField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatekeyvalueField, value) != true)) {
                    this.UpdatekeyvalueField = value;
                    this.RaisePropertyChanged("Updatekeyvalue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VoidBy {
            get {
                return this.VoidByField;
            }
            set {
                if ((this.VoidByField.Equals(value) != true)) {
                    this.VoidByField = value;
                    this.RaisePropertyChanged("VoidBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> VoidOn {
            get {
                return this.VoidOnField;
            }
            set {
                if ((this.VoidOnField.Equals(value) != true)) {
                    this.VoidOnField = value;
                    this.RaisePropertyChanged("VoidOn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMPRDetailsbyMPRMasterID", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetMPRDetailsbyMPRMasterID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LockedbyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MPRDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MPRMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PricePerUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((this.IsReadOnlyField.Equals(value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemIDField, value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Lockedby {
            get {
                return this.LockedbyField;
            }
            set {
                if ((this.LockedbyField.Equals(value) != true)) {
                    this.LockedbyField = value;
                    this.RaisePropertyChanged("Lockedby");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MPRDetailsID {
            get {
                return this.MPRDetailsIDField;
            }
            set {
                if ((this.MPRDetailsIDField.Equals(value) != true)) {
                    this.MPRDetailsIDField = value;
                    this.RaisePropertyChanged("MPRDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MPRMasterID {
            get {
                return this.MPRMasterIDField;
            }
            set {
                if ((this.MPRMasterIDField.Equals(value) != true)) {
                    this.MPRMasterIDField = value;
                    this.RaisePropertyChanged("MPRMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderQuantity {
            get {
                return this.OrderQuantityField;
            }
            set {
                if ((this.OrderQuantityField.Equals(value) != true)) {
                    this.OrderQuantityField = value;
                    this.RaisePropertyChanged("OrderQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PricePerUnit {
            get {
                return this.PricePerUnitField;
            }
            set {
                if ((this.PricePerUnitField.Equals(value) != true)) {
                    this.PricePerUnitField = value;
                    this.RaisePropertyChanged("PricePerUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchMachinePartsReceiveSummaryReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchMachinePartsReceiveSummaryReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MPRMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MachinePartsReceivingMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MachinePartsRequestOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAccount {
            get {
                return this.BillAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BillAccountField, value) != true)) {
                    this.BillAccountField = value;
                    this.RaisePropertyChanged("BillAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceDateField, value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNo {
            get {
                return this.InvoiceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNoField, value) != true)) {
                    this.InvoiceNoField = value;
                    this.RaisePropertyChanged("InvoiceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPONo {
            get {
                return this.MPONoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPONoField, value) != true)) {
                    this.MPONoField = value;
                    this.RaisePropertyChanged("MPONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MPRMasterID {
            get {
                return this.MPRMasterIDField;
            }
            set {
                if ((this.MPRMasterIDField.Equals(value) != true)) {
                    this.MPRMasterIDField = value;
                    this.RaisePropertyChanged("MPRMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPRONo {
            get {
                return this.MPRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPRONoField, value) != true)) {
                    this.MPRONoField = value;
                    this.RaisePropertyChanged("MPRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MachinePartsReceivingMasterID {
            get {
                return this.MachinePartsReceivingMasterIDField;
            }
            set {
                if ((this.MachinePartsReceivingMasterIDField.Equals(value) != true)) {
                    this.MachinePartsReceivingMasterIDField = value;
                    this.RaisePropertyChanged("MachinePartsReceivingMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MachinePartsRequestOrderID {
            get {
                return this.MachinePartsRequestOrderIDField;
            }
            set {
                if ((this.MachinePartsRequestOrderIDField.Equals(value) != true)) {
                    this.MachinePartsRequestOrderIDField = value;
                    this.RaisePropertyChanged("MachinePartsRequestOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipDate {
            get {
                return this.PackingSlipDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipDateField, value) != true)) {
                    this.PackingSlipDateField = value;
                    this.RaisePropertyChanged("PackingSlipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipNo {
            get {
                return this.PackingSlipNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipNoField, value) != true)) {
                    this.PackingSlipNoField = value;
                    this.RaisePropertyChanged("PackingSlipNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivedDateField, value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAccount {
            get {
                return this.ShipAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAccountField, value) != true)) {
                    this.ShipAccountField = value;
                    this.RaisePropertyChanged("ShipAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALMedicalSupplyReceivingOrder", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALMedicalSupplyReceivingOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BalanceQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ClosedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DeletedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long INSERTRECORDIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvenValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InvoicedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockTimeOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalSuppliesReceivingDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalSuppliesReceivingMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalSuppliesRequestDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalSuppliesRequestOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalSupplyMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] OrderContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PRMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PackingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PackingSlipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PartialByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PartialOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReceivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivingActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchFiltersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatekeyvalueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VoidByField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BalanceQty {
            get {
                return this.BalanceQtyField;
            }
            set {
                if ((this.BalanceQtyField.Equals(value) != true)) {
                    this.BalanceQtyField = value;
                    this.RaisePropertyChanged("BalanceQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ClosedBy {
            get {
                return this.ClosedByField;
            }
            set {
                if ((this.ClosedByField.Equals(value) != true)) {
                    this.ClosedByField = value;
                    this.RaisePropertyChanged("ClosedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosedOn {
            get {
                return this.ClosedOnField;
            }
            set {
                if ((this.ClosedOnField.Equals(value) != true)) {
                    this.ClosedOnField = value;
                    this.RaisePropertyChanged("ClosedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DeletedBy {
            get {
                return this.DeletedByField;
            }
            set {
                if ((this.DeletedByField.Equals(value) != true)) {
                    this.DeletedByField = value;
                    this.RaisePropertyChanged("DeletedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityName {
            get {
                return this.FacilityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityNameField, value) != true)) {
                    this.FacilityNameField = value;
                    this.RaisePropertyChanged("FacilityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FinalStatus {
            get {
                return this.FinalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.FinalStatusField, value) != true)) {
                    this.FinalStatusField = value;
                    this.RaisePropertyChanged("FinalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long INSERTRECORDID {
            get {
                return this.INSERTRECORDIDField;
            }
            set {
                if ((this.INSERTRECORDIDField.Equals(value) != true)) {
                    this.INSERTRECORDIDField = value;
                    this.RaisePropertyChanged("INSERTRECORDID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvenValue {
            get {
                return this.InvenValueField;
            }
            set {
                if ((object.ReferenceEquals(this.InvenValueField, value) != true)) {
                    this.InvenValueField = value;
                    this.RaisePropertyChanged("InvenValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNo {
            get {
                return this.InvoiceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNoField, value) != true)) {
                    this.InvoiceNoField = value;
                    this.RaisePropertyChanged("InvoiceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceStatus {
            get {
                return this.InvoiceStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceStatusField, value) != true)) {
                    this.InvoiceStatusField = value;
                    this.RaisePropertyChanged("InvoiceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InvoicedBy {
            get {
                return this.InvoicedByField;
            }
            set {
                if ((this.InvoicedByField.Equals(value) != true)) {
                    this.InvoicedByField = value;
                    this.RaisePropertyChanged("InvoicedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockTimeOut {
            get {
                return this.LockTimeOutField;
            }
            set {
                if ((object.ReferenceEquals(this.LockTimeOutField, value) != true)) {
                    this.LockTimeOutField = value;
                    this.RaisePropertyChanged("LockTimeOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((this.LoggedinByField.Equals(value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalSuppliesReceivingDetailsID {
            get {
                return this.MedicalSuppliesReceivingDetailsIDField;
            }
            set {
                if ((this.MedicalSuppliesReceivingDetailsIDField.Equals(value) != true)) {
                    this.MedicalSuppliesReceivingDetailsIDField = value;
                    this.RaisePropertyChanged("MedicalSuppliesReceivingDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalSuppliesReceivingMasterID {
            get {
                return this.MedicalSuppliesReceivingMasterIDField;
            }
            set {
                if ((this.MedicalSuppliesReceivingMasterIDField.Equals(value) != true)) {
                    this.MedicalSuppliesReceivingMasterIDField = value;
                    this.RaisePropertyChanged("MedicalSuppliesReceivingMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalSuppliesRequestDetailsID {
            get {
                return this.MedicalSuppliesRequestDetailsIDField;
            }
            set {
                if ((this.MedicalSuppliesRequestDetailsIDField.Equals(value) != true)) {
                    this.MedicalSuppliesRequestDetailsIDField = value;
                    this.RaisePropertyChanged("MedicalSuppliesRequestDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalSuppliesRequestOrderID {
            get {
                return this.MedicalSuppliesRequestOrderIDField;
            }
            set {
                if ((this.MedicalSuppliesRequestOrderIDField.Equals(value) != true)) {
                    this.MedicalSuppliesRequestOrderIDField = value;
                    this.RaisePropertyChanged("MedicalSuppliesRequestOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalSupplyMasterID {
            get {
                return this.MedicalSupplyMasterIDField;
            }
            set {
                if ((this.MedicalSupplyMasterIDField.Equals(value) != true)) {
                    this.MedicalSupplyMasterIDField = value;
                    this.RaisePropertyChanged("MedicalSupplyMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] OrderContent {
            get {
                return this.OrderContentField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderContentField, value) != true)) {
                    this.OrderContentField = value;
                    this.RaisePropertyChanged("OrderContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherReason {
            get {
                return this.OtherReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherReasonField, value) != true)) {
                    this.OtherReasonField = value;
                    this.RaisePropertyChanged("OtherReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONo {
            get {
                return this.PONoField;
            }
            set {
                if ((object.ReferenceEquals(this.PONoField, value) != true)) {
                    this.PONoField = value;
                    this.RaisePropertyChanged("PONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PRMasterID {
            get {
                return this.PRMasterIDField;
            }
            set {
                if ((this.PRMasterIDField.Equals(value) != true)) {
                    this.PRMasterIDField = value;
                    this.RaisePropertyChanged("PRMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRNo {
            get {
                return this.PRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PRNoField, value) != true)) {
                    this.PRNoField = value;
                    this.RaisePropertyChanged("PRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PackingDate {
            get {
                return this.PackingDateField;
            }
            set {
                if ((this.PackingDateField.Equals(value) != true)) {
                    this.PackingDateField = value;
                    this.RaisePropertyChanged("PackingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PackingSlipDate {
            get {
                return this.PackingSlipDateField;
            }
            set {
                if ((this.PackingSlipDateField.Equals(value) != true)) {
                    this.PackingSlipDateField = value;
                    this.RaisePropertyChanged("PackingSlipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipNo {
            get {
                return this.PackingSlipNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipNoField, value) != true)) {
                    this.PackingSlipNoField = value;
                    this.RaisePropertyChanged("PackingSlipNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PartialBy {
            get {
                return this.PartialByField;
            }
            set {
                if ((this.PartialByField.Equals(value) != true)) {
                    this.PartialByField = value;
                    this.RaisePropertyChanged("PartialBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PartialOn {
            get {
                return this.PartialOnField;
            }
            set {
                if ((this.PartialOnField.Equals(value) != true)) {
                    this.PartialOnField = value;
                    this.RaisePropertyChanged("PartialOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReceivedQty {
            get {
                return this.ReceivedQtyField;
            }
            set {
                if ((this.ReceivedQtyField.Equals(value) != true)) {
                    this.ReceivedQtyField = value;
                    this.RaisePropertyChanged("ReceivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivingAction {
            get {
                return this.ReceivingActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivingActionField, value) != true)) {
                    this.ReceivingActionField = value;
                    this.RaisePropertyChanged("ReceivingAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchFilters {
            get {
                return this.SearchFiltersField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchFiltersField, value) != true)) {
                    this.SearchFiltersField = value;
                    this.RaisePropertyChanged("SearchFilters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((this.ShippingCostField.Equals(value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((this.TaxField.Equals(value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Updatekeyvalue {
            get {
                return this.UpdatekeyvalueField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatekeyvalueField, value) != true)) {
                    this.UpdatekeyvalueField = value;
                    this.RaisePropertyChanged("Updatekeyvalue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Vendor {
            get {
                return this.VendorField;
            }
            set {
                if ((this.VendorField.Equals(value) != true)) {
                    this.VendorField = value;
                    this.RaisePropertyChanged("Vendor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VoidBy {
            get {
                return this.VoidByField;
            }
            set {
                if ((this.VoidByField.Equals(value) != true)) {
                    this.VoidByField = value;
                    this.RaisePropertyChanged("VoidBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchMedicalSuppliesReceivingSummaryReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchMedicalSuppliesReceivingSummaryReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalSuppliesReceivingMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MedicalSuppliesRequestOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PRMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAccount {
            get {
                return this.BillAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BillAccountField, value) != true)) {
                    this.BillAccountField = value;
                    this.RaisePropertyChanged("BillAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FinalStatus {
            get {
                return this.FinalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.FinalStatusField, value) != true)) {
                    this.FinalStatusField = value;
                    this.RaisePropertyChanged("FinalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceDateField, value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNo {
            get {
                return this.InvoiceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNoField, value) != true)) {
                    this.InvoiceNoField = value;
                    this.RaisePropertyChanged("InvoiceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceStatus {
            get {
                return this.InvoiceStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceStatusField, value) != true)) {
                    this.InvoiceStatusField = value;
                    this.RaisePropertyChanged("InvoiceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalSuppliesReceivingMasterID {
            get {
                return this.MedicalSuppliesReceivingMasterIDField;
            }
            set {
                if ((this.MedicalSuppliesReceivingMasterIDField.Equals(value) != true)) {
                    this.MedicalSuppliesReceivingMasterIDField = value;
                    this.RaisePropertyChanged("MedicalSuppliesReceivingMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MedicalSuppliesRequestOrderID {
            get {
                return this.MedicalSuppliesRequestOrderIDField;
            }
            set {
                if ((this.MedicalSuppliesRequestOrderIDField.Equals(value) != true)) {
                    this.MedicalSuppliesRequestOrderIDField = value;
                    this.RaisePropertyChanged("MedicalSuppliesRequestOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONo {
            get {
                return this.PONoField;
            }
            set {
                if ((object.ReferenceEquals(this.PONoField, value) != true)) {
                    this.PONoField = value;
                    this.RaisePropertyChanged("PONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PRMasterID {
            get {
                return this.PRMasterIDField;
            }
            set {
                if ((this.PRMasterIDField.Equals(value) != true)) {
                    this.PRMasterIDField = value;
                    this.RaisePropertyChanged("PRMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRONo {
            get {
                return this.PRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.PRONoField, value) != true)) {
                    this.PRONoField = value;
                    this.RaisePropertyChanged("PRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingDate {
            get {
                return this.PackingDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingDateField, value) != true)) {
                    this.PackingDateField = value;
                    this.RaisePropertyChanged("PackingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipNo {
            get {
                return this.PackingSlipNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipNoField, value) != true)) {
                    this.PackingSlipNoField = value;
                    this.RaisePropertyChanged("PackingSlipNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivedDateField, value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAccount {
            get {
                return this.ShipAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAccountField, value) != true)) {
                    this.ShipAccountField = value;
                    this.RaisePropertyChanged("ShipAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((this.ShippingField.Equals(value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((this.TaxField.Equals(value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidFaciliityAccountCode", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class ValidFaciliityAccountCode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GPAccountCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GPAccountCode {
            get {
                return this.GPAccountCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GPAccountCodeField, value) != true)) {
                    this.GPAccountCodeField = value;
                    this.RaisePropertyChanged("GPAccountCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALVendorOrderDue", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALVendorOrderDue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DaytoToNotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DeliveryWindowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifitedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifitedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListCorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListFacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoggedInByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OrderDueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderTypestrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorOrderdueIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DaytoToNotify {
            get {
                return this.DaytoToNotifyField;
            }
            set {
                if ((this.DaytoToNotifyField.Equals(value) != true)) {
                    this.DaytoToNotifyField = value;
                    this.RaisePropertyChanged("DaytoToNotify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeliveryDate {
            get {
                return this.DeliveryDateField;
            }
            set {
                if ((this.DeliveryDateField.Equals(value) != true)) {
                    this.DeliveryDateField = value;
                    this.RaisePropertyChanged("DeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DeliveryWindow {
            get {
                return this.DeliveryWindowField;
            }
            set {
                if ((this.DeliveryWindowField.Equals(value) != true)) {
                    this.DeliveryWindowField = value;
                    this.RaisePropertyChanged("DeliveryWindow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityName {
            get {
                return this.FacilityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityNameField, value) != true)) {
                    this.FacilityNameField = value;
                    this.RaisePropertyChanged("FacilityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifitedBy {
            get {
                return this.LastModifitedByField;
            }
            set {
                if ((this.LastModifitedByField.Equals(value) != true)) {
                    this.LastModifitedByField = value;
                    this.RaisePropertyChanged("LastModifitedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifitedOn {
            get {
                return this.LastModifitedOnField;
            }
            set {
                if ((this.LastModifitedOnField.Equals(value) != true)) {
                    this.LastModifitedOnField = value;
                    this.RaisePropertyChanged("LastModifitedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListCorporateID {
            get {
                return this.ListCorporateIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCorporateIDField, value) != true)) {
                    this.ListCorporateIDField = value;
                    this.RaisePropertyChanged("ListCorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListFacilityID {
            get {
                return this.ListFacilityIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListFacilityIDField, value) != true)) {
                    this.ListFacilityIDField = value;
                    this.RaisePropertyChanged("ListFacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListVendorID {
            get {
                return this.ListVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListVendorIDField, value) != true)) {
                    this.ListVendorIDField = value;
                    this.RaisePropertyChanged("ListVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoggedInBy {
            get {
                return this.LoggedInByField;
            }
            set {
                if ((this.LoggedInByField.Equals(value) != true)) {
                    this.LoggedInByField = value;
                    this.RaisePropertyChanged("LoggedInBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderDueDate {
            get {
                return this.OrderDueDateField;
            }
            set {
                if ((this.OrderDueDateField.Equals(value) != true)) {
                    this.OrderDueDateField = value;
                    this.RaisePropertyChanged("OrderDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((this.OrderTypeField.Equals(value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderTypestr {
            get {
                return this.OrderTypestrField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderTypestrField, value) != true)) {
                    this.OrderTypestrField = value;
                    this.RaisePropertyChanged("OrderTypestr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorOrderdueID {
            get {
                return this.VendorOrderdueIDField;
            }
            set {
                if ((this.VendorOrderdueIDField.Equals(value) != true)) {
                    this.VendorOrderdueIDField = value;
                    this.RaisePropertyChanged("VendorOrderdueID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchVendorOrderType", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchVendorOrderType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DaysToNotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DeliveryWindowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderdueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VenOrderDueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateDescription {
            get {
                return this.CorporateDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateDescriptionField, value) != true)) {
                    this.CorporateDescriptionField = value;
                    this.RaisePropertyChanged("CorporateDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> DaysToNotify {
            get {
                return this.DaysToNotifyField;
            }
            set {
                if ((this.DaysToNotifyField.Equals(value) != true)) {
                    this.DaysToNotifyField = value;
                    this.RaisePropertyChanged("DaysToNotify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeliveryDate {
            get {
                return this.DeliveryDateField;
            }
            set {
                if ((this.DeliveryDateField.Equals(value) != true)) {
                    this.DeliveryDateField = value;
                    this.RaisePropertyChanged("DeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> DeliveryWindow {
            get {
                return this.DeliveryWindowField;
            }
            set {
                if ((this.DeliveryWindowField.Equals(value) != true)) {
                    this.DeliveryWindowField = value;
                    this.RaisePropertyChanged("DeliveryWindow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderTypeField, value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderdueDate {
            get {
                return this.OrderdueDateField;
            }
            set {
                if ((this.OrderdueDateField.Equals(value) != true)) {
                    this.OrderdueDateField = value;
                    this.RaisePropertyChanged("OrderdueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VenOrderDueID {
            get {
                return this.VenOrderDueIDField;
            }
            set {
                if ((this.VenOrderDueIDField.Equals(value) != true)) {
                    this.VenOrderDueIDField = value;
                    this.RaisePropertyChanged("VenOrderDueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetVendorOrderDue", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetVendorOrderDue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DaysToNotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DeliveryWindowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderdueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VenOrderDueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateDescription {
            get {
                return this.CorporateDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateDescriptionField, value) != true)) {
                    this.CorporateDescriptionField = value;
                    this.RaisePropertyChanged("CorporateDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> DaysToNotify {
            get {
                return this.DaysToNotifyField;
            }
            set {
                if ((this.DaysToNotifyField.Equals(value) != true)) {
                    this.DaysToNotifyField = value;
                    this.RaisePropertyChanged("DaysToNotify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeliveryDate {
            get {
                return this.DeliveryDateField;
            }
            set {
                if ((this.DeliveryDateField.Equals(value) != true)) {
                    this.DeliveryDateField = value;
                    this.RaisePropertyChanged("DeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> DeliveryWindow {
            get {
                return this.DeliveryWindowField;
            }
            set {
                if ((this.DeliveryWindowField.Equals(value) != true)) {
                    this.DeliveryWindowField = value;
                    this.RaisePropertyChanged("DeliveryWindow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderTypeField, value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderdueDate {
            get {
                return this.OrderdueDateField;
            }
            set {
                if ((this.OrderdueDateField.Equals(value) != true)) {
                    this.OrderdueDateField = value;
                    this.RaisePropertyChanged("OrderdueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VenOrderDueID {
            get {
                return this.VenOrderDueIDField;
            }
            set {
                if ((this.VenOrderDueIDField.Equals(value) != true)) {
                    this.VenOrderDueIDField = value;
                    this.RaisePropertyChanged("VenOrderDueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckVendorOrderDue", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class CheckVendorOrderDue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DaysToNotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DeliveryWindowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderdueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VenOrderDueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> DaysToNotify {
            get {
                return this.DaysToNotifyField;
            }
            set {
                if ((this.DaysToNotifyField.Equals(value) != true)) {
                    this.DaysToNotifyField = value;
                    this.RaisePropertyChanged("DaysToNotify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeliveryDate {
            get {
                return this.DeliveryDateField;
            }
            set {
                if ((this.DeliveryDateField.Equals(value) != true)) {
                    this.DeliveryDateField = value;
                    this.RaisePropertyChanged("DeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> DeliveryWindow {
            get {
                return this.DeliveryWindowField;
            }
            set {
                if ((this.DeliveryWindowField.Equals(value) != true)) {
                    this.DeliveryWindowField = value;
                    this.RaisePropertyChanged("DeliveryWindow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderTypeField, value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderdueDate {
            get {
                return this.OrderdueDateField;
            }
            set {
                if ((this.OrderdueDateField.Equals(value) != true)) {
                    this.OrderdueDateField = value;
                    this.RaisePropertyChanged("OrderdueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VenOrderDueID {
            get {
                return this.VenOrderDueIDField;
            }
            set {
                if ((this.VenOrderDueIDField.Equals(value) != true)) {
                    this.VenOrderDueIDField = value;
                    this.RaisePropertyChanged("VenOrderDueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetItem", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetVendor", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetVendor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifitedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifitedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoggedInByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MonthYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateIDField, value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityIDField, value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityName {
            get {
                return this.FacilityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityNameField, value) != true)) {
                    this.FacilityNameField = value;
                    this.RaisePropertyChanged("FacilityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemCategoryID {
            get {
                return this.ItemCategoryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemCategoryIDField, value) != true)) {
                    this.ItemCategoryIDField = value;
                    this.RaisePropertyChanged("ItemCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemIDField, value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifitedBy {
            get {
                return this.LastModifitedByField;
            }
            set {
                if ((this.LastModifitedByField.Equals(value) != true)) {
                    this.LastModifitedByField = value;
                    this.RaisePropertyChanged("LastModifitedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifitedOn {
            get {
                return this.LastModifitedOnField;
            }
            set {
                if ((this.LastModifitedOnField.Equals(value) != true)) {
                    this.LastModifitedOnField = value;
                    this.RaisePropertyChanged("LastModifitedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoggedInBy {
            get {
                return this.LoggedInByField;
            }
            set {
                if ((this.LoggedInByField.Equals(value) != true)) {
                    this.LoggedInByField = value;
                    this.RaisePropertyChanged("LoggedInBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MonthYear {
            get {
                return this.MonthYearField;
            }
            set {
                if ((this.MonthYearField.Equals(value) != true)) {
                    this.MonthYearField = value;
                    this.RaisePropertyChanged("MonthYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderTypeField, value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorIDField, value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindPermissionforUser", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindPermissionforUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserRoleIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleField, value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserRoleID {
            get {
                return this.UserRoleIDField;
            }
            set {
                if ((this.UserRoleIDField.Equals(value) != true)) {
                    this.UserRoleIDField = value;
                    this.RaisePropertyChanged("UserRoleID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALActivityTracking", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALActivityTracking : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppFeatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateLoggedInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateLoggedOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DurationMinutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MainMenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SubMenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TimeInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TimeOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppFeature {
            get {
                return this.AppFeatureField;
            }
            set {
                if ((object.ReferenceEquals(this.AppFeatureField, value) != true)) {
                    this.AppFeatureField = value;
                    this.RaisePropertyChanged("AppFeature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateLoggedIn {
            get {
                return this.DateLoggedInField;
            }
            set {
                if ((this.DateLoggedInField.Equals(value) != true)) {
                    this.DateLoggedInField = value;
                    this.RaisePropertyChanged("DateLoggedIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateLoggedOut {
            get {
                return this.DateLoggedOutField;
            }
            set {
                if ((this.DateLoggedOutField.Equals(value) != true)) {
                    this.DateLoggedOutField = value;
                    this.RaisePropertyChanged("DateLoggedOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DurationMinutes {
            get {
                return this.DurationMinutesField;
            }
            set {
                if ((this.DurationMinutesField.Equals(value) != true)) {
                    this.DurationMinutesField = value;
                    this.RaisePropertyChanged("DurationMinutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineID {
            get {
                return this.MachineIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineIDField, value) != true)) {
                    this.MachineIDField = value;
                    this.RaisePropertyChanged("MachineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MainMenuID {
            get {
                return this.MainMenuIDField;
            }
            set {
                if ((this.MainMenuIDField.Equals(value) != true)) {
                    this.MainMenuIDField = value;
                    this.RaisePropertyChanged("MainMenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SubMenuID {
            get {
                return this.SubMenuIDField;
            }
            set {
                if ((this.SubMenuIDField.Equals(value) != true)) {
                    this.SubMenuIDField = value;
                    this.RaisePropertyChanged("SubMenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TimeIn {
            get {
                return this.TimeInField;
            }
            set {
                if ((this.TimeInField.Equals(value) != true)) {
                    this.TimeInField = value;
                    this.RaisePropertyChanged("TimeIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TimeOut {
            get {
                return this.TimeOutField;
            }
            set {
                if ((this.TimeOutField.Equals(value) != true)) {
                    this.TimeOutField = value;
                    this.RaisePropertyChanged("TimeOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindITReceivingDetailsReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindITReceivingDetailsReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BalanceQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INVOICEDATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INVOICENOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITNNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ITReceivingMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ITRequestMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PACKINGDATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PACKINGSLIPNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PricePerQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RECEIVEDDATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RECEIVINGACTIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReceivingQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingcostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BalanceQty {
            get {
                return this.BalanceQtyField;
            }
            set {
                if ((this.BalanceQtyField.Equals(value) != true)) {
                    this.BalanceQtyField = value;
                    this.RaisePropertyChanged("BalanceQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAccount {
            get {
                return this.BillAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BillAccountField, value) != true)) {
                    this.BillAccountField = value;
                    this.RaisePropertyChanged("BillAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentListDescription {
            get {
                return this.EquipmentListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListDescriptionField, value) != true)) {
                    this.EquipmentListDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategoryDescription {
            get {
                return this.EquipmentSubCategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryDescriptionField, value) != true)) {
                    this.EquipmentSubCategoryDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentSubCategoryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INVOICEDATE {
            get {
                return this.INVOICEDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.INVOICEDATEField, value) != true)) {
                    this.INVOICEDATEField = value;
                    this.RaisePropertyChanged("INVOICEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INVOICENO {
            get {
                return this.INVOICENOField;
            }
            set {
                if ((object.ReferenceEquals(this.INVOICENOField, value) != true)) {
                    this.INVOICENOField = value;
                    this.RaisePropertyChanged("INVOICENO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITNNo {
            get {
                return this.ITNNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITNNoField, value) != true)) {
                    this.ITNNoField = value;
                    this.RaisePropertyChanged("ITNNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITRONo {
            get {
                return this.ITRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITRONoField, value) != true)) {
                    this.ITRONoField = value;
                    this.RaisePropertyChanged("ITRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ITReceivingMasterID {
            get {
                return this.ITReceivingMasterIDField;
            }
            set {
                if ((this.ITReceivingMasterIDField.Equals(value) != true)) {
                    this.ITReceivingMasterIDField = value;
                    this.RaisePropertyChanged("ITReceivingMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ITRequestMasterID {
            get {
                return this.ITRequestMasterIDField;
            }
            set {
                if ((this.ITRequestMasterIDField.Equals(value) != true)) {
                    this.ITRequestMasterIDField = value;
                    this.RaisePropertyChanged("ITRequestMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedinByField, value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PACKINGDATE {
            get {
                return this.PACKINGDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.PACKINGDATEField, value) != true)) {
                    this.PACKINGDATEField = value;
                    this.RaisePropertyChanged("PACKINGDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PACKINGSLIPNO {
            get {
                return this.PACKINGSLIPNOField;
            }
            set {
                if ((object.ReferenceEquals(this.PACKINGSLIPNOField, value) != true)) {
                    this.PACKINGSLIPNOField = value;
                    this.RaisePropertyChanged("PACKINGSLIPNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PricePerQty {
            get {
                return this.PricePerQtyField;
            }
            set {
                if ((this.PricePerQtyField.Equals(value) != true)) {
                    this.PricePerQtyField = value;
                    this.RaisePropertyChanged("PricePerQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVEDDATE {
            get {
                return this.RECEIVEDDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVEDDATEField, value) != true)) {
                    this.RECEIVEDDATEField = value;
                    this.RaisePropertyChanged("RECEIVEDDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVINGACTION {
            get {
                return this.RECEIVINGACTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVINGACTIONField, value) != true)) {
                    this.RECEIVINGACTIONField = value;
                    this.RaisePropertyChanged("RECEIVINGACTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReceivingQty {
            get {
                return this.ReceivingQtyField;
            }
            set {
                if ((this.ReceivingQtyField.Equals(value) != true)) {
                    this.ReceivingQtyField = value;
                    this.RaisePropertyChanged("ReceivingQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestType {
            get {
                return this.RequestTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestTypeField, value) != true)) {
                    this.RequestTypeField = value;
                    this.RaisePropertyChanged("RequestType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAccount {
            get {
                return this.ShipAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAccountField, value) != true)) {
                    this.ShipAccountField = value;
                    this.RaisePropertyChanged("ShipAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shippingcost {
            get {
                return this.ShippingcostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingcostField, value) != true)) {
                    this.ShippingcostField = value;
                    this.RaisePropertyChanged("Shippingcost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindITReceivingDetailsSubReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindITReceivingDetailsSubReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BALANCEQTYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COMMENTSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EQUIMENTSUBCATEGORYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EQUIPMENTLISTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INVOICEDATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INVOICENOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ITRECEIVINGDETAILSIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ITRECEIVINGMASTERIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ITREQUESTMASTERIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITRONOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ORDERQTYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PACKINGDATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PACKINGSLIPNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PRICEPERQTYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string REASONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RECEIVEDDATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RECEIVINGACTIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RECEIVINGQTYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SERIALNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SHIPPINGCOSTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TAXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TOTALCOSTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TOTALPRICEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BALANCEQTY {
            get {
                return this.BALANCEQTYField;
            }
            set {
                if ((this.BALANCEQTYField.Equals(value) != true)) {
                    this.BALANCEQTYField = value;
                    this.RaisePropertyChanged("BALANCEQTY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMMENTS {
            get {
                return this.COMMENTSField;
            }
            set {
                if ((object.ReferenceEquals(this.COMMENTSField, value) != true)) {
                    this.COMMENTSField = value;
                    this.RaisePropertyChanged("COMMENTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EQUIMENTSUBCATEGORY {
            get {
                return this.EQUIMENTSUBCATEGORYField;
            }
            set {
                if ((object.ReferenceEquals(this.EQUIMENTSUBCATEGORYField, value) != true)) {
                    this.EQUIMENTSUBCATEGORYField = value;
                    this.RaisePropertyChanged("EQUIMENTSUBCATEGORY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EQUIPMENTLIST {
            get {
                return this.EQUIPMENTLISTField;
            }
            set {
                if ((object.ReferenceEquals(this.EQUIPMENTLISTField, value) != true)) {
                    this.EQUIPMENTLISTField = value;
                    this.RaisePropertyChanged("EQUIPMENTLIST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INVOICEDATE {
            get {
                return this.INVOICEDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.INVOICEDATEField, value) != true)) {
                    this.INVOICEDATEField = value;
                    this.RaisePropertyChanged("INVOICEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INVOICENO {
            get {
                return this.INVOICENOField;
            }
            set {
                if ((object.ReferenceEquals(this.INVOICENOField, value) != true)) {
                    this.INVOICENOField = value;
                    this.RaisePropertyChanged("INVOICENO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ITRECEIVINGDETAILSID {
            get {
                return this.ITRECEIVINGDETAILSIDField;
            }
            set {
                if ((this.ITRECEIVINGDETAILSIDField.Equals(value) != true)) {
                    this.ITRECEIVINGDETAILSIDField = value;
                    this.RaisePropertyChanged("ITRECEIVINGDETAILSID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ITRECEIVINGMASTERID {
            get {
                return this.ITRECEIVINGMASTERIDField;
            }
            set {
                if ((this.ITRECEIVINGMASTERIDField.Equals(value) != true)) {
                    this.ITRECEIVINGMASTERIDField = value;
                    this.RaisePropertyChanged("ITRECEIVINGMASTERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ITREQUESTMASTERID {
            get {
                return this.ITREQUESTMASTERIDField;
            }
            set {
                if ((this.ITREQUESTMASTERIDField.Equals(value) != true)) {
                    this.ITREQUESTMASTERIDField = value;
                    this.RaisePropertyChanged("ITREQUESTMASTERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITRONO {
            get {
                return this.ITRONOField;
            }
            set {
                if ((object.ReferenceEquals(this.ITRONOField, value) != true)) {
                    this.ITRONOField = value;
                    this.RaisePropertyChanged("ITRONO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedinByField, value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ORDERQTY {
            get {
                return this.ORDERQTYField;
            }
            set {
                if ((this.ORDERQTYField.Equals(value) != true)) {
                    this.ORDERQTYField = value;
                    this.RaisePropertyChanged("ORDERQTY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PACKINGDATE {
            get {
                return this.PACKINGDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.PACKINGDATEField, value) != true)) {
                    this.PACKINGDATEField = value;
                    this.RaisePropertyChanged("PACKINGDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PACKINGSLIPNO {
            get {
                return this.PACKINGSLIPNOField;
            }
            set {
                if ((object.ReferenceEquals(this.PACKINGSLIPNOField, value) != true)) {
                    this.PACKINGSLIPNOField = value;
                    this.RaisePropertyChanged("PACKINGSLIPNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PRICEPERQTY {
            get {
                return this.PRICEPERQTYField;
            }
            set {
                if ((this.PRICEPERQTYField.Equals(value) != true)) {
                    this.PRICEPERQTYField = value;
                    this.RaisePropertyChanged("PRICEPERQTY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REASON {
            get {
                return this.REASONField;
            }
            set {
                if ((object.ReferenceEquals(this.REASONField, value) != true)) {
                    this.REASONField = value;
                    this.RaisePropertyChanged("REASON");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVEDDATE {
            get {
                return this.RECEIVEDDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVEDDATEField, value) != true)) {
                    this.RECEIVEDDATEField = value;
                    this.RaisePropertyChanged("RECEIVEDDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVINGACTION {
            get {
                return this.RECEIVINGACTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVINGACTIONField, value) != true)) {
                    this.RECEIVINGACTIONField = value;
                    this.RaisePropertyChanged("RECEIVINGACTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RECEIVINGQTY {
            get {
                return this.RECEIVINGQTYField;
            }
            set {
                if ((this.RECEIVINGQTYField.Equals(value) != true)) {
                    this.RECEIVINGQTYField = value;
                    this.RaisePropertyChanged("RECEIVINGQTY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SERIALNO {
            get {
                return this.SERIALNOField;
            }
            set {
                if ((object.ReferenceEquals(this.SERIALNOField, value) != true)) {
                    this.SERIALNOField = value;
                    this.RaisePropertyChanged("SERIALNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SHIPPINGCOST {
            get {
                return this.SHIPPINGCOSTField;
            }
            set {
                if ((object.ReferenceEquals(this.SHIPPINGCOSTField, value) != true)) {
                    this.SHIPPINGCOSTField = value;
                    this.RaisePropertyChanged("SHIPPINGCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TAX {
            get {
                return this.TAXField;
            }
            set {
                if ((object.ReferenceEquals(this.TAXField, value) != true)) {
                    this.TAXField = value;
                    this.RaisePropertyChanged("TAX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TOTALCOST {
            get {
                return this.TOTALCOSTField;
            }
            set {
                if ((this.TOTALCOSTField.Equals(value) != true)) {
                    this.TOTALCOSTField = value;
                    this.RaisePropertyChanged("TOTALCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TOTALPRICE {
            get {
                return this.TOTALPRICEField;
            }
            set {
                if ((this.TOTALPRICEField.Equals(value) != true)) {
                    this.TOTALPRICEField = value;
                    this.RaisePropertyChanged("TOTALPRICE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Getitronovalue", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class Getitronovalue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITRONoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITRONo {
            get {
                return this.ITRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITRONoField, value) != true)) {
                    this.ITRONoField = value;
                    this.RaisePropertyChanged("ITRONo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchITReceiving", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchITReceiving : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITNNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ITReceivingMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RequestITMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> RequestITOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Facility {
            get {
                return this.FacilityField;
            }
            set {
                if ((this.FacilityField.Equals(value) != true)) {
                    this.FacilityField = value;
                    this.RaisePropertyChanged("Facility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITNNo {
            get {
                return this.ITNNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITNNoField, value) != true)) {
                    this.ITNNoField = value;
                    this.RaisePropertyChanged("ITNNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITRNo {
            get {
                return this.ITRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITRNoField, value) != true)) {
                    this.ITRNoField = value;
                    this.RaisePropertyChanged("ITRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITRONo {
            get {
                return this.ITRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITRONoField, value) != true)) {
                    this.ITRONoField = value;
                    this.RaisePropertyChanged("ITRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ITReceivingMasterID {
            get {
                return this.ITReceivingMasterIDField;
            }
            set {
                if ((this.ITReceivingMasterIDField.Equals(value) != true)) {
                    this.ITReceivingMasterIDField = value;
                    this.RaisePropertyChanged("ITReceivingMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RequestITMasterID {
            get {
                return this.RequestITMasterIDField;
            }
            set {
                if ((this.RequestITMasterIDField.Equals(value) != true)) {
                    this.RequestITMasterIDField = value;
                    this.RaisePropertyChanged("RequestITMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> RequestITOrderID {
            get {
                return this.RequestITOrderIDField;
            }
            set {
                if ((this.RequestITOrderIDField.Equals(value) != true)) {
                    this.RequestITOrderIDField = value;
                    this.RaisePropertyChanged("RequestITOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindITNNOvalues", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindITNNOvalues : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BalanceQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquimentSubCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipementListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipementSubCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITNNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ITReceivingDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ITReceivingMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ITRequestMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PackingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PricePerQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivingActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReceivingQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> RequestITOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BalanceQty {
            get {
                return this.BalanceQtyField;
            }
            set {
                if ((this.BalanceQtyField.Equals(value) != true)) {
                    this.BalanceQtyField = value;
                    this.RaisePropertyChanged("BalanceQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquimentSubCategory {
            get {
                return this.EquimentSubCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquimentSubCategoryField, value) != true)) {
                    this.EquimentSubCategoryField = value;
                    this.RaisePropertyChanged("EquimentSubCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipementListID {
            get {
                return this.EquipementListIDField;
            }
            set {
                if ((this.EquipementListIDField.Equals(value) != true)) {
                    this.EquipementListIDField = value;
                    this.RaisePropertyChanged("EquipementListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipementSubCategoryID {
            get {
                return this.EquipementSubCategoryIDField;
            }
            set {
                if ((this.EquipementSubCategoryIDField.Equals(value) != true)) {
                    this.EquipementSubCategoryIDField = value;
                    this.RaisePropertyChanged("EquipementSubCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentList {
            get {
                return this.EquipmentListField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListField, value) != true)) {
                    this.EquipmentListField = value;
                    this.RaisePropertyChanged("EquipmentList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITNNo {
            get {
                return this.ITNNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITNNoField, value) != true)) {
                    this.ITNNoField = value;
                    this.RaisePropertyChanged("ITNNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ITReceivingDetailsID {
            get {
                return this.ITReceivingDetailsIDField;
            }
            set {
                if ((this.ITReceivingDetailsIDField.Equals(value) != true)) {
                    this.ITReceivingDetailsIDField = value;
                    this.RaisePropertyChanged("ITReceivingDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ITReceivingMasterID {
            get {
                return this.ITReceivingMasterIDField;
            }
            set {
                if ((this.ITReceivingMasterIDField.Equals(value) != true)) {
                    this.ITReceivingMasterIDField = value;
                    this.RaisePropertyChanged("ITReceivingMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ITRequestMasterID {
            get {
                return this.ITRequestMasterIDField;
            }
            set {
                if ((this.ITRequestMasterIDField.Equals(value) != true)) {
                    this.ITRequestMasterIDField = value;
                    this.RaisePropertyChanged("ITRequestMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNo {
            get {
                return this.InvoiceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNoField, value) != true)) {
                    this.InvoiceNoField = value;
                    this.RaisePropertyChanged("InvoiceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherReason {
            get {
                return this.OtherReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherReasonField, value) != true)) {
                    this.OtherReasonField = value;
                    this.RaisePropertyChanged("OtherReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PackingDate {
            get {
                return this.PackingDateField;
            }
            set {
                if ((this.PackingDateField.Equals(value) != true)) {
                    this.PackingDateField = value;
                    this.RaisePropertyChanged("PackingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipNo {
            get {
                return this.PackingSlipNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipNoField, value) != true)) {
                    this.PackingSlipNoField = value;
                    this.RaisePropertyChanged("PackingSlipNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PricePerQty {
            get {
                return this.PricePerQtyField;
            }
            set {
                if ((this.PricePerQtyField.Equals(value) != true)) {
                    this.PricePerQtyField = value;
                    this.RaisePropertyChanged("PricePerQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivingAction {
            get {
                return this.ReceivingActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivingActionField, value) != true)) {
                    this.ReceivingActionField = value;
                    this.RaisePropertyChanged("ReceivingAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReceivingQty {
            get {
                return this.ReceivingQtyField;
            }
            set {
                if ((this.ReceivingQtyField.Equals(value) != true)) {
                    this.ReceivingQtyField = value;
                    this.RaisePropertyChanged("ReceivingQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> RequestITOrderID {
            get {
                return this.RequestITOrderIDField;
            }
            set {
                if ((this.RequestITOrderIDField.Equals(value) != true)) {
                    this.RequestITOrderIDField = value;
                    this.RaisePropertyChanged("RequestITOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALServiceRequest", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALServiceRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ApproveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipementSubCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipementSubCategorydescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipmentListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceRemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReceiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListCorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListFacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationOfTheFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] OrderContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherRemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PORemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Inventory.Inventoryserref.GetServiceRequestetailsbyServiceRequestMasterID[] SRDetailsListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceCatDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceListDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceRequestDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceRequestMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceUploadIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UploadedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UploadedDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ApproveDate {
            get {
                return this.ApproveDateField;
            }
            set {
                if ((this.ApproveDateField.Equals(value) != true)) {
                    this.ApproveDateField = value;
                    this.RaisePropertyChanged("ApproveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipementSubCategoryID {
            get {
                return this.EquipementSubCategoryIDField;
            }
            set {
                if ((this.EquipementSubCategoryIDField.Equals(value) != true)) {
                    this.EquipementSubCategoryIDField = value;
                    this.RaisePropertyChanged("EquipementSubCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipementSubCategorydesc {
            get {
                return this.EquipementSubCategorydescField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipementSubCategorydescField, value) != true)) {
                    this.EquipementSubCategorydescField = value;
                    this.RaisePropertyChanged("EquipementSubCategorydesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipmentCategoryID {
            get {
                return this.EquipmentCategoryIDField;
            }
            set {
                if ((this.EquipmentCategoryIDField.Equals(value) != true)) {
                    this.EquipmentCategoryIDField = value;
                    this.RaisePropertyChanged("EquipmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipmentListID {
            get {
                return this.EquipmentListIDField;
            }
            set {
                if ((this.EquipmentListIDField.Equals(value) != true)) {
                    this.EquipmentListIDField = value;
                    this.RaisePropertyChanged("EquipmentListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityName {
            get {
                return this.FacilityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityNameField, value) != true)) {
                    this.FacilityNameField = value;
                    this.RaisePropertyChanged("FacilityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNo {
            get {
                return this.InvoiceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNoField, value) != true)) {
                    this.InvoiceNoField = value;
                    this.RaisePropertyChanged("InvoiceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceRemarks {
            get {
                return this.InvoiceRemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceRemarksField, value) != true)) {
                    this.InvoiceRemarksField = value;
                    this.RaisePropertyChanged("InvoiceRemarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceStatus {
            get {
                return this.InvoiceStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceStatusField, value) != true)) {
                    this.InvoiceStatusField = value;
                    this.RaisePropertyChanged("InvoiceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReceive {
            get {
                return this.IsReceiveField;
            }
            set {
                if ((this.IsReceiveField.Equals(value) != true)) {
                    this.IsReceiveField = value;
                    this.RaisePropertyChanged("IsReceive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListCorporateID {
            get {
                return this.ListCorporateIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCorporateIDField, value) != true)) {
                    this.ListCorporateIDField = value;
                    this.RaisePropertyChanged("ListCorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListFacilityID {
            get {
                return this.ListFacilityIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListFacilityIDField, value) != true)) {
                    this.ListFacilityIDField = value;
                    this.RaisePropertyChanged("ListFacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListStatus {
            get {
                return this.ListStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ListStatusField, value) != true)) {
                    this.ListStatusField = value;
                    this.RaisePropertyChanged("ListStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationOfTheFile {
            get {
                return this.LocationOfTheFileField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationOfTheFileField, value) != true)) {
                    this.LocationOfTheFileField = value;
                    this.RaisePropertyChanged("LocationOfTheFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((this.LoggedinByField.Equals(value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] OrderContent {
            get {
                return this.OrderContentField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderContentField, value) != true)) {
                    this.OrderContentField = value;
                    this.RaisePropertyChanged("OrderContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherRemarks {
            get {
                return this.OtherRemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherRemarksField, value) != true)) {
                    this.OtherRemarksField = value;
                    this.RaisePropertyChanged("OtherRemarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PORemarks {
            get {
                return this.PORemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.PORemarksField, value) != true)) {
                    this.PORemarksField = value;
                    this.RaisePropertyChanged("PORemarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SNo {
            get {
                return this.SNoField;
            }
            set {
                if ((this.SNoField.Equals(value) != true)) {
                    this.SNoField = value;
                    this.RaisePropertyChanged("SNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Inventory.Inventoryserref.GetServiceRequestetailsbyServiceRequestMasterID[] SRDetailsList {
            get {
                return this.SRDetailsListField;
            }
            set {
                if ((object.ReferenceEquals(this.SRDetailsListField, value) != true)) {
                    this.SRDetailsListField = value;
                    this.RaisePropertyChanged("SRDetailsList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SRNo {
            get {
                return this.SRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SRNoField, value) != true)) {
                    this.SRNoField = value;
                    this.RaisePropertyChanged("SRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceCatDesc {
            get {
                return this.ServiceCatDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceCatDescField, value) != true)) {
                    this.ServiceCatDescField = value;
                    this.RaisePropertyChanged("ServiceCatDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceCategory {
            get {
                return this.ServiceCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceCategoryField, value) != true)) {
                    this.ServiceCategoryField = value;
                    this.RaisePropertyChanged("ServiceCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceCategoryID {
            get {
                return this.ServiceCategoryIDField;
            }
            set {
                if ((this.ServiceCategoryIDField.Equals(value) != true)) {
                    this.ServiceCategoryIDField = value;
                    this.RaisePropertyChanged("ServiceCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceList {
            get {
                return this.ServiceListField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceListField, value) != true)) {
                    this.ServiceListField = value;
                    this.RaisePropertyChanged("ServiceList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceListDesc {
            get {
                return this.ServiceListDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceListDescField, value) != true)) {
                    this.ServiceListDescField = value;
                    this.RaisePropertyChanged("ServiceListDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceListID {
            get {
                return this.ServiceListIDField;
            }
            set {
                if ((this.ServiceListIDField.Equals(value) != true)) {
                    this.ServiceListIDField = value;
                    this.RaisePropertyChanged("ServiceListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceRequestDetailID {
            get {
                return this.ServiceRequestDetailIDField;
            }
            set {
                if ((this.ServiceRequestDetailIDField.Equals(value) != true)) {
                    this.ServiceRequestDetailIDField = value;
                    this.RaisePropertyChanged("ServiceRequestDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceRequestMasterID {
            get {
                return this.ServiceRequestMasterIDField;
            }
            set {
                if ((this.ServiceRequestMasterIDField.Equals(value) != true)) {
                    this.ServiceRequestMasterIDField = value;
                    this.RaisePropertyChanged("ServiceRequestMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((this.ServiceTypeField.Equals(value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceUploadID {
            get {
                return this.ServiceUploadIDField;
            }
            set {
                if ((this.ServiceUploadIDField.Equals(value) != true)) {
                    this.ServiceUploadIDField = value;
                    this.RaisePropertyChanged("ServiceUploadID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UploadedBy {
            get {
                return this.UploadedByField;
            }
            set {
                if ((this.UploadedByField.Equals(value) != true)) {
                    this.UploadedByField = value;
                    this.RaisePropertyChanged("UploadedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UploadedDateTime {
            get {
                return this.UploadedDateTimeField;
            }
            set {
                if ((this.UploadedDateTimeField.Equals(value) != true)) {
                    this.UploadedDateTimeField = value;
                    this.RaisePropertyChanged("UploadedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetServiceRequestetailsbyServiceRequestMasterID", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetServiceRequestetailsbyServiceRequestMasterID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LockedbyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceRequestDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ServiceRequestMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((this.IsReadOnlyField.Equals(value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Lockedby {
            get {
                return this.LockedbyField;
            }
            set {
                if ((this.LockedbyField.Equals(value) != true)) {
                    this.LockedbyField = value;
                    this.RaisePropertyChanged("Lockedby");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceRequestDetailsID {
            get {
                return this.ServiceRequestDetailsIDField;
            }
            set {
                if ((this.ServiceRequestDetailsIDField.Equals(value) != true)) {
                    this.ServiceRequestDetailsIDField = value;
                    this.RaisePropertyChanged("ServiceRequestDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ServiceRequestMasterID {
            get {
                return this.ServiceRequestMasterIDField;
            }
            set {
                if ((this.ServiceRequestMasterIDField.Equals(value) != true)) {
                    this.ServiceRequestMasterIDField = value;
                    this.RaisePropertyChanged("ServiceRequestMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALEndingInventory", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALEndingInventory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BeggingInvenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EndingInvenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EndingInvenIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ExpiredMedsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilitySupplyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNewFacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNewRecordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListCorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListFacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MonthYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MonthlyUsageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long NoofvisitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReceiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ReceiveingInvenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TransferINDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransferInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransferOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TransferOutDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BeggingInven {
            get {
                return this.BeggingInvenField;
            }
            set {
                if ((this.BeggingInvenField.Equals(value) != true)) {
                    this.BeggingInvenField = value;
                    this.RaisePropertyChanged("BeggingInven");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EndingInven {
            get {
                return this.EndingInvenField;
            }
            set {
                if ((this.EndingInvenField.Equals(value) != true)) {
                    this.EndingInvenField = value;
                    this.RaisePropertyChanged("EndingInven");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EndingInvenID {
            get {
                return this.EndingInvenIDField;
            }
            set {
                if ((this.EndingInvenIDField.Equals(value) != true)) {
                    this.EndingInvenIDField = value;
                    this.RaisePropertyChanged("EndingInvenID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ExpiredMeds {
            get {
                return this.ExpiredMedsField;
            }
            set {
                if ((this.ExpiredMedsField.Equals(value) != true)) {
                    this.ExpiredMedsField = value;
                    this.RaisePropertyChanged("ExpiredMeds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilitySupplyID {
            get {
                return this.FacilitySupplyIDField;
            }
            set {
                if ((this.FacilitySupplyIDField.Equals(value) != true)) {
                    this.FacilitySupplyIDField = value;
                    this.RaisePropertyChanged("FacilitySupplyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNewFacility {
            get {
                return this.IsNewFacilityField;
            }
            set {
                if ((this.IsNewFacilityField.Equals(value) != true)) {
                    this.IsNewFacilityField = value;
                    this.RaisePropertyChanged("IsNewFacility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNewRecord {
            get {
                return this.IsNewRecordField;
            }
            set {
                if ((this.IsNewRecordField.Equals(value) != true)) {
                    this.IsNewRecordField = value;
                    this.RaisePropertyChanged("IsNewRecord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemType {
            get {
                return this.ItemTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemTypeField, value) != true)) {
                    this.ItemTypeField = value;
                    this.RaisePropertyChanged("ItemType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListCategoryID {
            get {
                return this.ListCategoryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCategoryIDField, value) != true)) {
                    this.ListCategoryIDField = value;
                    this.RaisePropertyChanged("ListCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListCorporateID {
            get {
                return this.ListCorporateIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCorporateIDField, value) != true)) {
                    this.ListCorporateIDField = value;
                    this.RaisePropertyChanged("ListCorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListFacilityID {
            get {
                return this.ListFacilityIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListFacilityIDField, value) != true)) {
                    this.ListFacilityIDField = value;
                    this.RaisePropertyChanged("ListFacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListStatus {
            get {
                return this.ListStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ListStatusField, value) != true)) {
                    this.ListStatusField = value;
                    this.RaisePropertyChanged("ListStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListVendorID {
            get {
                return this.ListVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListVendorIDField, value) != true)) {
                    this.ListVendorIDField = value;
                    this.RaisePropertyChanged("ListVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((this.LoggedinByField.Equals(value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MonthYear {
            get {
                return this.MonthYearField;
            }
            set {
                if ((this.MonthYearField.Equals(value) != true)) {
                    this.MonthYearField = value;
                    this.RaisePropertyChanged("MonthYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MonthlyUsage {
            get {
                return this.MonthlyUsageField;
            }
            set {
                if ((this.MonthlyUsageField.Equals(value) != true)) {
                    this.MonthlyUsageField = value;
                    this.RaisePropertyChanged("MonthlyUsage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Noofvisit {
            get {
                return this.NoofvisitField;
            }
            set {
                if ((this.NoofvisitField.Equals(value) != true)) {
                    this.NoofvisitField = value;
                    this.RaisePropertyChanged("Noofvisit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReceiveDate {
            get {
                return this.ReceiveDateField;
            }
            set {
                if ((this.ReceiveDateField.Equals(value) != true)) {
                    this.ReceiveDateField = value;
                    this.RaisePropertyChanged("ReceiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ReceiveingInven {
            get {
                return this.ReceiveingInvenField;
            }
            set {
                if ((this.ReceiveingInvenField.Equals(value) != true)) {
                    this.ReceiveingInvenField = value;
                    this.RaisePropertyChanged("ReceiveingInven");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TransferINDate {
            get {
                return this.TransferINDateField;
            }
            set {
                if ((this.TransferINDateField.Equals(value) != true)) {
                    this.TransferINDateField = value;
                    this.RaisePropertyChanged("TransferINDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransferIn {
            get {
                return this.TransferInField;
            }
            set {
                if ((this.TransferInField.Equals(value) != true)) {
                    this.TransferInField = value;
                    this.RaisePropertyChanged("TransferIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransferOut {
            get {
                return this.TransferOutField;
            }
            set {
                if ((this.TransferOutField.Equals(value) != true)) {
                    this.TransferOutField = value;
                    this.RaisePropertyChanged("TransferOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TransferOutDate {
            get {
                return this.TransferOutDateField;
            }
            set {
                if ((this.TransferOutDateField.Equals(value) != true)) {
                    this.TransferOutDateField = value;
                    this.RaisePropertyChanged("TransferOutDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((this.UOMField.Equals(value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALTransferOut", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALTransferOut : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilitySupplyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListCorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListFacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListTransferFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListTransferToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TransferDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransferIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransferOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransferQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UOMIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateIDFrom {
            get {
                return this.CorporateIDFromField;
            }
            set {
                if ((this.CorporateIDFromField.Equals(value) != true)) {
                    this.CorporateIDFromField = value;
                    this.RaisePropertyChanged("CorporateIDFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateIDTo {
            get {
                return this.CorporateIDToField;
            }
            set {
                if ((this.CorporateIDToField.Equals(value) != true)) {
                    this.CorporateIDToField = value;
                    this.RaisePropertyChanged("CorporateIDTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityIDFrom {
            get {
                return this.FacilityIDFromField;
            }
            set {
                if ((this.FacilityIDFromField.Equals(value) != true)) {
                    this.FacilityIDFromField = value;
                    this.RaisePropertyChanged("FacilityIDFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityIDTo {
            get {
                return this.FacilityIDToField;
            }
            set {
                if ((this.FacilityIDToField.Equals(value) != true)) {
                    this.FacilityIDToField = value;
                    this.RaisePropertyChanged("FacilityIDTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilitySupplyID {
            get {
                return this.FacilitySupplyIDField;
            }
            set {
                if ((this.FacilitySupplyIDField.Equals(value) != true)) {
                    this.FacilitySupplyIDField = value;
                    this.RaisePropertyChanged("FacilitySupplyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemCategory {
            get {
                return this.ItemCategoryField;
            }
            set {
                if ((this.ItemCategoryField.Equals(value) != true)) {
                    this.ItemCategoryField = value;
                    this.RaisePropertyChanged("ItemCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListCategoryID {
            get {
                return this.ListCategoryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCategoryIDField, value) != true)) {
                    this.ListCategoryIDField = value;
                    this.RaisePropertyChanged("ListCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListCorporateID {
            get {
                return this.ListCorporateIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCorporateIDField, value) != true)) {
                    this.ListCorporateIDField = value;
                    this.RaisePropertyChanged("ListCorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListFacilityID {
            get {
                return this.ListFacilityIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListFacilityIDField, value) != true)) {
                    this.ListFacilityIDField = value;
                    this.RaisePropertyChanged("ListFacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListStatus {
            get {
                return this.ListStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ListStatusField, value) != true)) {
                    this.ListStatusField = value;
                    this.RaisePropertyChanged("ListStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListTransferFrom {
            get {
                return this.ListTransferFromField;
            }
            set {
                if ((object.ReferenceEquals(this.ListTransferFromField, value) != true)) {
                    this.ListTransferFromField = value;
                    this.RaisePropertyChanged("ListTransferFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListTransferTo {
            get {
                return this.ListTransferToField;
            }
            set {
                if ((object.ReferenceEquals(this.ListTransferToField, value) != true)) {
                    this.ListTransferToField = value;
                    this.RaisePropertyChanged("ListTransferTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((this.LoggedinByField.Equals(value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TransferDate {
            get {
                return this.TransferDateField;
            }
            set {
                if ((this.TransferDateField.Equals(value) != true)) {
                    this.TransferDateField = value;
                    this.RaisePropertyChanged("TransferDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransferID {
            get {
                return this.TransferIDField;
            }
            set {
                if ((this.TransferIDField.Equals(value) != true)) {
                    this.TransferIDField = value;
                    this.RaisePropertyChanged("TransferID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferNo {
            get {
                return this.TransferNoField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferNoField, value) != true)) {
                    this.TransferNoField = value;
                    this.RaisePropertyChanged("TransferNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransferOut {
            get {
                return this.TransferOutField;
            }
            set {
                if ((this.TransferOutField.Equals(value) != true)) {
                    this.TransferOutField = value;
                    this.RaisePropertyChanged("TransferOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransferQty {
            get {
                return this.TransferQtyField;
            }
            set {
                if ((this.TransferQtyField.Equals(value) != true)) {
                    this.TransferQtyField = value;
                    this.RaisePropertyChanged("TransferQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UOMID {
            get {
                return this.UOMIDField;
            }
            set {
                if ((this.UOMIDField.Equals(value) != true)) {
                    this.UOMIDField = value;
                    this.RaisePropertyChanged("UOMID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALTransferIn", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALTransferIn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateFromNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDfromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateToNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DeletedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityFromNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityToNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvenValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListCorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListFacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockTimeOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransferINIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TransferInDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TransferOutDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransferOutIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransferqtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UOMIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatekeyvalueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateFromName {
            get {
                return this.CorporateFromNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateFromNameField, value) != true)) {
                    this.CorporateFromNameField = value;
                    this.RaisePropertyChanged("CorporateFromName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateIDTo {
            get {
                return this.CorporateIDToField;
            }
            set {
                if ((this.CorporateIDToField.Equals(value) != true)) {
                    this.CorporateIDToField = value;
                    this.RaisePropertyChanged("CorporateIDTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateIDfrom {
            get {
                return this.CorporateIDfromField;
            }
            set {
                if ((this.CorporateIDfromField.Equals(value) != true)) {
                    this.CorporateIDfromField = value;
                    this.RaisePropertyChanged("CorporateIDfrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateToName {
            get {
                return this.CorporateToNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateToNameField, value) != true)) {
                    this.CorporateToNameField = value;
                    this.RaisePropertyChanged("CorporateToName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DeletedBy {
            get {
                return this.DeletedByField;
            }
            set {
                if ((this.DeletedByField.Equals(value) != true)) {
                    this.DeletedByField = value;
                    this.RaisePropertyChanged("DeletedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityFromName {
            get {
                return this.FacilityFromNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityFromNameField, value) != true)) {
                    this.FacilityFromNameField = value;
                    this.RaisePropertyChanged("FacilityFromName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityIDFrom {
            get {
                return this.FacilityIDFromField;
            }
            set {
                if ((this.FacilityIDFromField.Equals(value) != true)) {
                    this.FacilityIDFromField = value;
                    this.RaisePropertyChanged("FacilityIDFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityIDTo {
            get {
                return this.FacilityIDToField;
            }
            set {
                if ((this.FacilityIDToField.Equals(value) != true)) {
                    this.FacilityIDToField = value;
                    this.RaisePropertyChanged("FacilityIDTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityToName {
            get {
                return this.FacilityToNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityToNameField, value) != true)) {
                    this.FacilityToNameField = value;
                    this.RaisePropertyChanged("FacilityToName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvenValue {
            get {
                return this.InvenValueField;
            }
            set {
                if ((object.ReferenceEquals(this.InvenValueField, value) != true)) {
                    this.InvenValueField = value;
                    this.RaisePropertyChanged("InvenValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListCategoryID {
            get {
                return this.ListCategoryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCategoryIDField, value) != true)) {
                    this.ListCategoryIDField = value;
                    this.RaisePropertyChanged("ListCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListCorporateID {
            get {
                return this.ListCorporateIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCorporateIDField, value) != true)) {
                    this.ListCorporateIDField = value;
                    this.RaisePropertyChanged("ListCorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListFacilityID {
            get {
                return this.ListFacilityIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListFacilityIDField, value) != true)) {
                    this.ListFacilityIDField = value;
                    this.RaisePropertyChanged("ListFacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockTimeOut {
            get {
                return this.LockTimeOutField;
            }
            set {
                if ((object.ReferenceEquals(this.LockTimeOutField, value) != true)) {
                    this.LockTimeOutField = value;
                    this.RaisePropertyChanged("LockTimeOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((this.LoggedinByField.Equals(value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransferINID {
            get {
                return this.TransferINIDField;
            }
            set {
                if ((this.TransferINIDField.Equals(value) != true)) {
                    this.TransferINIDField = value;
                    this.RaisePropertyChanged("TransferINID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TransferInDate {
            get {
                return this.TransferInDateField;
            }
            set {
                if ((this.TransferInDateField.Equals(value) != true)) {
                    this.TransferInDateField = value;
                    this.RaisePropertyChanged("TransferInDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferNo {
            get {
                return this.TransferNoField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferNoField, value) != true)) {
                    this.TransferNoField = value;
                    this.RaisePropertyChanged("TransferNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TransferOutDate {
            get {
                return this.TransferOutDateField;
            }
            set {
                if ((this.TransferOutDateField.Equals(value) != true)) {
                    this.TransferOutDateField = value;
                    this.RaisePropertyChanged("TransferOutDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransferOutID {
            get {
                return this.TransferOutIDField;
            }
            set {
                if ((this.TransferOutIDField.Equals(value) != true)) {
                    this.TransferOutIDField = value;
                    this.RaisePropertyChanged("TransferOutID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Transferqty {
            get {
                return this.TransferqtyField;
            }
            set {
                if ((this.TransferqtyField.Equals(value) != true)) {
                    this.TransferqtyField = value;
                    this.RaisePropertyChanged("Transferqty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UOMID {
            get {
                return this.UOMIDField;
            }
            set {
                if ((this.UOMIDField.Equals(value) != true)) {
                    this.UOMIDField = value;
                    this.RaisePropertyChanged("UOMID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Updatekeyvalue {
            get {
                return this.UpdatekeyvalueField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatekeyvalueField, value) != true)) {
                    this.UpdatekeyvalueField = value;
                    this.RaisePropertyChanged("Updatekeyvalue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALMedicalSuppliesRequest", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALMedicalSuppliesRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CombineKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DeletedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvenValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemcatgroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemdescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Inventory.Inventoryserref.BindMedicalsupplyDetail[] MSDetailsListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalSupplyDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalSupplyMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParlevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityinHandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SNGItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatekeyvalueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long loggedinByField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CombineKey {
            get {
                return this.CombineKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.CombineKeyField, value) != true)) {
                    this.CombineKeyField = value;
                    this.RaisePropertyChanged("CombineKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DeletedBy {
            get {
                return this.DeletedByField;
            }
            set {
                if ((this.DeletedByField.Equals(value) != true)) {
                    this.DeletedByField = value;
                    this.RaisePropertyChanged("DeletedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityName {
            get {
                return this.FacilityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityNameField, value) != true)) {
                    this.FacilityNameField = value;
                    this.RaisePropertyChanged("FacilityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvenValue {
            get {
                return this.InvenValueField;
            }
            set {
                if ((object.ReferenceEquals(this.InvenValueField, value) != true)) {
                    this.InvenValueField = value;
                    this.RaisePropertyChanged("InvenValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Itemcatgroup {
            get {
                return this.ItemcatgroupField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemcatgroupField, value) != true)) {
                    this.ItemcatgroupField = value;
                    this.RaisePropertyChanged("Itemcatgroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Itemdescription {
            get {
                return this.ItemdescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemdescriptionField, value) != true)) {
                    this.ItemdescriptionField = value;
                    this.RaisePropertyChanged("Itemdescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Inventory.Inventoryserref.BindMedicalsupplyDetail[] MSDetailsList {
            get {
                return this.MSDetailsListField;
            }
            set {
                if ((object.ReferenceEquals(this.MSDetailsListField, value) != true)) {
                    this.MSDetailsListField = value;
                    this.RaisePropertyChanged("MSDetailsList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalSupplyDetailID {
            get {
                return this.MedicalSupplyDetailIDField;
            }
            set {
                if ((this.MedicalSupplyDetailIDField.Equals(value) != true)) {
                    this.MedicalSupplyDetailIDField = value;
                    this.RaisePropertyChanged("MedicalSupplyDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalSupplyMasterID {
            get {
                return this.MedicalSupplyMasterIDField;
            }
            set {
                if ((this.MedicalSupplyMasterIDField.Equals(value) != true)) {
                    this.MedicalSupplyMasterIDField = value;
                    this.RaisePropertyChanged("MedicalSupplyMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderPeriod {
            get {
                return this.OrderPeriodField;
            }
            set {
                if ((this.OrderPeriodField.Equals(value) != true)) {
                    this.OrderPeriodField = value;
                    this.RaisePropertyChanged("OrderPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderQuantity {
            get {
                return this.OrderQuantityField;
            }
            set {
                if ((this.OrderQuantityField.Equals(value) != true)) {
                    this.OrderQuantityField = value;
                    this.RaisePropertyChanged("OrderQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((this.OrderTypeField.Equals(value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRNo {
            get {
                return this.PRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PRNoField, value) != true)) {
                    this.PRNoField = value;
                    this.RaisePropertyChanged("PRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parlevel {
            get {
                return this.ParlevelField;
            }
            set {
                if ((object.ReferenceEquals(this.ParlevelField, value) != true)) {
                    this.ParlevelField = value;
                    this.RaisePropertyChanged("Parlevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuantityPack {
            get {
                return this.QuantityPackField;
            }
            set {
                if ((this.QuantityPackField.Equals(value) != true)) {
                    this.QuantityPackField = value;
                    this.RaisePropertyChanged("QuantityPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuantityinHand {
            get {
                return this.QuantityinHandField;
            }
            set {
                if ((this.QuantityinHandField.Equals(value) != true)) {
                    this.QuantityinHandField = value;
                    this.RaisePropertyChanged("QuantityinHand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SNGItemID {
            get {
                return this.SNGItemIDField;
            }
            set {
                if ((this.SNGItemIDField.Equals(value) != true)) {
                    this.SNGItemIDField = value;
                    this.RaisePropertyChanged("SNGItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeDelivery {
            get {
                return this.TimeDeliveryField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeDeliveryField, value) != true)) {
                    this.TimeDeliveryField = value;
                    this.RaisePropertyChanged("TimeDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((this.UOMField.Equals(value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Updatekeyvalue {
            get {
                return this.UpdatekeyvalueField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatekeyvalueField, value) != true)) {
                    this.UpdatekeyvalueField = value;
                    this.RaisePropertyChanged("Updatekeyvalue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Vendor {
            get {
                return this.VendorField;
            }
            set {
                if ((this.VendorField.Equals(value) != true)) {
                    this.VendorField = value;
                    this.RaisePropertyChanged("Vendor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long loggedinBy {
            get {
                return this.loggedinByField;
            }
            set {
                if ((this.loggedinByField.Equals(value) != true)) {
                    this.loggedinByField = value;
                    this.RaisePropertyChanged("loggedinBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindMedicalsupplyDetail", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindMedicalsupplyDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LockedbyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalSuppliesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalsuppliesItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParlevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QtyInHandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UomIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorItemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Corporate {
            get {
                return this.CorporateField;
            }
            set {
                if ((this.CorporateField.Equals(value) != true)) {
                    this.CorporateField = value;
                    this.RaisePropertyChanged("Corporate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Facility {
            get {
                return this.FacilityField;
            }
            set {
                if ((this.FacilityField.Equals(value) != true)) {
                    this.FacilityField = value;
                    this.RaisePropertyChanged("Facility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((this.IsReadOnlyField.Equals(value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Lockedby {
            get {
                return this.LockedbyField;
            }
            set {
                if ((this.LockedbyField.Equals(value) != true)) {
                    this.LockedbyField = value;
                    this.RaisePropertyChanged("Lockedby");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalSuppliesID {
            get {
                return this.MedicalSuppliesIDField;
            }
            set {
                if ((this.MedicalSuppliesIDField.Equals(value) != true)) {
                    this.MedicalSuppliesIDField = value;
                    this.RaisePropertyChanged("MedicalSuppliesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalsuppliesItemID {
            get {
                return this.MedicalsuppliesItemIDField;
            }
            set {
                if ((this.MedicalsuppliesItemIDField.Equals(value) != true)) {
                    this.MedicalsuppliesItemIDField = value;
                    this.RaisePropertyChanged("MedicalsuppliesItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderPeriod {
            get {
                return this.OrderPeriodField;
            }
            set {
                if ((this.OrderPeriodField.Equals(value) != true)) {
                    this.OrderPeriodField = value;
                    this.RaisePropertyChanged("OrderPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((this.OrderTypeField.Equals(value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRNo {
            get {
                return this.PRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PRNoField, value) != true)) {
                    this.PRNoField = value;
                    this.RaisePropertyChanged("PRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parlevel {
            get {
                return this.ParlevelField;
            }
            set {
                if ((object.ReferenceEquals(this.ParlevelField, value) != true)) {
                    this.ParlevelField = value;
                    this.RaisePropertyChanged("Parlevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QtyInHand {
            get {
                return this.QtyInHandField;
            }
            set {
                if ((this.QtyInHandField.Equals(value) != true)) {
                    this.QtyInHandField = value;
                    this.RaisePropertyChanged("QtyInHand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowNumber {
            get {
                return this.RowNumberField;
            }
            set {
                if ((this.RowNumberField.Equals(value) != true)) {
                    this.RowNumberField = value;
                    this.RaisePropertyChanged("RowNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeDelivery {
            get {
                return this.TimeDeliveryField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeDeliveryField, value) != true)) {
                    this.TimeDeliveryField = value;
                    this.RaisePropertyChanged("TimeDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UomID {
            get {
                return this.UomIDField;
            }
            set {
                if ((this.UomIDField.Equals(value) != true)) {
                    this.UomIDField = value;
                    this.RaisePropertyChanged("UomID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Vendor {
            get {
                return this.VendorField;
            }
            set {
                if ((this.VendorField.Equals(value) != true)) {
                    this.VendorField = value;
                    this.RaisePropertyChanged("Vendor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorItemID {
            get {
                return this.VendorItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorItemIDField, value) != true)) {
                    this.VendorItemIDField = value;
                    this.RaisePropertyChanged("VendorItemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALFacility", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALFacility : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdminEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdminPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdminPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BillStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BillXtnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillZipCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CopyFacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMRCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EmployeeCensusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FCorporateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GPAccountCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiededByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiededOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LogginByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PatientCensusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TechEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TechPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TechPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TxWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long XtnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipcodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveField, value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdminEmail {
            get {
                return this.AdminEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminEmailField, value) != true)) {
                    this.AdminEmailField = value;
                    this.RaisePropertyChanged("AdminEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdminPerson {
            get {
                return this.AdminPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminPersonField, value) != true)) {
                    this.AdminPersonField = value;
                    this.RaisePropertyChanged("AdminPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdminPhone {
            get {
                return this.AdminPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminPhoneField, value) != true)) {
                    this.AdminPhoneField = value;
                    this.RaisePropertyChanged("AdminPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAddress1 {
            get {
                return this.BillAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.BillAddress1Field, value) != true)) {
                    this.BillAddress1Field = value;
                    this.RaisePropertyChanged("BillAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAddress2 {
            get {
                return this.BillAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.BillAddress2Field, value) != true)) {
                    this.BillAddress2Field = value;
                    this.RaisePropertyChanged("BillAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillCity {
            get {
                return this.BillCityField;
            }
            set {
                if ((object.ReferenceEquals(this.BillCityField, value) != true)) {
                    this.BillCityField = value;
                    this.RaisePropertyChanged("BillCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillFax {
            get {
                return this.BillFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.BillFaxField, value) != true)) {
                    this.BillFaxField = value;
                    this.RaisePropertyChanged("BillFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillPhone {
            get {
                return this.BillPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.BillPhoneField, value) != true)) {
                    this.BillPhoneField = value;
                    this.RaisePropertyChanged("BillPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BillState {
            get {
                return this.BillStateField;
            }
            set {
                if ((this.BillStateField.Equals(value) != true)) {
                    this.BillStateField = value;
                    this.RaisePropertyChanged("BillState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BillXtn {
            get {
                return this.BillXtnField;
            }
            set {
                if ((this.BillXtnField.Equals(value) != true)) {
                    this.BillXtnField = value;
                    this.RaisePropertyChanged("BillXtn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillZipCode {
            get {
                return this.BillZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillZipCodeField, value) != true)) {
                    this.BillZipCodeField = value;
                    this.RaisePropertyChanged("BillZipCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CopyFacilityID {
            get {
                return this.CopyFacilityIDField;
            }
            set {
                if ((this.CopyFacilityIDField.Equals(value) != true)) {
                    this.CopyFacilityIDField = value;
                    this.RaisePropertyChanged("CopyFacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMRCode {
            get {
                return this.EMRCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EMRCodeField, value) != true)) {
                    this.EMRCodeField = value;
                    this.RaisePropertyChanged("EMRCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EmployeeCensus {
            get {
                return this.EmployeeCensusField;
            }
            set {
                if ((this.EmployeeCensusField.Equals(value) != true)) {
                    this.EmployeeCensusField = value;
                    this.RaisePropertyChanged("EmployeeCensus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FCorporate {
            get {
                return this.FCorporateField;
            }
            set {
                if ((this.FCorporateField.Equals(value) != true)) {
                    this.FCorporateField = value;
                    this.RaisePropertyChanged("FCorporate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GPAccountCode {
            get {
                return this.GPAccountCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GPAccountCodeField, value) != true)) {
                    this.GPAccountCodeField = value;
                    this.RaisePropertyChanged("GPAccountCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiededBy {
            get {
                return this.LastModifiededByField;
            }
            set {
                if ((this.LastModifiededByField.Equals(value) != true)) {
                    this.LastModifiededByField = value;
                    this.RaisePropertyChanged("LastModifiededBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiededOn {
            get {
                return this.LastModifiededOnField;
            }
            set {
                if ((this.LastModifiededOnField.Equals(value) != true)) {
                    this.LastModifiededOnField = value;
                    this.RaisePropertyChanged("LastModifiededOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LogginBy {
            get {
                return this.LogginByField;
            }
            set {
                if ((this.LogginByField.Equals(value) != true)) {
                    this.LogginByField = value;
                    this.RaisePropertyChanged("LogginBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PatientCensus {
            get {
                return this.PatientCensusField;
            }
            set {
                if ((this.PatientCensusField.Equals(value) != true)) {
                    this.PatientCensusField = value;
                    this.RaisePropertyChanged("PatientCensus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchText {
            get {
                return this.SearchTextField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchTextField, value) != true)) {
                    this.SearchTextField = value;
                    this.RaisePropertyChanged("SearchText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TechEmail {
            get {
                return this.TechEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.TechEmailField, value) != true)) {
                    this.TechEmailField = value;
                    this.RaisePropertyChanged("TechEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TechPerson {
            get {
                return this.TechPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.TechPersonField, value) != true)) {
                    this.TechPersonField = value;
                    this.RaisePropertyChanged("TechPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TechPhone {
            get {
                return this.TechPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TechPhoneField, value) != true)) {
                    this.TechPhoneField = value;
                    this.RaisePropertyChanged("TechPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TxWeek {
            get {
                return this.TxWeekField;
            }
            set {
                if ((this.TxWeekField.Equals(value) != true)) {
                    this.TxWeekField = value;
                    this.RaisePropertyChanged("TxWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Xtn {
            get {
                return this.XtnField;
            }
            set {
                if ((this.XtnField.Equals(value) != true)) {
                    this.XtnField = value;
                    this.RaisePropertyChanged("Xtn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zipcode {
            get {
                return this.ZipcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipcodeField, value) != true)) {
                    this.ZipcodeField = value;
                    this.RaisePropertyChanged("Zipcode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALFacilityVendorAccount", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALFacilityVendorAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityVendorAccIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsStrActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListFacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoggedINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAccount {
            get {
                return this.BillAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BillAccountField, value) != true)) {
                    this.BillAccountField = value;
                    this.RaisePropertyChanged("BillAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityVendorAccID {
            get {
                return this.FacilityVendorAccIDField;
            }
            set {
                if ((this.FacilityVendorAccIDField.Equals(value) != true)) {
                    this.FacilityVendorAccIDField = value;
                    this.RaisePropertyChanged("FacilityVendorAccID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsStrActive {
            get {
                return this.IsStrActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsStrActiveField, value) != true)) {
                    this.IsStrActiveField = value;
                    this.RaisePropertyChanged("IsStrActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListFacilityID {
            get {
                return this.ListFacilityIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListFacilityIDField, value) != true)) {
                    this.ListFacilityIDField = value;
                    this.RaisePropertyChanged("ListFacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListVendorID {
            get {
                return this.ListVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListVendorIDField, value) != true)) {
                    this.ListVendorIDField = value;
                    this.RaisePropertyChanged("ListVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoggedIN {
            get {
                return this.LoggedINField;
            }
            set {
                if ((this.LoggedINField.Equals(value) != true)) {
                    this.LoggedINField = value;
                    this.RaisePropertyChanged("LoggedIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAccount {
            get {
                return this.ShipAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAccountField, value) != true)) {
                    this.ShipAccountField = value;
                    this.RaisePropertyChanged("ShipAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALVendor", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALVendor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlternateEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BuildingMaintenanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ITField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsStrActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MachinePartsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RegularSuppliesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServiceOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorUIIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long XtnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool All {
            get {
                return this.AllField;
            }
            set {
                if ((this.AllField.Equals(value) != true)) {
                    this.AllField = value;
                    this.RaisePropertyChanged("All");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlternateEmail {
            get {
                return this.AlternateEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateEmailField, value) != true)) {
                    this.AlternateEmailField = value;
                    this.RaisePropertyChanged("AlternateEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BuildingMaintenance {
            get {
                return this.BuildingMaintenanceField;
            }
            set {
                if ((this.BuildingMaintenanceField.Equals(value) != true)) {
                    this.BuildingMaintenanceField = value;
                    this.RaisePropertyChanged("BuildingMaintenance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactEmail {
            get {
                return this.ContactEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactEmailField, value) != true)) {
                    this.ContactEmailField = value;
                    this.RaisePropertyChanged("ContactEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPhone {
            get {
                return this.ContactPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPhoneField, value) != true)) {
                    this.ContactPhoneField = value;
                    this.RaisePropertyChanged("ContactPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IT {
            get {
                return this.ITField;
            }
            set {
                if ((this.ITField.Equals(value) != true)) {
                    this.ITField = value;
                    this.RaisePropertyChanged("IT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsStrActive {
            get {
                return this.IsStrActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsStrActiveField, value) != true)) {
                    this.IsStrActiveField = value;
                    this.RaisePropertyChanged("IsStrActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((this.LoggedinByField.Equals(value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MachineParts {
            get {
                return this.MachinePartsField;
            }
            set {
                if ((this.MachinePartsField.Equals(value) != true)) {
                    this.MachinePartsField = value;
                    this.RaisePropertyChanged("MachineParts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POEmail {
            get {
                return this.POEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.POEmailField, value) != true)) {
                    this.POEmailField = value;
                    this.RaisePropertyChanged("POEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RegularSupplies {
            get {
                return this.RegularSuppliesField;
            }
            set {
                if ((this.RegularSuppliesField.Equals(value) != true)) {
                    this.RegularSuppliesField = value;
                    this.RaisePropertyChanged("RegularSupplies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchItem {
            get {
                return this.SearchItemField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchItemField, value) != true)) {
                    this.SearchItemField = value;
                    this.RaisePropertyChanged("SearchItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServiceOrder {
            get {
                return this.ServiceOrderField;
            }
            set {
                if ((this.ServiceOrderField.Equals(value) != true)) {
                    this.ServiceOrderField = value;
                    this.RaisePropertyChanged("ServiceOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((this.UpdatedByField.Equals(value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorUIID {
            get {
                return this.VendorUIIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorUIIDField, value) != true)) {
                    this.VendorUIIDField = value;
                    this.RaisePropertyChanged("VendorUIID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Xtn {
            get {
                return this.XtnField;
            }
            set {
                if ((this.XtnField.Equals(value) != true)) {
                    this.XtnField = value;
                    this.RaisePropertyChanged("Xtn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALPGroup", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALPGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsStrActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsStrActive {
            get {
                return this.IsStrActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsStrActiveField, value) != true)) {
                    this.IsStrActiveField = value;
                    this.RaisePropertyChanged("IsStrActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((this.LoggedinByField.Equals(value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchItem {
            get {
                return this.SearchItemField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchItemField, value) != true)) {
                    this.SearchItemField = value;
                    this.RaisePropertyChanged("SearchItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Usage {
            get {
                return this.UsageField;
            }
            set {
                if ((object.ReferenceEquals(this.UsageField, value) != true)) {
                    this.UsageField = value;
                    this.RaisePropertyChanged("Usage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALUom", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALUom : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsActivestrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UomIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UomNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsActivestr {
            get {
                return this.IsActivestrField;
            }
            set {
                if ((object.ReferenceEquals(this.IsActivestrField, value) != true)) {
                    this.IsActivestrField = value;
                    this.RaisePropertyChanged("IsActivestr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((this.LoggedinByField.Equals(value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UomID {
            get {
                return this.UomIDField;
            }
            set {
                if ((this.UomIDField.Equals(value) != true)) {
                    this.UomIDField = value;
                    this.RaisePropertyChanged("UomID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UomName {
            get {
                return this.UomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UomNameField, value) != true)) {
                    this.UomNameField = value;
                    this.RaisePropertyChanged("UomName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALItem", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategorylistIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EachPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GPBillingCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsStrActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NDCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NonStandardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StandardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitPriceCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UomNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategorylistID {
            get {
                return this.CategorylistIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CategorylistIDField, value) != true)) {
                    this.CategorylistIDField = value;
                    this.RaisePropertyChanged("CategorylistID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CurrencyID {
            get {
                return this.CurrencyIDField;
            }
            set {
                if ((this.CurrencyIDField.Equals(value) != true)) {
                    this.CurrencyIDField = value;
                    this.RaisePropertyChanged("CurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyName {
            get {
                return this.CurrencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyNameField, value) != true)) {
                    this.CurrencyNameField = value;
                    this.RaisePropertyChanged("CurrencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EachPrice {
            get {
                return this.EachPriceField;
            }
            set {
                if ((this.EachPriceField.Equals(value) != true)) {
                    this.EachPriceField = value;
                    this.RaisePropertyChanged("EachPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GPBillingCode {
            get {
                return this.GPBillingCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GPBillingCodeField, value) != true)) {
                    this.GPBillingCodeField = value;
                    this.RaisePropertyChanged("GPBillingCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsStrActive {
            get {
                return this.IsStrActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsStrActiveField, value) != true)) {
                    this.IsStrActiveField = value;
                    this.RaisePropertyChanged("IsStrActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemShortName {
            get {
                return this.ItemShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemShortNameField, value) != true)) {
                    this.ItemShortNameField = value;
                    this.RaisePropertyChanged("ItemShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((this.LoggedinByField.Equals(value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NDC {
            get {
                return this.NDCField;
            }
            set {
                if ((object.ReferenceEquals(this.NDCField, value) != true)) {
                    this.NDCField = value;
                    this.RaisePropertyChanged("NDC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NonStandard {
            get {
                return this.NonStandardField;
            }
            set {
                if ((this.NonStandardField.Equals(value) != true)) {
                    this.NonStandardField = value;
                    this.RaisePropertyChanged("NonStandard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Standard {
            get {
                return this.StandardField;
            }
            set {
                if ((this.StandardField.Equals(value) != true)) {
                    this.StandardField = value;
                    this.RaisePropertyChanged("Standard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((this.UOMField.Equals(value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitPriceCurrency {
            get {
                return this.UnitPriceCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitPriceCurrencyField, value) != true)) {
                    this.UnitPriceCurrencyField = value;
                    this.RaisePropertyChanged("UnitPriceCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPriceValue {
            get {
                return this.UnitPriceValueField;
            }
            set {
                if ((this.UnitPriceValueField.Equals(value) != true)) {
                    this.UnitPriceValueField = value;
                    this.RaisePropertyChanged("UnitPriceValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UomName {
            get {
                return this.UomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UomNameField, value) != true)) {
                    this.UomNameField = value;
                    this.RaisePropertyChanged("UomName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALMachinemaster", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALMachinemaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipementCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipementCategorydescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipementListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipementListdescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipementSubCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipementSubCategorydescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GpAccountCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HoursonthemachineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IstrActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MachineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturedyearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarrantyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipementCategoryID {
            get {
                return this.EquipementCategoryIDField;
            }
            set {
                if ((this.EquipementCategoryIDField.Equals(value) != true)) {
                    this.EquipementCategoryIDField = value;
                    this.RaisePropertyChanged("EquipementCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipementCategorydesc {
            get {
                return this.EquipementCategorydescField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipementCategorydescField, value) != true)) {
                    this.EquipementCategorydescField = value;
                    this.RaisePropertyChanged("EquipementCategorydesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipementListID {
            get {
                return this.EquipementListIDField;
            }
            set {
                if ((this.EquipementListIDField.Equals(value) != true)) {
                    this.EquipementListIDField = value;
                    this.RaisePropertyChanged("EquipementListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipementListdesc {
            get {
                return this.EquipementListdescField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipementListdescField, value) != true)) {
                    this.EquipementListdescField = value;
                    this.RaisePropertyChanged("EquipementListdesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipementSubCategoryID {
            get {
                return this.EquipementSubCategoryIDField;
            }
            set {
                if ((this.EquipementSubCategoryIDField.Equals(value) != true)) {
                    this.EquipementSubCategoryIDField = value;
                    this.RaisePropertyChanged("EquipementSubCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipementSubCategorydesc {
            get {
                return this.EquipementSubCategorydescField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipementSubCategorydescField, value) != true)) {
                    this.EquipementSubCategorydescField = value;
                    this.RaisePropertyChanged("EquipementSubCategorydesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GpAccountCode {
            get {
                return this.GpAccountCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GpAccountCodeField, value) != true)) {
                    this.GpAccountCodeField = value;
                    this.RaisePropertyChanged("GpAccountCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Hoursonthemachine {
            get {
                return this.HoursonthemachineField;
            }
            set {
                if ((this.HoursonthemachineField.Equals(value) != true)) {
                    this.HoursonthemachineField = value;
                    this.RaisePropertyChanged("Hoursonthemachine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IstrActive {
            get {
                return this.IstrActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IstrActiveField, value) != true)) {
                    this.IstrActiveField = value;
                    this.RaisePropertyChanged("IstrActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((this.LoggedinByField.Equals(value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MachineID {
            get {
                return this.MachineIDField;
            }
            set {
                if ((this.MachineIDField.Equals(value) != true)) {
                    this.MachineIDField = value;
                    this.RaisePropertyChanged("MachineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturedyear {
            get {
                return this.ManufacturedyearField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturedyearField, value) != true)) {
                    this.ManufacturedyearField = value;
                    this.RaisePropertyChanged("Manufacturedyear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerNo {
            get {
                return this.SerNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerNoField, value) != true)) {
                    this.SerNoField = value;
                    this.RaisePropertyChanged("SerNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Warranty {
            get {
                return this.WarrantyField;
            }
            set {
                if ((object.ReferenceEquals(this.WarrantyField, value) != true)) {
                    this.WarrantyField = value;
                    this.RaisePropertyChanged("Warranty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALCapital", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALCapital : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ApprovedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Inventory.Inventoryserref.GetCapitalItemDetails[] CRDetailsListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalItemDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalItemMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DeniedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipementListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipementListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipmentSubCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PricePerUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReplacementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequestTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SINoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ShippingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long loggedinByField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool All {
            get {
                return this.AllField;
            }
            set {
                if ((this.AllField.Equals(value) != true)) {
                    this.AllField = value;
                    this.RaisePropertyChanged("All");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ApprovedBy {
            get {
                return this.ApprovedByField;
            }
            set {
                if ((this.ApprovedByField.Equals(value) != true)) {
                    this.ApprovedByField = value;
                    this.RaisePropertyChanged("ApprovedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Inventory.Inventoryserref.GetCapitalItemDetails[] CRDetailsList {
            get {
                return this.CRDetailsListField;
            }
            set {
                if ((object.ReferenceEquals(this.CRDetailsListField, value) != true)) {
                    this.CRDetailsListField = value;
                    this.RaisePropertyChanged("CRDetailsList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CRNo {
            get {
                return this.CRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CRNoField, value) != true)) {
                    this.CRNoField = value;
                    this.RaisePropertyChanged("CRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalItemDetailsID {
            get {
                return this.CapitalItemDetailsIDField;
            }
            set {
                if ((this.CapitalItemDetailsIDField.Equals(value) != true)) {
                    this.CapitalItemDetailsIDField = value;
                    this.RaisePropertyChanged("CapitalItemDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalItemMasterID {
            get {
                return this.CapitalItemMasterIDField;
            }
            set {
                if ((this.CapitalItemMasterIDField.Equals(value) != true)) {
                    this.CapitalItemMasterIDField = value;
                    this.RaisePropertyChanged("CapitalItemMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DeniedBy {
            get {
                return this.DeniedByField;
            }
            set {
                if ((this.DeniedByField.Equals(value) != true)) {
                    this.DeniedByField = value;
                    this.RaisePropertyChanged("DeniedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipementList {
            get {
                return this.EquipementListField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipementListField, value) != true)) {
                    this.EquipementListField = value;
                    this.RaisePropertyChanged("EquipementList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipementListID {
            get {
                return this.EquipementListIDField;
            }
            set {
                if ((this.EquipementListIDField.Equals(value) != true)) {
                    this.EquipementListIDField = value;
                    this.RaisePropertyChanged("EquipementListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentCategory {
            get {
                return this.EquipmentCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentCategoryField, value) != true)) {
                    this.EquipmentCategoryField = value;
                    this.RaisePropertyChanged("EquipmentCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipmentCategoryID {
            get {
                return this.EquipmentCategoryIDField;
            }
            set {
                if ((this.EquipmentCategoryIDField.Equals(value) != true)) {
                    this.EquipmentCategoryIDField = value;
                    this.RaisePropertyChanged("EquipmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategory {
            get {
                return this.EquipmentSubCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryField, value) != true)) {
                    this.EquipmentSubCategoryField = value;
                    this.RaisePropertyChanged("EquipmentSubCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipmentSubCategoryID {
            get {
                return this.EquipmentSubCategoryIDField;
            }
            set {
                if ((this.EquipmentSubCategoryIDField.Equals(value) != true)) {
                    this.EquipmentSubCategoryIDField = value;
                    this.RaisePropertyChanged("EquipmentSubCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityName {
            get {
                return this.FacilityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityNameField, value) != true)) {
                    this.FacilityNameField = value;
                    this.RaisePropertyChanged("FacilityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool New {
            get {
                return this.NewField;
            }
            set {
                if ((this.NewField.Equals(value) != true)) {
                    this.NewField = value;
                    this.RaisePropertyChanged("New");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderQuantity {
            get {
                return this.OrderQuantityField;
            }
            set {
                if ((this.OrderQuantityField.Equals(value) != true)) {
                    this.OrderQuantityField = value;
                    this.RaisePropertyChanged("OrderQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PricePerUnit {
            get {
                return this.PricePerUnitField;
            }
            set {
                if ((this.PricePerUnitField.Equals(value) != true)) {
                    this.PricePerUnitField = value;
                    this.RaisePropertyChanged("PricePerUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Replacement {
            get {
                return this.ReplacementField;
            }
            set {
                if ((this.ReplacementField.Equals(value) != true)) {
                    this.ReplacementField = value;
                    this.RaisePropertyChanged("Replacement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequestType {
            get {
                return this.RequestTypeField;
            }
            set {
                if ((this.RequestTypeField.Equals(value) != true)) {
                    this.RequestTypeField = value;
                    this.RaisePropertyChanged("RequestType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SINo {
            get {
                return this.SINoField;
            }
            set {
                if ((this.SINoField.Equals(value) != true)) {
                    this.SINoField = value;
                    this.RaisePropertyChanged("SINo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ShippingID {
            get {
                return this.ShippingIDField;
            }
            set {
                if ((this.ShippingIDField.Equals(value) != true)) {
                    this.ShippingIDField = value;
                    this.RaisePropertyChanged("ShippingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long loggedinBy {
            get {
                return this.loggedinByField;
            }
            set {
                if ((this.loggedinByField.Equals(value) != true)) {
                    this.loggedinByField = value;
                    this.RaisePropertyChanged("loggedinBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCapitalItemDetails", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetCapitalItemDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalItemDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalItemMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipementListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipementListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipementSubCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LockedbyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> OrderQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PricePerUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalItemDetailsID {
            get {
                return this.CapitalItemDetailsIDField;
            }
            set {
                if ((this.CapitalItemDetailsIDField.Equals(value) != true)) {
                    this.CapitalItemDetailsIDField = value;
                    this.RaisePropertyChanged("CapitalItemDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalItemMasterID {
            get {
                return this.CapitalItemMasterIDField;
            }
            set {
                if ((this.CapitalItemMasterIDField.Equals(value) != true)) {
                    this.CapitalItemMasterIDField = value;
                    this.RaisePropertyChanged("CapitalItemMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipementList {
            get {
                return this.EquipementListField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipementListField, value) != true)) {
                    this.EquipementListField = value;
                    this.RaisePropertyChanged("EquipementList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipementListID {
            get {
                return this.EquipementListIDField;
            }
            set {
                if ((this.EquipementListIDField.Equals(value) != true)) {
                    this.EquipementListIDField = value;
                    this.RaisePropertyChanged("EquipementListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipementSubCategoryID {
            get {
                return this.EquipementSubCategoryIDField;
            }
            set {
                if ((this.EquipementSubCategoryIDField.Equals(value) != true)) {
                    this.EquipementSubCategoryIDField = value;
                    this.RaisePropertyChanged("EquipementSubCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategory {
            get {
                return this.EquipmentSubCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryField, value) != true)) {
                    this.EquipmentSubCategoryField = value;
                    this.RaisePropertyChanged("EquipmentSubCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((this.IsReadOnlyField.Equals(value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Lockedby {
            get {
                return this.LockedbyField;
            }
            set {
                if ((this.LockedbyField.Equals(value) != true)) {
                    this.LockedbyField = value;
                    this.RaisePropertyChanged("Lockedby");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> OrderQuantity {
            get {
                return this.OrderQuantityField;
            }
            set {
                if ((this.OrderQuantityField.Equals(value) != true)) {
                    this.OrderQuantityField = value;
                    this.RaisePropertyChanged("OrderQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PricePerUnit {
            get {
                return this.PricePerUnitField;
            }
            set {
                if ((this.PricePerUnitField.Equals(value) != true)) {
                    this.PricePerUnitField = value;
                    this.RaisePropertyChanged("PricePerUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALMedicalSupplyRequestPo", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALMedicalSupplyRequestPo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DeletedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvenValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalSupplyMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] OrderContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PRMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatekeyvalueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DeletedBy {
            get {
                return this.DeletedByField;
            }
            set {
                if ((this.DeletedByField.Equals(value) != true)) {
                    this.DeletedByField = value;
                    this.RaisePropertyChanged("DeletedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityName {
            get {
                return this.FacilityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityNameField, value) != true)) {
                    this.FacilityNameField = value;
                    this.RaisePropertyChanged("FacilityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvenValue {
            get {
                return this.InvenValueField;
            }
            set {
                if ((object.ReferenceEquals(this.InvenValueField, value) != true)) {
                    this.InvenValueField = value;
                    this.RaisePropertyChanged("InvenValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((this.LoggedinByField.Equals(value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalSupplyMasterID {
            get {
                return this.MedicalSupplyMasterIDField;
            }
            set {
                if ((this.MedicalSupplyMasterIDField.Equals(value) != true)) {
                    this.MedicalSupplyMasterIDField = value;
                    this.RaisePropertyChanged("MedicalSupplyMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] OrderContent {
            get {
                return this.OrderContentField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderContentField, value) != true)) {
                    this.OrderContentField = value;
                    this.RaisePropertyChanged("OrderContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONo {
            get {
                return this.PONoField;
            }
            set {
                if ((object.ReferenceEquals(this.PONoField, value) != true)) {
                    this.PONoField = value;
                    this.RaisePropertyChanged("PONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PRMasterID {
            get {
                return this.PRMasterIDField;
            }
            set {
                if ((this.PRMasterIDField.Equals(value) != true)) {
                    this.PRMasterIDField = value;
                    this.RaisePropertyChanged("PRMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRNo {
            get {
                return this.PRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PRNoField, value) != true)) {
                    this.PRNoField = value;
                    this.RaisePropertyChanged("PRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Updatekeyvalue {
            get {
                return this.UpdatekeyvalueField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatekeyvalueField, value) != true)) {
                    this.UpdatekeyvalueField = value;
                    this.RaisePropertyChanged("Updatekeyvalue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Vendor {
            get {
                return this.VendorField;
            }
            set {
                if ((this.VendorField.Equals(value) != true)) {
                    this.VendorField = value;
                    this.RaisePropertyChanged("Vendor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALRequestITPO", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALRequestITPO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AudittrialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITNNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] OrderContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RequestITMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RequestITOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorIDsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audittrial {
            get {
                return this.AudittrialField;
            }
            set {
                if ((object.ReferenceEquals(this.AudittrialField, value) != true)) {
                    this.AudittrialField = value;
                    this.RaisePropertyChanged("Audittrial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateIDs {
            get {
                return this.CorporateIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateIDsField, value) != true)) {
                    this.CorporateIDsField = value;
                    this.RaisePropertyChanged("CorporateIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityIDs {
            get {
                return this.FacilityIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityIDsField, value) != true)) {
                    this.FacilityIDsField = value;
                    this.RaisePropertyChanged("FacilityIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITNNo {
            get {
                return this.ITNNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITNNoField, value) != true)) {
                    this.ITNNoField = value;
                    this.RaisePropertyChanged("ITNNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITRNo {
            get {
                return this.ITRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITRNoField, value) != true)) {
                    this.ITRNoField = value;
                    this.RaisePropertyChanged("ITRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((this.LoggedinByField.Equals(value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] OrderContent {
            get {
                return this.OrderContentField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderContentField, value) != true)) {
                    this.OrderContentField = value;
                    this.RaisePropertyChanged("OrderContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RequestITMasterID {
            get {
                return this.RequestITMasterIDField;
            }
            set {
                if ((this.RequestITMasterIDField.Equals(value) != true)) {
                    this.RequestITMasterIDField = value;
                    this.RaisePropertyChanged("RequestITMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RequestITOrderID {
            get {
                return this.RequestITOrderIDField;
            }
            set {
                if ((this.RequestITOrderIDField.Equals(value) != true)) {
                    this.RequestITOrderIDField = value;
                    this.RaisePropertyChanged("RequestITOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorIDs {
            get {
                return this.VendorIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorIDsField, value) != true)) {
                    this.VendorIDsField = value;
                    this.RaisePropertyChanged("VendorIDs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALMachinePartsOrder", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALMachinePartsOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DeletedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvenValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListCorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListFacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MPRMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MachinePartsRequestOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] OrderContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatekeyvalueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DeletedBy {
            get {
                return this.DeletedByField;
            }
            set {
                if ((this.DeletedByField.Equals(value) != true)) {
                    this.DeletedByField = value;
                    this.RaisePropertyChanged("DeletedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvenValue {
            get {
                return this.InvenValueField;
            }
            set {
                if ((object.ReferenceEquals(this.InvenValueField, value) != true)) {
                    this.InvenValueField = value;
                    this.RaisePropertyChanged("InvenValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListCorporateID {
            get {
                return this.ListCorporateIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCorporateIDField, value) != true)) {
                    this.ListCorporateIDField = value;
                    this.RaisePropertyChanged("ListCorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListFacilityID {
            get {
                return this.ListFacilityIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListFacilityIDField, value) != true)) {
                    this.ListFacilityIDField = value;
                    this.RaisePropertyChanged("ListFacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListVendorID {
            get {
                return this.ListVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListVendorIDField, value) != true)) {
                    this.ListVendorIDField = value;
                    this.RaisePropertyChanged("ListVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((this.LoggedinByField.Equals(value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPONo {
            get {
                return this.MPONoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPONoField, value) != true)) {
                    this.MPONoField = value;
                    this.RaisePropertyChanged("MPONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MPRMasterID {
            get {
                return this.MPRMasterIDField;
            }
            set {
                if ((this.MPRMasterIDField.Equals(value) != true)) {
                    this.MPRMasterIDField = value;
                    this.RaisePropertyChanged("MPRMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPRNo {
            get {
                return this.MPRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPRNoField, value) != true)) {
                    this.MPRNoField = value;
                    this.RaisePropertyChanged("MPRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MachinePartsRequestOrderID {
            get {
                return this.MachinePartsRequestOrderIDField;
            }
            set {
                if ((this.MachinePartsRequestOrderIDField.Equals(value) != true)) {
                    this.MachinePartsRequestOrderIDField = value;
                    this.RaisePropertyChanged("MachinePartsRequestOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] OrderContent {
            get {
                return this.OrderContentField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderContentField, value) != true)) {
                    this.OrderContentField = value;
                    this.RaisePropertyChanged("OrderContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Updatekeyvalue {
            get {
                return this.UpdatekeyvalueField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatekeyvalueField, value) != true)) {
                    this.UpdatekeyvalueField = value;
                    this.RaisePropertyChanged("Updatekeyvalue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALCapitalPO", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALCapitalPO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AudittrialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CPONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalItemMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListCorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListFacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] OrderContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audittrial {
            get {
                return this.AudittrialField;
            }
            set {
                if ((object.ReferenceEquals(this.AudittrialField, value) != true)) {
                    this.AudittrialField = value;
                    this.RaisePropertyChanged("Audittrial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CPONo {
            get {
                return this.CPONoField;
            }
            set {
                if ((object.ReferenceEquals(this.CPONoField, value) != true)) {
                    this.CPONoField = value;
                    this.RaisePropertyChanged("CPONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalItemMasterID {
            get {
                return this.CapitalItemMasterIDField;
            }
            set {
                if ((this.CapitalItemMasterIDField.Equals(value) != true)) {
                    this.CapitalItemMasterIDField = value;
                    this.RaisePropertyChanged("CapitalItemMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalOrderID {
            get {
                return this.CapitalOrderIDField;
            }
            set {
                if ((this.CapitalOrderIDField.Equals(value) != true)) {
                    this.CapitalOrderIDField = value;
                    this.RaisePropertyChanged("CapitalOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListCorporateID {
            get {
                return this.ListCorporateIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCorporateIDField, value) != true)) {
                    this.ListCorporateIDField = value;
                    this.RaisePropertyChanged("ListCorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListFacilityID {
            get {
                return this.ListFacilityIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListFacilityIDField, value) != true)) {
                    this.ListFacilityIDField = value;
                    this.RaisePropertyChanged("ListFacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListVendorID {
            get {
                return this.ListVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListVendorIDField, value) != true)) {
                    this.ListVendorIDField = value;
                    this.RaisePropertyChanged("ListVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((this.LoggedinByField.Equals(value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] OrderContent {
            get {
                return this.OrderContentField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderContentField, value) != true)) {
                    this.OrderContentField = value;
                    this.RaisePropertyChanged("OrderContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALMPRMaster", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALMPRMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipementListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipementListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipementSubCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipementSubCategorydescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HoursonthemachineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Inventory.Inventoryserref.GetMPRDetailsbyMPRMasterID[] MPDetailsListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MPRDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MPRMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PricePerUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ShippingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long loggedinByField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipementList {
            get {
                return this.EquipementListField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipementListField, value) != true)) {
                    this.EquipementListField = value;
                    this.RaisePropertyChanged("EquipementList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipementListID {
            get {
                return this.EquipementListIDField;
            }
            set {
                if ((this.EquipementListIDField.Equals(value) != true)) {
                    this.EquipementListIDField = value;
                    this.RaisePropertyChanged("EquipementListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipementSubCategoryID {
            get {
                return this.EquipementSubCategoryIDField;
            }
            set {
                if ((this.EquipementSubCategoryIDField.Equals(value) != true)) {
                    this.EquipementSubCategoryIDField = value;
                    this.RaisePropertyChanged("EquipementSubCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipementSubCategorydesc {
            get {
                return this.EquipementSubCategorydescField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipementSubCategorydescField, value) != true)) {
                    this.EquipementSubCategorydescField = value;
                    this.RaisePropertyChanged("EquipementSubCategorydesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentCategory {
            get {
                return this.EquipmentCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentCategoryField, value) != true)) {
                    this.EquipmentCategoryField = value;
                    this.RaisePropertyChanged("EquipmentCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipmentCategoryID {
            get {
                return this.EquipmentCategoryIDField;
            }
            set {
                if ((this.EquipmentCategoryIDField.Equals(value) != true)) {
                    this.EquipmentCategoryIDField = value;
                    this.RaisePropertyChanged("EquipmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityName {
            get {
                return this.FacilityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityNameField, value) != true)) {
                    this.FacilityNameField = value;
                    this.RaisePropertyChanged("FacilityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hoursonthemachine {
            get {
                return this.HoursonthemachineField;
            }
            set {
                if ((object.ReferenceEquals(this.HoursonthemachineField, value) != true)) {
                    this.HoursonthemachineField = value;
                    this.RaisePropertyChanged("Hoursonthemachine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemIDField, value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Inventory.Inventoryserref.GetMPRDetailsbyMPRMasterID[] MPDetailsList {
            get {
                return this.MPDetailsListField;
            }
            set {
                if ((object.ReferenceEquals(this.MPDetailsListField, value) != true)) {
                    this.MPDetailsListField = value;
                    this.RaisePropertyChanged("MPDetailsList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MPRDetailID {
            get {
                return this.MPRDetailIDField;
            }
            set {
                if ((this.MPRDetailIDField.Equals(value) != true)) {
                    this.MPRDetailIDField = value;
                    this.RaisePropertyChanged("MPRDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MPRMasterID {
            get {
                return this.MPRMasterIDField;
            }
            set {
                if ((this.MPRMasterIDField.Equals(value) != true)) {
                    this.MPRMasterIDField = value;
                    this.RaisePropertyChanged("MPRMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPRNo {
            get {
                return this.MPRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPRNoField, value) != true)) {
                    this.MPRNoField = value;
                    this.RaisePropertyChanged("MPRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderQuantity {
            get {
                return this.OrderQuantityField;
            }
            set {
                if ((this.OrderQuantityField.Equals(value) != true)) {
                    this.OrderQuantityField = value;
                    this.RaisePropertyChanged("OrderQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PricePerUnit {
            get {
                return this.PricePerUnitField;
            }
            set {
                if ((this.PricePerUnitField.Equals(value) != true)) {
                    this.PricePerUnitField = value;
                    this.RaisePropertyChanged("PricePerUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ShippingID {
            get {
                return this.ShippingIDField;
            }
            set {
                if ((this.ShippingIDField.Equals(value) != true)) {
                    this.ShippingIDField = value;
                    this.RaisePropertyChanged("ShippingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long loggedinBy {
            get {
                return this.loggedinByField;
            }
            set {
                if ((this.loggedinByField.Equals(value) != true)) {
                    this.loggedinByField = value;
                    this.RaisePropertyChanged("loggedinBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALRequestIT", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALRequestIT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AudittrialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipementListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipementListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Inventory.Inventoryserref.GetMPRDetailsbyMPRMasterID[] MPDetailsListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PricePerQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RequestITDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RequestITMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RequestTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SINoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ShippingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long loggedinByField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audittrial {
            get {
                return this.AudittrialField;
            }
            set {
                if ((object.ReferenceEquals(this.AudittrialField, value) != true)) {
                    this.AudittrialField = value;
                    this.RaisePropertyChanged("Audittrial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipementList {
            get {
                return this.EquipementListField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipementListField, value) != true)) {
                    this.EquipementListField = value;
                    this.RaisePropertyChanged("EquipementList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipementListID {
            get {
                return this.EquipementListIDField;
            }
            set {
                if ((this.EquipementListIDField.Equals(value) != true)) {
                    this.EquipementListIDField = value;
                    this.RaisePropertyChanged("EquipementListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentCategory {
            get {
                return this.EquipmentCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentCategoryField, value) != true)) {
                    this.EquipmentCategoryField = value;
                    this.RaisePropertyChanged("EquipmentCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipmentCategoryID {
            get {
                return this.EquipmentCategoryIDField;
            }
            set {
                if ((this.EquipmentCategoryIDField.Equals(value) != true)) {
                    this.EquipmentCategoryIDField = value;
                    this.RaisePropertyChanged("EquipmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityName {
            get {
                return this.FacilityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityNameField, value) != true)) {
                    this.FacilityNameField = value;
                    this.RaisePropertyChanged("FacilityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITRNo {
            get {
                return this.ITRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITRNoField, value) != true)) {
                    this.ITRNoField = value;
                    this.RaisePropertyChanged("ITRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Inventory.Inventoryserref.GetMPRDetailsbyMPRMasterID[] MPDetailsList {
            get {
                return this.MPDetailsListField;
            }
            set {
                if ((object.ReferenceEquals(this.MPDetailsListField, value) != true)) {
                    this.MPDetailsListField = value;
                    this.RaisePropertyChanged("MPDetailsList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PricePerQty {
            get {
                return this.PricePerQtyField;
            }
            set {
                if ((this.PricePerQtyField.Equals(value) != true)) {
                    this.PricePerQtyField = value;
                    this.RaisePropertyChanged("PricePerQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Qty {
            get {
                return this.QtyField;
            }
            set {
                if ((this.QtyField.Equals(value) != true)) {
                    this.QtyField = value;
                    this.RaisePropertyChanged("Qty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RequestITDetailID {
            get {
                return this.RequestITDetailIDField;
            }
            set {
                if ((this.RequestITDetailIDField.Equals(value) != true)) {
                    this.RequestITDetailIDField = value;
                    this.RaisePropertyChanged("RequestITDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RequestITMasterID {
            get {
                return this.RequestITMasterIDField;
            }
            set {
                if ((this.RequestITMasterIDField.Equals(value) != true)) {
                    this.RequestITMasterIDField = value;
                    this.RaisePropertyChanged("RequestITMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> RequestType {
            get {
                return this.RequestTypeField;
            }
            set {
                if ((this.RequestTypeField.Equals(value) != true)) {
                    this.RequestTypeField = value;
                    this.RaisePropertyChanged("RequestType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SINo {
            get {
                return this.SINoField;
            }
            set {
                if ((object.ReferenceEquals(this.SINoField, value) != true)) {
                    this.SINoField = value;
                    this.RaisePropertyChanged("SINo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ShippingID {
            get {
                return this.ShippingIDField;
            }
            set {
                if ((this.ShippingIDField.Equals(value) != true)) {
                    this.ShippingIDField = value;
                    this.RaisePropertyChanged("ShippingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long loggedinBy {
            get {
                return this.loggedinByField;
            }
            set {
                if ((this.loggedinByField.Equals(value) != true)) {
                    this.loggedinByField = value;
                    this.RaisePropertyChanged("loggedinBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALGPBill", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALGPBill : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GPBillingCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GPBillingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedOnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GPBillingCode {
            get {
                return this.GPBillingCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GPBillingCodeField, value) != true)) {
                    this.GPBillingCodeField = value;
                    this.RaisePropertyChanged("GPBillingCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GPBillingID {
            get {
                return this.GPBillingIDField;
            }
            set {
                if ((this.GPBillingIDField.Equals(value) != true)) {
                    this.GPBillingIDField = value;
                    this.RaisePropertyChanged("GPBillingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALFaItemMap", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALFaItemMap : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityItemMapIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityItemMapID {
            get {
                return this.FacilityItemMapIDField;
            }
            set {
                if ((this.FacilityItemMapIDField.Equals(value) != true)) {
                    this.FacilityItemMapIDField = value;
                    this.RaisePropertyChanged("FacilityItemMapID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemIDField, value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BALFacilitySupply", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service.BAL")]
    [System.SerializableAttribute()]
    public partial class BALFacilitySupply : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BundleUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CensusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilitySupplyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEmpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsbothField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsothersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListItemCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ParlevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> VendorOrderDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BundleUpdate {
            get {
                return this.BundleUpdateField;
            }
            set {
                if ((object.ReferenceEquals(this.BundleUpdateField, value) != true)) {
                    this.BundleUpdateField = value;
                    this.RaisePropertyChanged("BundleUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Census {
            get {
                return this.CensusField;
            }
            set {
                if ((this.CensusField.Equals(value) != true)) {
                    this.CensusField = value;
                    this.RaisePropertyChanged("Census");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilitySupplyID {
            get {
                return this.FacilitySupplyIDField;
            }
            set {
                if ((this.FacilitySupplyIDField.Equals(value) != true)) {
                    this.FacilitySupplyIDField = value;
                    this.RaisePropertyChanged("FacilitySupplyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Factor {
            get {
                return this.FactorField;
            }
            set {
                if ((this.FactorField.Equals(value) != true)) {
                    this.FactorField = value;
                    this.RaisePropertyChanged("Factor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEmp {
            get {
                return this.IsEmpField;
            }
            set {
                if ((this.IsEmpField.Equals(value) != true)) {
                    this.IsEmpField = value;
                    this.RaisePropertyChanged("IsEmp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPatient {
            get {
                return this.IsPatientField;
            }
            set {
                if ((this.IsPatientField.Equals(value) != true)) {
                    this.IsPatientField = value;
                    this.RaisePropertyChanged("IsPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Isboth {
            get {
                return this.IsbothField;
            }
            set {
                if ((this.IsbothField.Equals(value) != true)) {
                    this.IsbothField = value;
                    this.RaisePropertyChanged("Isboth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Isothers {
            get {
                return this.IsothersField;
            }
            set {
                if ((this.IsothersField.Equals(value) != true)) {
                    this.IsothersField = value;
                    this.RaisePropertyChanged("Isothers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemCategory {
            get {
                return this.ItemCategoryField;
            }
            set {
                if ((this.ItemCategoryField.Equals(value) != true)) {
                    this.ItemCategoryField = value;
                    this.RaisePropertyChanged("ItemCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListItemCategory {
            get {
                return this.ListItemCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.ListItemCategoryField, value) != true)) {
                    this.ListItemCategoryField = value;
                    this.RaisePropertyChanged("ListItemCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListVendorID {
            get {
                return this.ListVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ListVendorIDField, value) != true)) {
                    this.ListVendorIDField = value;
                    this.RaisePropertyChanged("ListVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Parlevel {
            get {
                return this.ParlevelField;
            }
            set {
                if ((this.ParlevelField.Equals(value) != true)) {
                    this.ParlevelField = value;
                    this.RaisePropertyChanged("Parlevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> VendorOrderDate {
            get {
                return this.VendorOrderDateField;
            }
            set {
                if ((this.VendorOrderDateField.Equals(value) != true)) {
                    this.VendorOrderDateField = value;
                    this.RaisePropertyChanged("VendorOrderDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindITReceivingsummaryReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindITReceivingsummaryReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INVOICEDATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INVOICENOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITNNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITRONOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PACKINGDATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PACKINGSLIPNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string REASONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RECEIVEDDATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long REQUESTITMASTERIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TOTALCOSTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FinalStatus {
            get {
                return this.FinalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.FinalStatusField, value) != true)) {
                    this.FinalStatusField = value;
                    this.RaisePropertyChanged("FinalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INVOICEDATE {
            get {
                return this.INVOICEDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.INVOICEDATEField, value) != true)) {
                    this.INVOICEDATEField = value;
                    this.RaisePropertyChanged("INVOICEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INVOICENO {
            get {
                return this.INVOICENOField;
            }
            set {
                if ((object.ReferenceEquals(this.INVOICENOField, value) != true)) {
                    this.INVOICENOField = value;
                    this.RaisePropertyChanged("INVOICENO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITNNo {
            get {
                return this.ITNNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITNNoField, value) != true)) {
                    this.ITNNoField = value;
                    this.RaisePropertyChanged("ITNNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITRONO {
            get {
                return this.ITRONOField;
            }
            set {
                if ((object.ReferenceEquals(this.ITRONOField, value) != true)) {
                    this.ITRONOField = value;
                    this.RaisePropertyChanged("ITRONO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedinByField, value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PACKINGDATE {
            get {
                return this.PACKINGDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.PACKINGDATEField, value) != true)) {
                    this.PACKINGDATEField = value;
                    this.RaisePropertyChanged("PACKINGDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PACKINGSLIPNO {
            get {
                return this.PACKINGSLIPNOField;
            }
            set {
                if ((this.PACKINGSLIPNOField.Equals(value) != true)) {
                    this.PACKINGSLIPNOField = value;
                    this.RaisePropertyChanged("PACKINGSLIPNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REASON {
            get {
                return this.REASONField;
            }
            set {
                if ((object.ReferenceEquals(this.REASONField, value) != true)) {
                    this.REASONField = value;
                    this.RaisePropertyChanged("REASON");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVEDDATE {
            get {
                return this.RECEIVEDDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVEDDATEField, value) != true)) {
                    this.RECEIVEDDATEField = value;
                    this.RaisePropertyChanged("RECEIVEDDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long REQUESTITMASTERID {
            get {
                return this.REQUESTITMASTERIDField;
            }
            set {
                if ((this.REQUESTITMASTERIDField.Equals(value) != true)) {
                    this.REQUESTITMASTERIDField = value;
                    this.RaisePropertyChanged("REQUESTITMASTERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestType {
            get {
                return this.RequestTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestTypeField, value) != true)) {
                    this.RequestTypeField = value;
                    this.RaisePropertyChanged("RequestType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TOTALCOST {
            get {
                return this.TOTALCOSTField;
            }
            set {
                if ((this.TOTALCOSTField.Equals(value) != true)) {
                    this.TOTALCOSTField = value;
                    this.RaisePropertyChanged("TOTALCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateITRecevingMaster", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class UpdateITRecevingMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> INSERTRECORDIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TYPEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UPDATERECORDIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> INSERTRECORDID {
            get {
                return this.INSERTRECORDIDField;
            }
            set {
                if ((this.INSERTRECORDIDField.Equals(value) != true)) {
                    this.INSERTRECORDIDField = value;
                    this.RaisePropertyChanged("INSERTRECORDID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TYPE {
            get {
                return this.TYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.TYPEField, value) != true)) {
                    this.TYPEField = value;
                    this.RaisePropertyChanged("TYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UPDATERECORDID {
            get {
                return this.UPDATERECORDIDField;
            }
            set {
                if ((this.UPDATERECORDIDField.Equals(value) != true)) {
                    this.UPDATERECORDIDField = value;
                    this.RaisePropertyChanged("UPDATERECORDID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchCapitalReceivingMaster", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchCapitalReceivingMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CPRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalItemMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CapitalOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalReceivingMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CPRONo {
            get {
                return this.CPRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.CPRONoField, value) != true)) {
                    this.CPRONoField = value;
                    this.RaisePropertyChanged("CPRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CRONo {
            get {
                return this.CRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.CRONoField, value) != true)) {
                    this.CRONoField = value;
                    this.RaisePropertyChanged("CRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalItemMasterID {
            get {
                return this.CapitalItemMasterIDField;
            }
            set {
                if ((this.CapitalItemMasterIDField.Equals(value) != true)) {
                    this.CapitalItemMasterIDField = value;
                    this.RaisePropertyChanged("CapitalItemMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CapitalOrderID {
            get {
                return this.CapitalOrderIDField;
            }
            set {
                if ((this.CapitalOrderIDField.Equals(value) != true)) {
                    this.CapitalOrderIDField = value;
                    this.RaisePropertyChanged("CapitalOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalReceivingMasterID {
            get {
                return this.CapitalReceivingMasterIDField;
            }
            set {
                if ((this.CapitalReceivingMasterIDField.Equals(value) != true)) {
                    this.CapitalReceivingMasterIDField = value;
                    this.RaisePropertyChanged("CapitalReceivingMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateCapitalRecevingMaster", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class UpdateCapitalRecevingMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> INSERTRECORDIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TYPEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UPDATERECORDIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> INSERTRECORDID {
            get {
                return this.INSERTRECORDIDField;
            }
            set {
                if ((this.INSERTRECORDIDField.Equals(value) != true)) {
                    this.INSERTRECORDIDField = value;
                    this.RaisePropertyChanged("INSERTRECORDID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TYPE {
            get {
                return this.TYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.TYPEField, value) != true)) {
                    this.TYPEField = value;
                    this.RaisePropertyChanged("TYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UPDATERECORDID {
            get {
                return this.UPDATERECORDIDField;
            }
            set {
                if ((this.UPDATERECORDIDField.Equals(value) != true)) {
                    this.UPDATERECORDIDField = value;
                    this.RaisePropertyChanged("UPDATERECORDID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCpoDetails", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetCpoDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalReceivingDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquimentSubCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PackingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PricePerQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReceivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalReceivingDetailsID {
            get {
                return this.CapitalReceivingDetailsIDField;
            }
            set {
                if ((this.CapitalReceivingDetailsIDField.Equals(value) != true)) {
                    this.CapitalReceivingDetailsIDField = value;
                    this.RaisePropertyChanged("CapitalReceivingDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquimentSubCategory {
            get {
                return this.EquimentSubCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquimentSubCategoryField, value) != true)) {
                    this.EquimentSubCategoryField = value;
                    this.RaisePropertyChanged("EquimentSubCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentList {
            get {
                return this.EquipmentListField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListField, value) != true)) {
                    this.EquipmentListField = value;
                    this.RaisePropertyChanged("EquipmentList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PackingDate {
            get {
                return this.PackingDateField;
            }
            set {
                if ((this.PackingDateField.Equals(value) != true)) {
                    this.PackingDateField = value;
                    this.RaisePropertyChanged("PackingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipNo {
            get {
                return this.PackingSlipNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipNoField, value) != true)) {
                    this.PackingSlipNoField = value;
                    this.RaisePropertyChanged("PackingSlipNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PricePerQty {
            get {
                return this.PricePerQtyField;
            }
            set {
                if ((this.PricePerQtyField.Equals(value) != true)) {
                    this.PricePerQtyField = value;
                    this.RaisePropertyChanged("PricePerQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReceivedQty {
            get {
                return this.ReceivedQtyField;
            }
            set {
                if ((this.ReceivedQtyField.Equals(value) != true)) {
                    this.ReceivedQtyField = value;
                    this.RaisePropertyChanged("ReceivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCPROMasterReview", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetCPROMasterReview : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BalanceQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CapitalItemMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalReceivingDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CapitalReceivingMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquimentSubCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PackingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PricePerQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReceivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivingActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BalanceQty {
            get {
                return this.BalanceQtyField;
            }
            set {
                if ((this.BalanceQtyField.Equals(value) != true)) {
                    this.BalanceQtyField = value;
                    this.RaisePropertyChanged("BalanceQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CapitalItemMasterID {
            get {
                return this.CapitalItemMasterIDField;
            }
            set {
                if ((this.CapitalItemMasterIDField.Equals(value) != true)) {
                    this.CapitalItemMasterIDField = value;
                    this.RaisePropertyChanged("CapitalItemMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalReceivingDetailsID {
            get {
                return this.CapitalReceivingDetailsIDField;
            }
            set {
                if ((this.CapitalReceivingDetailsIDField.Equals(value) != true)) {
                    this.CapitalReceivingDetailsIDField = value;
                    this.RaisePropertyChanged("CapitalReceivingDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CapitalReceivingMasterID {
            get {
                return this.CapitalReceivingMasterIDField;
            }
            set {
                if ((this.CapitalReceivingMasterIDField.Equals(value) != true)) {
                    this.CapitalReceivingMasterIDField = value;
                    this.RaisePropertyChanged("CapitalReceivingMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquimentSubCategory {
            get {
                return this.EquimentSubCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquimentSubCategoryField, value) != true)) {
                    this.EquimentSubCategoryField = value;
                    this.RaisePropertyChanged("EquimentSubCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentList {
            get {
                return this.EquipmentListField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListField, value) != true)) {
                    this.EquipmentListField = value;
                    this.RaisePropertyChanged("EquipmentList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FinalStatus {
            get {
                return this.FinalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.FinalStatusField, value) != true)) {
                    this.FinalStatusField = value;
                    this.RaisePropertyChanged("FinalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNo {
            get {
                return this.InvoiceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNoField, value) != true)) {
                    this.InvoiceNoField = value;
                    this.RaisePropertyChanged("InvoiceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherReason {
            get {
                return this.OtherReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherReasonField, value) != true)) {
                    this.OtherReasonField = value;
                    this.RaisePropertyChanged("OtherReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PackingDate {
            get {
                return this.PackingDateField;
            }
            set {
                if ((this.PackingDateField.Equals(value) != true)) {
                    this.PackingDateField = value;
                    this.RaisePropertyChanged("PackingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipNo {
            get {
                return this.PackingSlipNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipNoField, value) != true)) {
                    this.PackingSlipNoField = value;
                    this.RaisePropertyChanged("PackingSlipNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PricePerQty {
            get {
                return this.PricePerQtyField;
            }
            set {
                if ((this.PricePerQtyField.Equals(value) != true)) {
                    this.PricePerQtyField = value;
                    this.RaisePropertyChanged("PricePerQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReceivedQty {
            get {
                return this.ReceivedQtyField;
            }
            set {
                if ((this.ReceivedQtyField.Equals(value) != true)) {
                    this.ReceivedQtyField = value;
                    this.RaisePropertyChanged("ReceivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivingAction {
            get {
                return this.ReceivingActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivingActionField, value) != true)) {
                    this.ReceivingActionField = value;
                    this.RaisePropertyChanged("ReceivingAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindCapitalDetailsReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindCapitalDetailsReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BalanceQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CPRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalItemMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalReceivingMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INVOICEDATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INVOICENOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PricePerQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RECEIVEDDATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RECEIVINGACTIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReceivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingcostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string packingdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string packingslipnoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BalanceQty {
            get {
                return this.BalanceQtyField;
            }
            set {
                if ((this.BalanceQtyField.Equals(value) != true)) {
                    this.BalanceQtyField = value;
                    this.RaisePropertyChanged("BalanceQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAccount {
            get {
                return this.BillAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BillAccountField, value) != true)) {
                    this.BillAccountField = value;
                    this.RaisePropertyChanged("BillAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CPRONo {
            get {
                return this.CPRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.CPRONoField, value) != true)) {
                    this.CPRONoField = value;
                    this.RaisePropertyChanged("CPRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CRONo {
            get {
                return this.CRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.CRONoField, value) != true)) {
                    this.CRONoField = value;
                    this.RaisePropertyChanged("CRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalItemMasterID {
            get {
                return this.CapitalItemMasterIDField;
            }
            set {
                if ((this.CapitalItemMasterIDField.Equals(value) != true)) {
                    this.CapitalItemMasterIDField = value;
                    this.RaisePropertyChanged("CapitalItemMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalReceivingMasterID {
            get {
                return this.CapitalReceivingMasterIDField;
            }
            set {
                if ((this.CapitalReceivingMasterIDField.Equals(value) != true)) {
                    this.CapitalReceivingMasterIDField = value;
                    this.RaisePropertyChanged("CapitalReceivingMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentListDescription {
            get {
                return this.EquipmentListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListDescriptionField, value) != true)) {
                    this.EquipmentListDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategoryDescription {
            get {
                return this.EquipmentSubCategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryDescriptionField, value) != true)) {
                    this.EquipmentSubCategoryDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentSubCategoryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INVOICEDATE {
            get {
                return this.INVOICEDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.INVOICEDATEField, value) != true)) {
                    this.INVOICEDATEField = value;
                    this.RaisePropertyChanged("INVOICEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INVOICENO {
            get {
                return this.INVOICENOField;
            }
            set {
                if ((object.ReferenceEquals(this.INVOICENOField, value) != true)) {
                    this.INVOICENOField = value;
                    this.RaisePropertyChanged("INVOICENO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedinByField, value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PricePerQty {
            get {
                return this.PricePerQtyField;
            }
            set {
                if ((this.PricePerQtyField.Equals(value) != true)) {
                    this.PricePerQtyField = value;
                    this.RaisePropertyChanged("PricePerQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVEDDATE {
            get {
                return this.RECEIVEDDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVEDDATEField, value) != true)) {
                    this.RECEIVEDDATEField = value;
                    this.RaisePropertyChanged("RECEIVEDDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVINGACTION {
            get {
                return this.RECEIVINGACTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVINGACTIONField, value) != true)) {
                    this.RECEIVINGACTIONField = value;
                    this.RaisePropertyChanged("RECEIVINGACTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReceivedQty {
            get {
                return this.ReceivedQtyField;
            }
            set {
                if ((this.ReceivedQtyField.Equals(value) != true)) {
                    this.ReceivedQtyField = value;
                    this.RaisePropertyChanged("ReceivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestType {
            get {
                return this.RequestTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestTypeField, value) != true)) {
                    this.RequestTypeField = value;
                    this.RaisePropertyChanged("RequestType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAccount {
            get {
                return this.ShipAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAccountField, value) != true)) {
                    this.ShipAccountField = value;
                    this.RaisePropertyChanged("ShipAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shippingcost {
            get {
                return this.ShippingcostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingcostField, value) != true)) {
                    this.ShippingcostField = value;
                    this.RaisePropertyChanged("Shippingcost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string packingdate {
            get {
                return this.packingdateField;
            }
            set {
                if ((object.ReferenceEquals(this.packingdateField, value) != true)) {
                    this.packingdateField = value;
                    this.RaisePropertyChanged("packingdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string packingslipno {
            get {
                return this.packingslipnoField;
            }
            set {
                if ((object.ReferenceEquals(this.packingslipnoField, value) != true)) {
                    this.packingslipnoField = value;
                    this.RaisePropertyChanged("packingslipno");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindCapitalReceivingDetailsSubReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindCapitalReceivingDetailsSubReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BALANCEQTYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COMMENTSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CPRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CapitalItemMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CapitalOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalReceivingDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalReceivingMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EQUIMENTSUBCATEGORYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EQUIPMENTLISTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INVOICEDATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INVOICENOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ORDERQTYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PRICEPERQTYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RECEIVEDDATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RECEIVINGACTIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReceivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SERIALNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SHIPPINGCOSTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TAXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TOTALCOSTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TOTALPRICEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string packingdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string packingslipnoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BALANCEQTY {
            get {
                return this.BALANCEQTYField;
            }
            set {
                if ((this.BALANCEQTYField.Equals(value) != true)) {
                    this.BALANCEQTYField = value;
                    this.RaisePropertyChanged("BALANCEQTY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMMENTS {
            get {
                return this.COMMENTSField;
            }
            set {
                if ((object.ReferenceEquals(this.COMMENTSField, value) != true)) {
                    this.COMMENTSField = value;
                    this.RaisePropertyChanged("COMMENTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CPRONo {
            get {
                return this.CPRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.CPRONoField, value) != true)) {
                    this.CPRONoField = value;
                    this.RaisePropertyChanged("CPRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CapitalItemMasterID {
            get {
                return this.CapitalItemMasterIDField;
            }
            set {
                if ((this.CapitalItemMasterIDField.Equals(value) != true)) {
                    this.CapitalItemMasterIDField = value;
                    this.RaisePropertyChanged("CapitalItemMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CapitalOrderID {
            get {
                return this.CapitalOrderIDField;
            }
            set {
                if ((this.CapitalOrderIDField.Equals(value) != true)) {
                    this.CapitalOrderIDField = value;
                    this.RaisePropertyChanged("CapitalOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalReceivingDetailsID {
            get {
                return this.CapitalReceivingDetailsIDField;
            }
            set {
                if ((this.CapitalReceivingDetailsIDField.Equals(value) != true)) {
                    this.CapitalReceivingDetailsIDField = value;
                    this.RaisePropertyChanged("CapitalReceivingDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalReceivingMasterID {
            get {
                return this.CapitalReceivingMasterIDField;
            }
            set {
                if ((this.CapitalReceivingMasterIDField.Equals(value) != true)) {
                    this.CapitalReceivingMasterIDField = value;
                    this.RaisePropertyChanged("CapitalReceivingMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EQUIMENTSUBCATEGORY {
            get {
                return this.EQUIMENTSUBCATEGORYField;
            }
            set {
                if ((object.ReferenceEquals(this.EQUIMENTSUBCATEGORYField, value) != true)) {
                    this.EQUIMENTSUBCATEGORYField = value;
                    this.RaisePropertyChanged("EQUIMENTSUBCATEGORY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EQUIPMENTLIST {
            get {
                return this.EQUIPMENTLISTField;
            }
            set {
                if ((object.ReferenceEquals(this.EQUIPMENTLISTField, value) != true)) {
                    this.EQUIPMENTLISTField = value;
                    this.RaisePropertyChanged("EQUIPMENTLIST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INVOICEDATE {
            get {
                return this.INVOICEDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.INVOICEDATEField, value) != true)) {
                    this.INVOICEDATEField = value;
                    this.RaisePropertyChanged("INVOICEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INVOICENO {
            get {
                return this.INVOICENOField;
            }
            set {
                if ((object.ReferenceEquals(this.INVOICENOField, value) != true)) {
                    this.INVOICENOField = value;
                    this.RaisePropertyChanged("INVOICENO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedinByField, value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ORDERQTY {
            get {
                return this.ORDERQTYField;
            }
            set {
                if ((this.ORDERQTYField.Equals(value) != true)) {
                    this.ORDERQTYField = value;
                    this.RaisePropertyChanged("ORDERQTY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PRICEPERQTY {
            get {
                return this.PRICEPERQTYField;
            }
            set {
                if ((this.PRICEPERQTYField.Equals(value) != true)) {
                    this.PRICEPERQTYField = value;
                    this.RaisePropertyChanged("PRICEPERQTY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVEDDATE {
            get {
                return this.RECEIVEDDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVEDDATEField, value) != true)) {
                    this.RECEIVEDDATEField = value;
                    this.RaisePropertyChanged("RECEIVEDDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVINGACTION {
            get {
                return this.RECEIVINGACTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVINGACTIONField, value) != true)) {
                    this.RECEIVINGACTIONField = value;
                    this.RaisePropertyChanged("RECEIVINGACTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReceivedQty {
            get {
                return this.ReceivedQtyField;
            }
            set {
                if ((this.ReceivedQtyField.Equals(value) != true)) {
                    this.ReceivedQtyField = value;
                    this.RaisePropertyChanged("ReceivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SERIALNO {
            get {
                return this.SERIALNOField;
            }
            set {
                if ((object.ReferenceEquals(this.SERIALNOField, value) != true)) {
                    this.SERIALNOField = value;
                    this.RaisePropertyChanged("SERIALNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SHIPPINGCOST {
            get {
                return this.SHIPPINGCOSTField;
            }
            set {
                if ((object.ReferenceEquals(this.SHIPPINGCOSTField, value) != true)) {
                    this.SHIPPINGCOSTField = value;
                    this.RaisePropertyChanged("SHIPPINGCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TAX {
            get {
                return this.TAXField;
            }
            set {
                if ((object.ReferenceEquals(this.TAXField, value) != true)) {
                    this.TAXField = value;
                    this.RaisePropertyChanged("TAX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TOTALCOST {
            get {
                return this.TOTALCOSTField;
            }
            set {
                if ((this.TOTALCOSTField.Equals(value) != true)) {
                    this.TOTALCOSTField = value;
                    this.RaisePropertyChanged("TOTALCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TOTALPRICE {
            get {
                return this.TOTALPRICEField;
            }
            set {
                if ((this.TOTALPRICEField.Equals(value) != true)) {
                    this.TOTALPRICEField = value;
                    this.RaisePropertyChanged("TOTALPRICE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string packingdate {
            get {
                return this.packingdateField;
            }
            set {
                if ((object.ReferenceEquals(this.packingdateField, value) != true)) {
                    this.packingdateField = value;
                    this.RaisePropertyChanged("packingdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string packingslipno {
            get {
                return this.packingslipnoField;
            }
            set {
                if ((object.ReferenceEquals(this.packingslipnoField, value) != true)) {
                    this.packingslipnoField = value;
                    this.RaisePropertyChanged("packingslipno");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindCapitalReceivingsummaryReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindCapitalReceivingsummaryReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CPRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalItemMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CPRONo {
            get {
                return this.CPRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.CPRONoField, value) != true)) {
                    this.CPRONoField = value;
                    this.RaisePropertyChanged("CPRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CRONo {
            get {
                return this.CRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.CRONoField, value) != true)) {
                    this.CRONoField = value;
                    this.RaisePropertyChanged("CRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalItemMasterID {
            get {
                return this.CapitalItemMasterIDField;
            }
            set {
                if ((this.CapitalItemMasterIDField.Equals(value) != true)) {
                    this.CapitalItemMasterIDField = value;
                    this.RaisePropertyChanged("CapitalItemMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalOrderID {
            get {
                return this.CapitalOrderIDField;
            }
            set {
                if ((this.CapitalOrderIDField.Equals(value) != true)) {
                    this.CapitalOrderIDField = value;
                    this.RaisePropertyChanged("CapitalOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FinalStatus {
            get {
                return this.FinalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.FinalStatusField, value) != true)) {
                    this.FinalStatusField = value;
                    this.RaisePropertyChanged("FinalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceDateField, value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNo {
            get {
                return this.InvoiceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNoField, value) != true)) {
                    this.InvoiceNoField = value;
                    this.RaisePropertyChanged("InvoiceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedinByField, value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipDate {
            get {
                return this.PackingSlipDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipDateField, value) != true)) {
                    this.PackingSlipDateField = value;
                    this.RaisePropertyChanged("PackingSlipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipNo {
            get {
                return this.PackingSlipNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipNoField, value) != true)) {
                    this.PackingSlipNoField = value;
                    this.RaisePropertyChanged("PackingSlipNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivedDateField, value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestType {
            get {
                return this.RequestTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestTypeField, value) != true)) {
                    this.RequestTypeField = value;
                    this.RaisePropertyChanged("RequestType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchServiceRequestReceivingOrder", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchServiceRequestReceivingOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CURRENTAPPOVESTAGEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LASTACTIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NEXTAPPOVESTAGEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] OrderContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SPRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SRPONOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceRequestDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceRequestMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TotalAPPROVESTAGEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> USERSTAGEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int isEditField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CURRENTAPPOVESTAGE {
            get {
                return this.CURRENTAPPOVESTAGEField;
            }
            set {
                if ((this.CURRENTAPPOVESTAGEField.Equals(value) != true)) {
                    this.CURRENTAPPOVESTAGEField = value;
                    this.RaisePropertyChanged("CURRENTAPPOVESTAGE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceDateField, value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNo {
            get {
                return this.InvoiceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNoField, value) != true)) {
                    this.InvoiceNoField = value;
                    this.RaisePropertyChanged("InvoiceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LASTACTION {
            get {
                return this.LASTACTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.LASTACTIONField, value) != true)) {
                    this.LASTACTIONField = value;
                    this.RaisePropertyChanged("LASTACTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NEXTAPPOVESTAGE {
            get {
                return this.NEXTAPPOVESTAGEField;
            }
            set {
                if ((this.NEXTAPPOVESTAGEField.Equals(value) != true)) {
                    this.NEXTAPPOVESTAGEField = value;
                    this.RaisePropertyChanged("NEXTAPPOVESTAGE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] OrderContent {
            get {
                return this.OrderContentField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderContentField, value) != true)) {
                    this.OrderContentField = value;
                    this.RaisePropertyChanged("OrderContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivingDate {
            get {
                return this.ReceivingDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivingDateField, value) != true)) {
                    this.ReceivingDateField = value;
                    this.RaisePropertyChanged("ReceivingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SPRONo {
            get {
                return this.SPRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.SPRONoField, value) != true)) {
                    this.SPRONoField = value;
                    this.RaisePropertyChanged("SPRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SRNo {
            get {
                return this.SRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SRNoField, value) != true)) {
                    this.SRNoField = value;
                    this.RaisePropertyChanged("SRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SRPONO {
            get {
                return this.SRPONOField;
            }
            set {
                if ((object.ReferenceEquals(this.SRPONOField, value) != true)) {
                    this.SRPONOField = value;
                    this.RaisePropertyChanged("SRPONO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceRequestDetailsID {
            get {
                return this.ServiceRequestDetailsIDField;
            }
            set {
                if ((this.ServiceRequestDetailsIDField.Equals(value) != true)) {
                    this.ServiceRequestDetailsIDField = value;
                    this.RaisePropertyChanged("ServiceRequestDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceRequestMasterID {
            get {
                return this.ServiceRequestMasterIDField;
            }
            set {
                if ((this.ServiceRequestMasterIDField.Equals(value) != true)) {
                    this.ServiceRequestMasterIDField = value;
                    this.RaisePropertyChanged("ServiceRequestMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TotalAPPROVESTAGE {
            get {
                return this.TotalAPPROVESTAGEField;
            }
            set {
                if ((this.TotalAPPROVESTAGEField.Equals(value) != true)) {
                    this.TotalAPPROVESTAGEField = value;
                    this.RaisePropertyChanged("TotalAPPROVESTAGE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> USERSTAGE {
            get {
                return this.USERSTAGEField;
            }
            set {
                if ((this.USERSTAGEField.Equals(value) != true)) {
                    this.USERSTAGEField = value;
                    this.RaisePropertyChanged("USERSTAGE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int isEdit {
            get {
                return this.isEditField;
            }
            set {
                if ((this.isEditField.Equals(value) != true)) {
                    this.isEditField = value;
                    this.RaisePropertyChanged("isEdit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetServiceReceiveOrder", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetServiceReceiveOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceRemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsReceiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherRemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceivingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SPRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNo {
            get {
                return this.InvoiceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNoField, value) != true)) {
                    this.InvoiceNoField = value;
                    this.RaisePropertyChanged("InvoiceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceRemarks {
            get {
                return this.InvoiceRemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceRemarksField, value) != true)) {
                    this.InvoiceRemarksField = value;
                    this.RaisePropertyChanged("InvoiceRemarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceStatus {
            get {
                return this.InvoiceStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceStatusField, value) != true)) {
                    this.InvoiceStatusField = value;
                    this.RaisePropertyChanged("InvoiceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsReceive {
            get {
                return this.IsReceiveField;
            }
            set {
                if ((this.IsReceiveField.Equals(value) != true)) {
                    this.IsReceiveField = value;
                    this.RaisePropertyChanged("IsReceive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedinByField, value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherRemarks {
            get {
                return this.OtherRemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherRemarksField, value) != true)) {
                    this.OtherRemarksField = value;
                    this.RaisePropertyChanged("OtherRemarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceivingDate {
            get {
                return this.ReceivingDateField;
            }
            set {
                if ((this.ReceivingDateField.Equals(value) != true)) {
                    this.ReceivingDateField = value;
                    this.RaisePropertyChanged("ReceivingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SPRONo {
            get {
                return this.SPRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.SPRONoField, value) != true)) {
                    this.SPRONoField = value;
                    this.RaisePropertyChanged("SPRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SRNo {
            get {
                return this.SRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SRNoField, value) != true)) {
                    this.SRNoField = value;
                    this.RaisePropertyChanged("SRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetFacilityByListCorporateID", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetFacilityByListCorporateID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetVendorByFacilityID", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetVendorByFacilityID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> BuildingMaintenanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ITField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MachinePartsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RegularSuppliesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ServiceOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> BuildingMaintenance {
            get {
                return this.BuildingMaintenanceField;
            }
            set {
                if ((this.BuildingMaintenanceField.Equals(value) != true)) {
                    this.BuildingMaintenanceField = value;
                    this.RaisePropertyChanged("BuildingMaintenance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IT {
            get {
                return this.ITField;
            }
            set {
                if ((this.ITField.Equals(value) != true)) {
                    this.ITField = value;
                    this.RaisePropertyChanged("IT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> MachineParts {
            get {
                return this.MachinePartsField;
            }
            set {
                if ((this.MachinePartsField.Equals(value) != true)) {
                    this.MachinePartsField = value;
                    this.RaisePropertyChanged("MachineParts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> RegularSupplies {
            get {
                return this.RegularSuppliesField;
            }
            set {
                if ((this.RegularSuppliesField.Equals(value) != true)) {
                    this.RegularSuppliesField = value;
                    this.RaisePropertyChanged("RegularSupplies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ServiceOrder {
            get {
                return this.ServiceOrderField;
            }
            set {
                if ((this.ServiceOrderField.Equals(value) != true)) {
                    this.ServiceOrderField = value;
                    this.RaisePropertyChanged("ServiceOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchEndingInventory", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchEndingInventory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BeginingInvQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EndingInvQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EndingInvenIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ExpiredMedsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MonthlyUsageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> NewFacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> NoofvisitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ReceiveingOrderInvQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TransferINDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransferInQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TransferOutDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransferOutQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UomIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UomNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorItemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BeginingInvQty {
            get {
                return this.BeginingInvQtyField;
            }
            set {
                if ((this.BeginingInvQtyField.Equals(value) != true)) {
                    this.BeginingInvQtyField = value;
                    this.RaisePropertyChanged("BeginingInvQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EndingInvQty {
            get {
                return this.EndingInvQtyField;
            }
            set {
                if ((this.EndingInvQtyField.Equals(value) != true)) {
                    this.EndingInvQtyField = value;
                    this.RaisePropertyChanged("EndingInvQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EndingInvenID {
            get {
                return this.EndingInvenIDField;
            }
            set {
                if ((this.EndingInvenIDField.Equals(value) != true)) {
                    this.EndingInvenIDField = value;
                    this.RaisePropertyChanged("EndingInvenID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ExpiredMeds {
            get {
                return this.ExpiredMedsField;
            }
            set {
                if ((this.ExpiredMedsField.Equals(value) != true)) {
                    this.ExpiredMedsField = value;
                    this.RaisePropertyChanged("ExpiredMeds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MonthlyUsage {
            get {
                return this.MonthlyUsageField;
            }
            set {
                if ((this.MonthlyUsageField.Equals(value) != true)) {
                    this.MonthlyUsageField = value;
                    this.RaisePropertyChanged("MonthlyUsage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> NewFacility {
            get {
                return this.NewFacilityField;
            }
            set {
                if ((this.NewFacilityField.Equals(value) != true)) {
                    this.NewFacilityField = value;
                    this.RaisePropertyChanged("NewFacility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Noofvisit {
            get {
                return this.NoofvisitField;
            }
            set {
                if ((this.NoofvisitField.Equals(value) != true)) {
                    this.NoofvisitField = value;
                    this.RaisePropertyChanged("Noofvisit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceiveDate {
            get {
                return this.ReceiveDateField;
            }
            set {
                if ((this.ReceiveDateField.Equals(value) != true)) {
                    this.ReceiveDateField = value;
                    this.RaisePropertyChanged("ReceiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ReceiveingOrderInvQty {
            get {
                return this.ReceiveingOrderInvQtyField;
            }
            set {
                if ((this.ReceiveingOrderInvQtyField.Equals(value) != true)) {
                    this.ReceiveingOrderInvQtyField = value;
                    this.RaisePropertyChanged("ReceiveingOrderInvQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TransferINDate {
            get {
                return this.TransferINDateField;
            }
            set {
                if ((this.TransferINDateField.Equals(value) != true)) {
                    this.TransferINDateField = value;
                    this.RaisePropertyChanged("TransferINDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransferInQty {
            get {
                return this.TransferInQtyField;
            }
            set {
                if ((this.TransferInQtyField.Equals(value) != true)) {
                    this.TransferInQtyField = value;
                    this.RaisePropertyChanged("TransferInQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TransferOutDate {
            get {
                return this.TransferOutDateField;
            }
            set {
                if ((this.TransferOutDateField.Equals(value) != true)) {
                    this.TransferOutDateField = value;
                    this.RaisePropertyChanged("TransferOutDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransferOutQty {
            get {
                return this.TransferOutQtyField;
            }
            set {
                if ((this.TransferOutQtyField.Equals(value) != true)) {
                    this.TransferOutQtyField = value;
                    this.RaisePropertyChanged("TransferOutQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UomID {
            get {
                return this.UomIDField;
            }
            set {
                if ((this.UomIDField.Equals(value) != true)) {
                    this.UomIDField = value;
                    this.RaisePropertyChanged("UomID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UomName {
            get {
                return this.UomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UomNameField, value) != true)) {
                    this.UomNameField = value;
                    this.RaisePropertyChanged("UomName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorItemID {
            get {
                return this.VendorItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorItemIDField, value) != true)) {
                    this.VendorItemIDField = value;
                    this.RaisePropertyChanged("VendorItemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetReceivedQtyInfo", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetReceivedQtyInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReceivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UomNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorItemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRONo {
            get {
                return this.PRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.PRONoField, value) != true)) {
                    this.PRONoField = value;
                    this.RaisePropertyChanged("PRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReceivedQty {
            get {
                return this.ReceivedQtyField;
            }
            set {
                if ((this.ReceivedQtyField.Equals(value) != true)) {
                    this.ReceivedQtyField = value;
                    this.RaisePropertyChanged("ReceivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UomName {
            get {
                return this.UomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UomNameField, value) != true)) {
                    this.UomNameField = value;
                    this.RaisePropertyChanged("UomName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorItemID {
            get {
                return this.VendorItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorItemIDField, value) != true)) {
                    this.VendorItemIDField = value;
                    this.RaisePropertyChanged("VendorItemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTransferINQtyInfo", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetTransferINQtyInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TransferInDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TransferqtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UomNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TransferInDate {
            get {
                return this.TransferInDateField;
            }
            set {
                if ((this.TransferInDateField.Equals(value) != true)) {
                    this.TransferInDateField = value;
                    this.RaisePropertyChanged("TransferInDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferNo {
            get {
                return this.TransferNoField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferNoField, value) != true)) {
                    this.TransferNoField = value;
                    this.RaisePropertyChanged("TransferNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Transferqty {
            get {
                return this.TransferqtyField;
            }
            set {
                if ((this.TransferqtyField.Equals(value) != true)) {
                    this.TransferqtyField = value;
                    this.RaisePropertyChanged("Transferqty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UomName {
            get {
                return this.UomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UomNameField, value) != true)) {
                    this.UomNameField = value;
                    this.RaisePropertyChanged("UomName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTransferOutQtyInfo", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetTransferOutQtyInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TransferDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TransferqtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UomNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TransferDate {
            get {
                return this.TransferDateField;
            }
            set {
                if ((this.TransferDateField.Equals(value) != true)) {
                    this.TransferDateField = value;
                    this.RaisePropertyChanged("TransferDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferNo {
            get {
                return this.TransferNoField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferNoField, value) != true)) {
                    this.TransferNoField = value;
                    this.RaisePropertyChanged("TransferNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Transferqty {
            get {
                return this.TransferqtyField;
            }
            set {
                if ((this.TransferqtyField.Equals(value) != true)) {
                    this.TransferqtyField = value;
                    this.RaisePropertyChanged("Transferqty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UomName {
            get {
                return this.UomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UomNameField, value) != true)) {
                    this.UomNameField = value;
                    this.RaisePropertyChanged("UomName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EndingInventoryReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class EndingInventoryReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BeginingInvQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EndingInvQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EndingInvenIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ExpiredMedsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MonthlyUsageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewFacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> NoofvisitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReceiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ReceiveingOrderInvQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TransferINDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransferInQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TransferOutDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransferOutQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UomIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UomNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BeginingInvQty {
            get {
                return this.BeginingInvQtyField;
            }
            set {
                if ((this.BeginingInvQtyField.Equals(value) != true)) {
                    this.BeginingInvQtyField = value;
                    this.RaisePropertyChanged("BeginingInvQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EndingInvQty {
            get {
                return this.EndingInvQtyField;
            }
            set {
                if ((this.EndingInvQtyField.Equals(value) != true)) {
                    this.EndingInvQtyField = value;
                    this.RaisePropertyChanged("EndingInvQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EndingInvenID {
            get {
                return this.EndingInvenIDField;
            }
            set {
                if ((this.EndingInvenIDField.Equals(value) != true)) {
                    this.EndingInvenIDField = value;
                    this.RaisePropertyChanged("EndingInvenID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ExpiredMeds {
            get {
                return this.ExpiredMedsField;
            }
            set {
                if ((this.ExpiredMedsField.Equals(value) != true)) {
                    this.ExpiredMedsField = value;
                    this.RaisePropertyChanged("ExpiredMeds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MonthlyUsage {
            get {
                return this.MonthlyUsageField;
            }
            set {
                if ((this.MonthlyUsageField.Equals(value) != true)) {
                    this.MonthlyUsageField = value;
                    this.RaisePropertyChanged("MonthlyUsage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewFacility {
            get {
                return this.NewFacilityField;
            }
            set {
                if ((object.ReferenceEquals(this.NewFacilityField, value) != true)) {
                    this.NewFacilityField = value;
                    this.RaisePropertyChanged("NewFacility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Noofvisit {
            get {
                return this.NoofvisitField;
            }
            set {
                if ((this.NoofvisitField.Equals(value) != true)) {
                    this.NoofvisitField = value;
                    this.RaisePropertyChanged("Noofvisit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReceiveDate {
            get {
                return this.ReceiveDateField;
            }
            set {
                if ((this.ReceiveDateField.Equals(value) != true)) {
                    this.ReceiveDateField = value;
                    this.RaisePropertyChanged("ReceiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ReceiveingOrderInvQty {
            get {
                return this.ReceiveingOrderInvQtyField;
            }
            set {
                if ((this.ReceiveingOrderInvQtyField.Equals(value) != true)) {
                    this.ReceiveingOrderInvQtyField = value;
                    this.RaisePropertyChanged("ReceiveingOrderInvQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TransferINDate {
            get {
                return this.TransferINDateField;
            }
            set {
                if ((this.TransferINDateField.Equals(value) != true)) {
                    this.TransferINDateField = value;
                    this.RaisePropertyChanged("TransferINDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransferInQty {
            get {
                return this.TransferInQtyField;
            }
            set {
                if ((this.TransferInQtyField.Equals(value) != true)) {
                    this.TransferInQtyField = value;
                    this.RaisePropertyChanged("TransferInQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TransferOutDate {
            get {
                return this.TransferOutDateField;
            }
            set {
                if ((this.TransferOutDateField.Equals(value) != true)) {
                    this.TransferOutDateField = value;
                    this.RaisePropertyChanged("TransferOutDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransferOutQty {
            get {
                return this.TransferOutQtyField;
            }
            set {
                if ((this.TransferOutQtyField.Equals(value) != true)) {
                    this.TransferOutQtyField = value;
                    this.RaisePropertyChanged("TransferOutQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UomID {
            get {
                return this.UomIDField;
            }
            set {
                if ((this.UomIDField.Equals(value) != true)) {
                    this.UomIDField = value;
                    this.RaisePropertyChanged("UomID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UomName {
            get {
                return this.UomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UomNameField, value) != true)) {
                    this.UomNameField = value;
                    this.RaisePropertyChanged("UomName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorItemID {
            get {
                return this.VendorItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorItemIDField, value) != true)) {
                    this.VendorItemIDField = value;
                    this.RaisePropertyChanged("VendorItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCatagoryByFacilityID", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetCatagoryByFacilityID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchTransferOut", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchTransferOut : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UOMIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UomNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemCategory {
            get {
                return this.ItemCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemCategoryField, value) != true)) {
                    this.ItemCategoryField = value;
                    this.RaisePropertyChanged("ItemCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UOMID {
            get {
                return this.UOMIDField;
            }
            set {
                if ((this.UOMIDField.Equals(value) != true)) {
                    this.UOMIDField = value;
                    this.RaisePropertyChanged("UOMID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UomName {
            get {
                return this.UomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UomNameField, value) != true)) {
                    this.UomNameField = value;
                    this.RaisePropertyChanged("UomName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTransferNo", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetTransferNo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferNo {
            get {
                return this.TransferNoField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferNoField, value) != true)) {
                    this.TransferNoField = value;
                    this.RaisePropertyChanged("TransferNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetEmailNotificationforTransfer", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetEmailNotificationforTransfer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNo {
            get {
                return this.PhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNoField, value) != true)) {
                    this.PhoneNoField = value;
                    this.RaisePropertyChanged("PhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToEmail {
            get {
                return this.ToEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ToEmailField, value) != true)) {
                    this.ToEmailField = value;
                    this.RaisePropertyChanged("ToEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetFromEmailforTransfer", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetFromEmailforTransfer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromEmail {
            get {
                return this.FromEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.FromEmailField, value) != true)) {
                    this.FromEmailField = value;
                    this.RaisePropertyChanged("FromEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchTransferIn", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchTransferIn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransferOutIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TransferqtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UomNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateIDFrom {
            get {
                return this.CorporateIDFromField;
            }
            set {
                if ((this.CorporateIDFromField.Equals(value) != true)) {
                    this.CorporateIDFromField = value;
                    this.RaisePropertyChanged("CorporateIDFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateIDTo {
            get {
                return this.CorporateIDToField;
            }
            set {
                if ((this.CorporateIDToField.Equals(value) != true)) {
                    this.CorporateIDToField = value;
                    this.RaisePropertyChanged("CorporateIDTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityFrom {
            get {
                return this.FacilityFromField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityFromField, value) != true)) {
                    this.FacilityFromField = value;
                    this.RaisePropertyChanged("FacilityFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityIDFrom {
            get {
                return this.FacilityIDFromField;
            }
            set {
                if ((this.FacilityIDFromField.Equals(value) != true)) {
                    this.FacilityIDFromField = value;
                    this.RaisePropertyChanged("FacilityIDFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityIDTo {
            get {
                return this.FacilityIDToField;
            }
            set {
                if ((this.FacilityIDToField.Equals(value) != true)) {
                    this.FacilityIDToField = value;
                    this.RaisePropertyChanged("FacilityIDTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityTo {
            get {
                return this.FacilityToField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityToField, value) != true)) {
                    this.FacilityToField = value;
                    this.RaisePropertyChanged("FacilityTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferDate {
            get {
                return this.TransferDateField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferDateField, value) != true)) {
                    this.TransferDateField = value;
                    this.RaisePropertyChanged("TransferDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferNo {
            get {
                return this.TransferNoField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferNoField, value) != true)) {
                    this.TransferNoField = value;
                    this.RaisePropertyChanged("TransferNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransferOutID {
            get {
                return this.TransferOutIDField;
            }
            set {
                if ((this.TransferOutIDField.Equals(value) != true)) {
                    this.TransferOutIDField = value;
                    this.RaisePropertyChanged("TransferOutID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Transferqty {
            get {
                return this.TransferqtyField;
            }
            set {
                if ((this.TransferqtyField.Equals(value) != true)) {
                    this.TransferqtyField = value;
                    this.RaisePropertyChanged("Transferqty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((this.UOMField.Equals(value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UomName {
            get {
                return this.UomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UomNameField, value) != true)) {
                    this.UomNameField = value;
                    this.RaisePropertyChanged("UomName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchTransferInHistory", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchTransferInHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TransferOutIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TransferqtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UomNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateIDFrom {
            get {
                return this.CorporateIDFromField;
            }
            set {
                if ((this.CorporateIDFromField.Equals(value) != true)) {
                    this.CorporateIDFromField = value;
                    this.RaisePropertyChanged("CorporateIDFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateIDTo {
            get {
                return this.CorporateIDToField;
            }
            set {
                if ((this.CorporateIDToField.Equals(value) != true)) {
                    this.CorporateIDToField = value;
                    this.RaisePropertyChanged("CorporateIDTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityFrom {
            get {
                return this.FacilityFromField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityFromField, value) != true)) {
                    this.FacilityFromField = value;
                    this.RaisePropertyChanged("FacilityFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityIDFrom {
            get {
                return this.FacilityIDFromField;
            }
            set {
                if ((this.FacilityIDFromField.Equals(value) != true)) {
                    this.FacilityIDFromField = value;
                    this.RaisePropertyChanged("FacilityIDFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityIDTo {
            get {
                return this.FacilityIDToField;
            }
            set {
                if ((this.FacilityIDToField.Equals(value) != true)) {
                    this.FacilityIDToField = value;
                    this.RaisePropertyChanged("FacilityIDTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityTo {
            get {
                return this.FacilityToField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityToField, value) != true)) {
                    this.FacilityToField = value;
                    this.RaisePropertyChanged("FacilityTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferDate {
            get {
                return this.TransferDateField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferDateField, value) != true)) {
                    this.TransferDateField = value;
                    this.RaisePropertyChanged("TransferDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferNo {
            get {
                return this.TransferNoField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferNoField, value) != true)) {
                    this.TransferNoField = value;
                    this.RaisePropertyChanged("TransferNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TransferOutID {
            get {
                return this.TransferOutIDField;
            }
            set {
                if ((this.TransferOutIDField.Equals(value) != true)) {
                    this.TransferOutIDField = value;
                    this.RaisePropertyChanged("TransferOutID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Transferqty {
            get {
                return this.TransferqtyField;
            }
            set {
                if ((this.TransferqtyField.Equals(value) != true)) {
                    this.TransferqtyField = value;
                    this.RaisePropertyChanged("Transferqty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((this.UOMField.Equals(value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UomName {
            get {
                return this.UomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UomNameField, value) != true)) {
                    this.UomNameField = value;
                    this.RaisePropertyChanged("UomName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchTransferOutHistory", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchTransferOutHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransferOutIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TransferqtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UomNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateIDFrom {
            get {
                return this.CorporateIDFromField;
            }
            set {
                if ((this.CorporateIDFromField.Equals(value) != true)) {
                    this.CorporateIDFromField = value;
                    this.RaisePropertyChanged("CorporateIDFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateIDTo {
            get {
                return this.CorporateIDToField;
            }
            set {
                if ((this.CorporateIDToField.Equals(value) != true)) {
                    this.CorporateIDToField = value;
                    this.RaisePropertyChanged("CorporateIDTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityFrom {
            get {
                return this.FacilityFromField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityFromField, value) != true)) {
                    this.FacilityFromField = value;
                    this.RaisePropertyChanged("FacilityFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityIDFrom {
            get {
                return this.FacilityIDFromField;
            }
            set {
                if ((this.FacilityIDFromField.Equals(value) != true)) {
                    this.FacilityIDFromField = value;
                    this.RaisePropertyChanged("FacilityIDFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityIDTo {
            get {
                return this.FacilityIDToField;
            }
            set {
                if ((this.FacilityIDToField.Equals(value) != true)) {
                    this.FacilityIDToField = value;
                    this.RaisePropertyChanged("FacilityIDTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityTo {
            get {
                return this.FacilityToField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityToField, value) != true)) {
                    this.FacilityToField = value;
                    this.RaisePropertyChanged("FacilityTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferDate {
            get {
                return this.TransferDateField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferDateField, value) != true)) {
                    this.TransferDateField = value;
                    this.RaisePropertyChanged("TransferDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferNo {
            get {
                return this.TransferNoField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferNoField, value) != true)) {
                    this.TransferNoField = value;
                    this.RaisePropertyChanged("TransferNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransferOutID {
            get {
                return this.TransferOutIDField;
            }
            set {
                if ((this.TransferOutIDField.Equals(value) != true)) {
                    this.TransferOutIDField = value;
                    this.RaisePropertyChanged("TransferOutID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Transferqty {
            get {
                return this.TransferqtyField;
            }
            set {
                if ((this.TransferqtyField.Equals(value) != true)) {
                    this.TransferqtyField = value;
                    this.RaisePropertyChanged("Transferqty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((this.UOMField.Equals(value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UomName {
            get {
                return this.UomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UomNameField, value) != true)) {
                    this.UomNameField = value;
                    this.RaisePropertyChanged("UomName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTransferInHistoryReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetTransferInHistoryReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateFromNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateToNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityFromNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityToNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TransferINIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferInDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferOutDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransferOutIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TransferqtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UomNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateFromName {
            get {
                return this.CorporateFromNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateFromNameField, value) != true)) {
                    this.CorporateFromNameField = value;
                    this.RaisePropertyChanged("CorporateFromName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateToName {
            get {
                return this.CorporateToNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateToNameField, value) != true)) {
                    this.CorporateToNameField = value;
                    this.RaisePropertyChanged("CorporateToName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityFromName {
            get {
                return this.FacilityFromNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityFromNameField, value) != true)) {
                    this.FacilityFromNameField = value;
                    this.RaisePropertyChanged("FacilityFromName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityToName {
            get {
                return this.FacilityToNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityToNameField, value) != true)) {
                    this.FacilityToNameField = value;
                    this.RaisePropertyChanged("FacilityToName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedOnField, value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TransferINID {
            get {
                return this.TransferINIDField;
            }
            set {
                if ((this.TransferINIDField.Equals(value) != true)) {
                    this.TransferINIDField = value;
                    this.RaisePropertyChanged("TransferINID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferInDate {
            get {
                return this.TransferInDateField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferInDateField, value) != true)) {
                    this.TransferInDateField = value;
                    this.RaisePropertyChanged("TransferInDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferNo {
            get {
                return this.TransferNoField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferNoField, value) != true)) {
                    this.TransferNoField = value;
                    this.RaisePropertyChanged("TransferNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferOutDate {
            get {
                return this.TransferOutDateField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferOutDateField, value) != true)) {
                    this.TransferOutDateField = value;
                    this.RaisePropertyChanged("TransferOutDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransferOutID {
            get {
                return this.TransferOutIDField;
            }
            set {
                if ((this.TransferOutIDField.Equals(value) != true)) {
                    this.TransferOutIDField = value;
                    this.RaisePropertyChanged("TransferOutID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Transferqty {
            get {
                return this.TransferqtyField;
            }
            set {
                if ((this.TransferqtyField.Equals(value) != true)) {
                    this.TransferqtyField = value;
                    this.RaisePropertyChanged("Transferqty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UomName {
            get {
                return this.UomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UomNameField, value) != true)) {
                    this.UomNameField = value;
                    this.RaisePropertyChanged("UomName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindTransferOutHistoryReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindTransferOutHistoryReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateFromNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateToNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityFromNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityToNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransferOutIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TransferqtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UomNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateFromName {
            get {
                return this.CorporateFromNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateFromNameField, value) != true)) {
                    this.CorporateFromNameField = value;
                    this.RaisePropertyChanged("CorporateFromName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateToName {
            get {
                return this.CorporateToNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateToNameField, value) != true)) {
                    this.CorporateToNameField = value;
                    this.RaisePropertyChanged("CorporateToName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityFromName {
            get {
                return this.FacilityFromNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityFromNameField, value) != true)) {
                    this.FacilityFromNameField = value;
                    this.RaisePropertyChanged("FacilityFromName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityToName {
            get {
                return this.FacilityToNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityToNameField, value) != true)) {
                    this.FacilityToNameField = value;
                    this.RaisePropertyChanged("FacilityToName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedOnField, value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferDate {
            get {
                return this.TransferDateField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferDateField, value) != true)) {
                    this.TransferDateField = value;
                    this.RaisePropertyChanged("TransferDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferNo {
            get {
                return this.TransferNoField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferNoField, value) != true)) {
                    this.TransferNoField = value;
                    this.RaisePropertyChanged("TransferNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransferOutID {
            get {
                return this.TransferOutIDField;
            }
            set {
                if ((this.TransferOutIDField.Equals(value) != true)) {
                    this.TransferOutIDField = value;
                    this.RaisePropertyChanged("TransferOutID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Transferqty {
            get {
                return this.TransferqtyField;
            }
            set {
                if ((this.TransferqtyField.Equals(value) != true)) {
                    this.TransferqtyField = value;
                    this.RaisePropertyChanged("Transferqty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UomName {
            get {
                return this.UomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UomNameField, value) != true)) {
                    this.UomNameField = value;
                    this.RaisePropertyChanged("UomName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCategoryByListFacilityID", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetCategoryByListFacilityID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidateMedicalSuppliesItem", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class ValidateMedicalSuppliesItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescripField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemTrackField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Edit {
            get {
                return this.EditField;
            }
            set {
                if ((this.EditField.Equals(value) != true)) {
                    this.EditField = value;
                    this.RaisePropertyChanged("Edit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescrip {
            get {
                return this.ItemDescripField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescripField, value) != true)) {
                    this.ItemDescripField = value;
                    this.RaisePropertyChanged("ItemDescrip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemIn {
            get {
                return this.ItemInField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemInField, value) != true)) {
                    this.ItemInField = value;
                    this.RaisePropertyChanged("ItemIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemTrack {
            get {
                return this.ItemTrackField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemTrackField, value) != true)) {
                    this.ItemTrackField = value;
                    this.RaisePropertyChanged("ItemTrack");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindCorporateMaster", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindCorporateMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POEmailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateDescription {
            get {
                return this.CorporateDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateDescriptionField, value) != true)) {
                    this.CorporateDescriptionField = value;
                    this.RaisePropertyChanged("CorporateDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POEmail {
            get {
                return this.POEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.POEmailField, value) != true)) {
                    this.POEmailField = value;
                    this.RaisePropertyChanged("POEmail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchCorporateMaster", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchCorporateMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POEmailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveField, value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateDescription {
            get {
                return this.CorporateDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateDescriptionField, value) != true)) {
                    this.CorporateDescriptionField = value;
                    this.RaisePropertyChanged("CorporateDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POEmail {
            get {
                return this.POEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.POEmailField, value) != true)) {
                    this.POEmailField = value;
                    this.RaisePropertyChanged("POEmail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindFacilityReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindFacilityReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdminEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdminPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdminPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillZipCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMRCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GPAccountCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PatientCensusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TechEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TechPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TechPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TxWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipcodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveField, value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdminEmail {
            get {
                return this.AdminEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminEmailField, value) != true)) {
                    this.AdminEmailField = value;
                    this.RaisePropertyChanged("AdminEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdminPerson {
            get {
                return this.AdminPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminPersonField, value) != true)) {
                    this.AdminPersonField = value;
                    this.RaisePropertyChanged("AdminPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdminPhone {
            get {
                return this.AdminPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminPhoneField, value) != true)) {
                    this.AdminPhoneField = value;
                    this.RaisePropertyChanged("AdminPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAddress1 {
            get {
                return this.BillAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.BillAddress1Field, value) != true)) {
                    this.BillAddress1Field = value;
                    this.RaisePropertyChanged("BillAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAddress2 {
            get {
                return this.BillAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.BillAddress2Field, value) != true)) {
                    this.BillAddress2Field = value;
                    this.RaisePropertyChanged("BillAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillCity {
            get {
                return this.BillCityField;
            }
            set {
                if ((object.ReferenceEquals(this.BillCityField, value) != true)) {
                    this.BillCityField = value;
                    this.RaisePropertyChanged("BillCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillFax {
            get {
                return this.BillFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.BillFaxField, value) != true)) {
                    this.BillFaxField = value;
                    this.RaisePropertyChanged("BillFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillPhone {
            get {
                return this.BillPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.BillPhoneField, value) != true)) {
                    this.BillPhoneField = value;
                    this.RaisePropertyChanged("BillPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillState {
            get {
                return this.BillStateField;
            }
            set {
                if ((object.ReferenceEquals(this.BillStateField, value) != true)) {
                    this.BillStateField = value;
                    this.RaisePropertyChanged("BillState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillZipCode {
            get {
                return this.BillZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillZipCodeField, value) != true)) {
                    this.BillZipCodeField = value;
                    this.RaisePropertyChanged("BillZipCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Corporate {
            get {
                return this.CorporateField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateField, value) != true)) {
                    this.CorporateField = value;
                    this.RaisePropertyChanged("Corporate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMRCode {
            get {
                return this.EMRCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EMRCodeField, value) != true)) {
                    this.EMRCodeField = value;
                    this.RaisePropertyChanged("EMRCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GPAccountCode {
            get {
                return this.GPAccountCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GPAccountCodeField, value) != true)) {
                    this.GPAccountCodeField = value;
                    this.RaisePropertyChanged("GPAccountCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PatientCensus {
            get {
                return this.PatientCensusField;
            }
            set {
                if ((this.PatientCensusField.Equals(value) != true)) {
                    this.PatientCensusField = value;
                    this.RaisePropertyChanged("PatientCensus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TechEmail {
            get {
                return this.TechEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.TechEmailField, value) != true)) {
                    this.TechEmailField = value;
                    this.RaisePropertyChanged("TechEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TechPerson {
            get {
                return this.TechPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.TechPersonField, value) != true)) {
                    this.TechPersonField = value;
                    this.RaisePropertyChanged("TechPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TechPhone {
            get {
                return this.TechPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TechPhoneField, value) != true)) {
                    this.TechPhoneField = value;
                    this.RaisePropertyChanged("TechPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TxWeek {
            get {
                return this.TxWeekField;
            }
            set {
                if ((this.TxWeekField.Equals(value) != true)) {
                    this.TxWeekField = value;
                    this.RaisePropertyChanged("TxWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zipcode {
            get {
                return this.ZipcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipcodeField, value) != true)) {
                    this.ZipcodeField = value;
                    this.RaisePropertyChanged("Zipcode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindFacilityDetailsReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindFacilityDetailsReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdminEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdminPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdminPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillXtnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillZipCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CopyFromExistingFacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMRCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeCensusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GPAccountCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientCensusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TechEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TechPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TechPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TxWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XtnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipcodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdminEmail {
            get {
                return this.AdminEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminEmailField, value) != true)) {
                    this.AdminEmailField = value;
                    this.RaisePropertyChanged("AdminEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdminPerson {
            get {
                return this.AdminPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminPersonField, value) != true)) {
                    this.AdminPersonField = value;
                    this.RaisePropertyChanged("AdminPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdminPhone {
            get {
                return this.AdminPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminPhoneField, value) != true)) {
                    this.AdminPhoneField = value;
                    this.RaisePropertyChanged("AdminPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAddress1 {
            get {
                return this.BillAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.BillAddress1Field, value) != true)) {
                    this.BillAddress1Field = value;
                    this.RaisePropertyChanged("BillAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAddress2 {
            get {
                return this.BillAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.BillAddress2Field, value) != true)) {
                    this.BillAddress2Field = value;
                    this.RaisePropertyChanged("BillAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillCity {
            get {
                return this.BillCityField;
            }
            set {
                if ((object.ReferenceEquals(this.BillCityField, value) != true)) {
                    this.BillCityField = value;
                    this.RaisePropertyChanged("BillCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillFax {
            get {
                return this.BillFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.BillFaxField, value) != true)) {
                    this.BillFaxField = value;
                    this.RaisePropertyChanged("BillFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillPhone {
            get {
                return this.BillPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.BillPhoneField, value) != true)) {
                    this.BillPhoneField = value;
                    this.RaisePropertyChanged("BillPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillState {
            get {
                return this.BillStateField;
            }
            set {
                if ((object.ReferenceEquals(this.BillStateField, value) != true)) {
                    this.BillStateField = value;
                    this.RaisePropertyChanged("BillState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillXtn {
            get {
                return this.BillXtnField;
            }
            set {
                if ((object.ReferenceEquals(this.BillXtnField, value) != true)) {
                    this.BillXtnField = value;
                    this.RaisePropertyChanged("BillXtn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillZipCode {
            get {
                return this.BillZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillZipCodeField, value) != true)) {
                    this.BillZipCodeField = value;
                    this.RaisePropertyChanged("BillZipCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CopyFromExistingFacility {
            get {
                return this.CopyFromExistingFacilityField;
            }
            set {
                if ((object.ReferenceEquals(this.CopyFromExistingFacilityField, value) != true)) {
                    this.CopyFromExistingFacilityField = value;
                    this.RaisePropertyChanged("CopyFromExistingFacility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Corporate {
            get {
                return this.CorporateField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateField, value) != true)) {
                    this.CorporateField = value;
                    this.RaisePropertyChanged("Corporate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMRCode {
            get {
                return this.EMRCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EMRCodeField, value) != true)) {
                    this.EMRCodeField = value;
                    this.RaisePropertyChanged("EMRCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeCensus {
            get {
                return this.EmployeeCensusField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeCensusField, value) != true)) {
                    this.EmployeeCensusField = value;
                    this.RaisePropertyChanged("EmployeeCensus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GPAccountCode {
            get {
                return this.GPAccountCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GPAccountCodeField, value) != true)) {
                    this.GPAccountCodeField = value;
                    this.RaisePropertyChanged("GPAccountCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientCensus {
            get {
                return this.PatientCensusField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientCensusField, value) != true)) {
                    this.PatientCensusField = value;
                    this.RaisePropertyChanged("PatientCensus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNo {
            get {
                return this.PhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNoField, value) != true)) {
                    this.PhoneNoField = value;
                    this.RaisePropertyChanged("PhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TechEmail {
            get {
                return this.TechEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.TechEmailField, value) != true)) {
                    this.TechEmailField = value;
                    this.RaisePropertyChanged("TechEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TechPerson {
            get {
                return this.TechPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.TechPersonField, value) != true)) {
                    this.TechPersonField = value;
                    this.RaisePropertyChanged("TechPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TechPhone {
            get {
                return this.TechPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TechPhoneField, value) != true)) {
                    this.TechPhoneField = value;
                    this.RaisePropertyChanged("TechPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TxWeek {
            get {
                return this.TxWeekField;
            }
            set {
                if ((object.ReferenceEquals(this.TxWeekField, value) != true)) {
                    this.TxWeekField = value;
                    this.RaisePropertyChanged("TxWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleField, value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Xtn {
            get {
                return this.XtnField;
            }
            set {
                if ((object.ReferenceEquals(this.XtnField, value) != true)) {
                    this.XtnField = value;
                    this.RaisePropertyChanged("Xtn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zipcode {
            get {
                return this.ZipcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipcodeField, value) != true)) {
                    this.ZipcodeField = value;
                    this.RaisePropertyChanged("Zipcode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserRoleForFacility", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetUserRoleForFacility : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNo {
            get {
                return this.PhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNoField, value) != true)) {
                    this.PhoneNoField = value;
                    this.RaisePropertyChanged("PhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleField, value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindRolesForFacility", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindRolesForFacility : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserRoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleField, value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserRoleID {
            get {
                return this.UserRoleIDField;
            }
            set {
                if ((this.UserRoleIDField.Equals(value) != true)) {
                    this.UserRoleIDField = value;
                    this.RaisePropertyChanged("UserRoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindFacilityVendorAccountReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindFacilityVendorAccountReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityVendorAccIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ITField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MachinePartsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RegularSuppliesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ServiceOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveField, value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAccount {
            get {
                return this.BillAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BillAccountField, value) != true)) {
                    this.BillAccountField = value;
                    this.RaisePropertyChanged("BillAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityVendorAccID {
            get {
                return this.FacilityVendorAccIDField;
            }
            set {
                if ((this.FacilityVendorAccIDField.Equals(value) != true)) {
                    this.FacilityVendorAccIDField = value;
                    this.RaisePropertyChanged("FacilityVendorAccID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IT {
            get {
                return this.ITField;
            }
            set {
                if ((this.ITField.Equals(value) != true)) {
                    this.ITField = value;
                    this.RaisePropertyChanged("IT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> MachineParts {
            get {
                return this.MachinePartsField;
            }
            set {
                if ((this.MachinePartsField.Equals(value) != true)) {
                    this.MachinePartsField = value;
                    this.RaisePropertyChanged("MachineParts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> RegularSupplies {
            get {
                return this.RegularSuppliesField;
            }
            set {
                if ((this.RegularSuppliesField.Equals(value) != true)) {
                    this.RegularSuppliesField = value;
                    this.RaisePropertyChanged("RegularSupplies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ServiceOrder {
            get {
                return this.ServiceOrderField;
            }
            set {
                if ((this.ServiceOrderField.Equals(value) != true)) {
                    this.ServiceOrderField = value;
                    this.RaisePropertyChanged("ServiceOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAccount {
            get {
                return this.ShipAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAccountField, value) != true)) {
                    this.ShipAccountField = value;
                    this.RaisePropertyChanged("ShipAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindCorporateMasterReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindCorporateMasterReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POEmailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveField, value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateDescription {
            get {
                return this.CorporateDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateDescriptionField, value) != true)) {
                    this.CorporateDescriptionField = value;
                    this.RaisePropertyChanged("CorporateDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POEmail {
            get {
                return this.POEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.POEmailField, value) != true)) {
                    this.POEmailField = value;
                    this.RaisePropertyChanged("POEmail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindVendorItemMapReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindVendorItemMapReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionWithCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemMapIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionWithCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorItemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsActiveField, value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescriptionWithCode {
            get {
                return this.ItemDescriptionWithCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionWithCodeField, value) != true)) {
                    this.ItemDescriptionWithCodeField = value;
                    this.RaisePropertyChanged("ItemDescriptionWithCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemMapID {
            get {
                return this.ItemMapIDField;
            }
            set {
                if ((this.ItemMapIDField.Equals(value) != true)) {
                    this.ItemMapIDField = value;
                    this.RaisePropertyChanged("ItemMapID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescriptionWithCode {
            get {
                return this.VendorDescriptionWithCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionWithCodeField, value) != true)) {
                    this.VendorDescriptionWithCodeField = value;
                    this.RaisePropertyChanged("VendorDescriptionWithCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorItemID {
            get {
                return this.VendorItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorItemIDField, value) != true)) {
                    this.VendorItemIDField = value;
                    this.RaisePropertyChanged("VendorItemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindUserSummaryReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindUserSummaryReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> XtnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNo {
            get {
                return this.PhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNoField, value) != true)) {
                    this.PhoneNoField = value;
                    this.RaisePropertyChanged("PhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleField, value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Xtn {
            get {
                return this.XtnField;
            }
            set {
                if ((this.XtnField.Equals(value) != true)) {
                    this.XtnField = value;
                    this.RaisePropertyChanged("Xtn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindTransferOutReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindTransferOutReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransferOutIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TransferqtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UomNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateDescription {
            get {
                return this.CorporateDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateDescriptionField, value) != true)) {
                    this.CorporateDescriptionField = value;
                    this.RaisePropertyChanged("CorporateDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferDate {
            get {
                return this.TransferDateField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferDateField, value) != true)) {
                    this.TransferDateField = value;
                    this.RaisePropertyChanged("TransferDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferFrom {
            get {
                return this.TransferFromField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferFromField, value) != true)) {
                    this.TransferFromField = value;
                    this.RaisePropertyChanged("TransferFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferNo {
            get {
                return this.TransferNoField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferNoField, value) != true)) {
                    this.TransferNoField = value;
                    this.RaisePropertyChanged("TransferNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransferOutID {
            get {
                return this.TransferOutIDField;
            }
            set {
                if ((this.TransferOutIDField.Equals(value) != true)) {
                    this.TransferOutIDField = value;
                    this.RaisePropertyChanged("TransferOutID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferTo {
            get {
                return this.TransferToField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferToField, value) != true)) {
                    this.TransferToField = value;
                    this.RaisePropertyChanged("TransferTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Transferqty {
            get {
                return this.TransferqtyField;
            }
            set {
                if ((this.TransferqtyField.Equals(value) != true)) {
                    this.TransferqtyField = value;
                    this.RaisePropertyChanged("Transferqty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UomName {
            get {
                return this.UomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UomNameField, value) != true)) {
                    this.UomNameField = value;
                    this.RaisePropertyChanged("UomName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindTransferInReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindTransferInReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransferOutIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TransferqtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UomNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateIDFrom {
            get {
                return this.CorporateIDFromField;
            }
            set {
                if ((this.CorporateIDFromField.Equals(value) != true)) {
                    this.CorporateIDFromField = value;
                    this.RaisePropertyChanged("CorporateIDFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateIDTo {
            get {
                return this.CorporateIDToField;
            }
            set {
                if ((this.CorporateIDToField.Equals(value) != true)) {
                    this.CorporateIDToField = value;
                    this.RaisePropertyChanged("CorporateIDTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityFrom {
            get {
                return this.FacilityFromField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityFromField, value) != true)) {
                    this.FacilityFromField = value;
                    this.RaisePropertyChanged("FacilityFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityIDFrom {
            get {
                return this.FacilityIDFromField;
            }
            set {
                if ((this.FacilityIDFromField.Equals(value) != true)) {
                    this.FacilityIDFromField = value;
                    this.RaisePropertyChanged("FacilityIDFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityIDTo {
            get {
                return this.FacilityIDToField;
            }
            set {
                if ((this.FacilityIDToField.Equals(value) != true)) {
                    this.FacilityIDToField = value;
                    this.RaisePropertyChanged("FacilityIDTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityTo {
            get {
                return this.FacilityToField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityToField, value) != true)) {
                    this.FacilityToField = value;
                    this.RaisePropertyChanged("FacilityTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferDate {
            get {
                return this.TransferDateField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferDateField, value) != true)) {
                    this.TransferDateField = value;
                    this.RaisePropertyChanged("TransferDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferNo {
            get {
                return this.TransferNoField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferNoField, value) != true)) {
                    this.TransferNoField = value;
                    this.RaisePropertyChanged("TransferNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransferOutID {
            get {
                return this.TransferOutIDField;
            }
            set {
                if ((this.TransferOutIDField.Equals(value) != true)) {
                    this.TransferOutIDField = value;
                    this.RaisePropertyChanged("TransferOutID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Transferqty {
            get {
                return this.TransferqtyField;
            }
            set {
                if ((this.TransferqtyField.Equals(value) != true)) {
                    this.TransferqtyField = value;
                    this.RaisePropertyChanged("Transferqty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((this.UOMField.Equals(value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UomName {
            get {
                return this.UomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UomNameField, value) != true)) {
                    this.UomNameField = value;
                    this.RaisePropertyChanged("UomName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetVendorReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetVendorReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AllField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlternateEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> BuildingMaintenanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ITField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LastModitifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModitifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MachinePartsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RegularSuppliesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ServiceOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> XtnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vendortypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveField, value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> All {
            get {
                return this.AllField;
            }
            set {
                if ((this.AllField.Equals(value) != true)) {
                    this.AllField = value;
                    this.RaisePropertyChanged("All");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlternateEmail {
            get {
                return this.AlternateEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateEmailField, value) != true)) {
                    this.AlternateEmailField = value;
                    this.RaisePropertyChanged("AlternateEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> BuildingMaintenance {
            get {
                return this.BuildingMaintenanceField;
            }
            set {
                if ((this.BuildingMaintenanceField.Equals(value) != true)) {
                    this.BuildingMaintenanceField = value;
                    this.RaisePropertyChanged("BuildingMaintenance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactEmail {
            get {
                return this.ContactEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactEmailField, value) != true)) {
                    this.ContactEmailField = value;
                    this.RaisePropertyChanged("ContactEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPhone {
            get {
                return this.ContactPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPhoneField, value) != true)) {
                    this.ContactPhoneField = value;
                    this.RaisePropertyChanged("ContactPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IT {
            get {
                return this.ITField;
            }
            set {
                if ((this.ITField.Equals(value) != true)) {
                    this.ITField = value;
                    this.RaisePropertyChanged("IT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LastModitifiedBy {
            get {
                return this.LastModitifiedByField;
            }
            set {
                if ((this.LastModitifiedByField.Equals(value) != true)) {
                    this.LastModitifiedByField = value;
                    this.RaisePropertyChanged("LastModitifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModitifiedOn {
            get {
                return this.LastModitifiedOnField;
            }
            set {
                if ((this.LastModitifiedOnField.Equals(value) != true)) {
                    this.LastModitifiedOnField = value;
                    this.RaisePropertyChanged("LastModitifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> MachineParts {
            get {
                return this.MachinePartsField;
            }
            set {
                if ((this.MachinePartsField.Equals(value) != true)) {
                    this.MachinePartsField = value;
                    this.RaisePropertyChanged("MachineParts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POEmail {
            get {
                return this.POEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.POEmailField, value) != true)) {
                    this.POEmailField = value;
                    this.RaisePropertyChanged("POEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> RegularSupplies {
            get {
                return this.RegularSuppliesField;
            }
            set {
                if ((this.RegularSuppliesField.Equals(value) != true)) {
                    this.RegularSuppliesField = value;
                    this.RaisePropertyChanged("RegularSupplies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ServiceOrder {
            get {
                return this.ServiceOrderField;
            }
            set {
                if ((this.ServiceOrderField.Equals(value) != true)) {
                    this.ServiceOrderField = value;
                    this.RaisePropertyChanged("ServiceOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Xtn {
            get {
                return this.XtnField;
            }
            set {
                if ((this.XtnField.Equals(value) != true)) {
                    this.XtnField = value;
                    this.RaisePropertyChanged("Xtn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vendortype {
            get {
                return this.vendortypeField;
            }
            set {
                if ((object.ReferenceEquals(this.vendortypeField, value) != true)) {
                    this.vendortypeField = value;
                    this.RaisePropertyChanged("vendortype");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GETVendorUniqueName", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GETVendorUniqueName : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUOMName", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetUOMName : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UomIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UomNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UomID {
            get {
                return this.UomIDField;
            }
            set {
                if ((this.UomIDField.Equals(value) != true)) {
                    this.UomIDField = value;
                    this.RaisePropertyChanged("UomID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UomName {
            get {
                return this.UomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UomNameField, value) != true)) {
                    this.UomNameField = value;
                    this.RaisePropertyChanged("UomName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetVendorItemMappingPage", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetVendorItemMappingPage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetVendorDetailsReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetVendorDetailsReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlternateEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> XtnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vendortypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlternateEmail {
            get {
                return this.AlternateEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateEmailField, value) != true)) {
                    this.AlternateEmailField = value;
                    this.RaisePropertyChanged("AlternateEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactEmail {
            get {
                return this.ContactEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactEmailField, value) != true)) {
                    this.ContactEmailField = value;
                    this.RaisePropertyChanged("ContactEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPhone {
            get {
                return this.ContactPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPhoneField, value) != true)) {
                    this.ContactPhoneField = value;
                    this.RaisePropertyChanged("ContactPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POEmail {
            get {
                return this.POEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.POEmailField, value) != true)) {
                    this.POEmailField = value;
                    this.RaisePropertyChanged("POEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Xtn {
            get {
                return this.XtnField;
            }
            set {
                if ((this.XtnField.Equals(value) != true)) {
                    this.XtnField = value;
                    this.RaisePropertyChanged("Xtn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vendortype {
            get {
                return this.vendortypeField;
            }
            set {
                if ((object.ReferenceEquals(this.vendortypeField, value) != true)) {
                    this.vendortypeField = value;
                    this.RaisePropertyChanged("vendortype");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Validgpbillcode", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class Validgpbillcode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GpBillingCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GpBillingCode {
            get {
                return this.GpBillingCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GpBillingCodeField, value) != true)) {
                    this.GpBillingCodeField = value;
                    this.RaisePropertyChanged("GpBillingCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Validuseremail", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class Validuseremail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserPermissionReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetUserPermissionReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApproveRangeFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApproveRangeToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsApproveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsDenyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageMainMenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageSubMenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PermissionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApproveRangeFrom {
            get {
                return this.ApproveRangeFromField;
            }
            set {
                if ((object.ReferenceEquals(this.ApproveRangeFromField, value) != true)) {
                    this.ApproveRangeFromField = value;
                    this.RaisePropertyChanged("ApproveRangeFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApproveRangeTo {
            get {
                return this.ApproveRangeToField;
            }
            set {
                if ((object.ReferenceEquals(this.ApproveRangeToField, value) != true)) {
                    this.ApproveRangeToField = value;
                    this.RaisePropertyChanged("ApproveRangeTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsApprove {
            get {
                return this.IsApproveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsApproveField, value) != true)) {
                    this.IsApproveField = value;
                    this.RaisePropertyChanged("IsApprove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsDeny {
            get {
                return this.IsDenyField;
            }
            set {
                if ((object.ReferenceEquals(this.IsDenyField, value) != true)) {
                    this.IsDenyField = value;
                    this.RaisePropertyChanged("IsDeny");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsEdit {
            get {
                return this.IsEditField;
            }
            set {
                if ((object.ReferenceEquals(this.IsEditField, value) != true)) {
                    this.IsEditField = value;
                    this.RaisePropertyChanged("IsEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsOrder {
            get {
                return this.IsOrderField;
            }
            set {
                if ((object.ReferenceEquals(this.IsOrderField, value) != true)) {
                    this.IsOrderField = value;
                    this.RaisePropertyChanged("IsOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsView {
            get {
                return this.IsViewField;
            }
            set {
                if ((object.ReferenceEquals(this.IsViewField, value) != true)) {
                    this.IsViewField = value;
                    this.RaisePropertyChanged("IsView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageMainMenu {
            get {
                return this.PageMainMenuField;
            }
            set {
                if ((object.ReferenceEquals(this.PageMainMenuField, value) != true)) {
                    this.PageMainMenuField = value;
                    this.RaisePropertyChanged("PageMainMenu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageSubMenu {
            get {
                return this.PageSubMenuField;
            }
            set {
                if ((object.ReferenceEquals(this.PageSubMenuField, value) != true)) {
                    this.PageSubMenuField = value;
                    this.RaisePropertyChanged("PageSubMenu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PermissionID {
            get {
                return this.PermissionIDField;
            }
            set {
                if ((this.PermissionIDField.Equals(value) != true)) {
                    this.PermissionIDField = value;
                    this.RaisePropertyChanged("PermissionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleField, value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetVendorOrderDueReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetVendorOrderDueReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DaysToNotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DeliveryWindowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderdueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrdertypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> DaysToNotify {
            get {
                return this.DaysToNotifyField;
            }
            set {
                if ((this.DaysToNotifyField.Equals(value) != true)) {
                    this.DaysToNotifyField = value;
                    this.RaisePropertyChanged("DaysToNotify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeliveryDate {
            get {
                return this.DeliveryDateField;
            }
            set {
                if ((this.DeliveryDateField.Equals(value) != true)) {
                    this.DeliveryDateField = value;
                    this.RaisePropertyChanged("DeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> DeliveryWindow {
            get {
                return this.DeliveryWindowField;
            }
            set {
                if ((this.DeliveryWindowField.Equals(value) != true)) {
                    this.DeliveryWindowField = value;
                    this.RaisePropertyChanged("DeliveryWindow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderdueDate {
            get {
                return this.OrderdueDateField;
            }
            set {
                if ((this.OrderdueDateField.Equals(value) != true)) {
                    this.OrderdueDateField = value;
                    this.RaisePropertyChanged("OrderdueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ordertype {
            get {
                return this.OrdertypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdertypeField, value) != true)) {
                    this.OrdertypeField = value;
                    this.RaisePropertyChanged("Ordertype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetFacilitySuppliesMapReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetFacilitySuppliesMapReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CensusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilitySupplyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> FactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsCensusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsEmpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ParlevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UnitPriceValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UomNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> VendorOrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Census {
            get {
                return this.CensusField;
            }
            set {
                if ((this.CensusField.Equals(value) != true)) {
                    this.CensusField = value;
                    this.RaisePropertyChanged("Census");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilitySupplyID {
            get {
                return this.FacilitySupplyIDField;
            }
            set {
                if ((this.FacilitySupplyIDField.Equals(value) != true)) {
                    this.FacilitySupplyIDField = value;
                    this.RaisePropertyChanged("FacilitySupplyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Factor {
            get {
                return this.FactorField;
            }
            set {
                if ((this.FactorField.Equals(value) != true)) {
                    this.FactorField = value;
                    this.RaisePropertyChanged("Factor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsCensus {
            get {
                return this.IsCensusField;
            }
            set {
                if ((object.ReferenceEquals(this.IsCensusField, value) != true)) {
                    this.IsCensusField = value;
                    this.RaisePropertyChanged("IsCensus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsEmp {
            get {
                return this.IsEmpField;
            }
            set {
                if ((this.IsEmpField.Equals(value) != true)) {
                    this.IsEmpField = value;
                    this.RaisePropertyChanged("IsEmp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsPatient {
            get {
                return this.IsPatientField;
            }
            set {
                if ((this.IsPatientField.Equals(value) != true)) {
                    this.IsPatientField = value;
                    this.RaisePropertyChanged("IsPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Parlevel {
            get {
                return this.ParlevelField;
            }
            set {
                if ((this.ParlevelField.Equals(value) != true)) {
                    this.ParlevelField = value;
                    this.RaisePropertyChanged("Parlevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> UnitPriceValue {
            get {
                return this.UnitPriceValueField;
            }
            set {
                if ((this.UnitPriceValueField.Equals(value) != true)) {
                    this.UnitPriceValueField = value;
                    this.RaisePropertyChanged("UnitPriceValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UomName {
            get {
                return this.UomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UomNameField, value) != true)) {
                    this.UomNameField = value;
                    this.RaisePropertyChanged("UomName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorItemID {
            get {
                return this.VendorItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorItemIDField, value) != true)) {
                    this.VendorItemIDField = value;
                    this.RaisePropertyChanged("VendorItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> VendorOrderDate {
            get {
                return this.VendorOrderDateField;
            }
            set {
                if ((this.VendorOrderDateField.Equals(value) != true)) {
                    this.VendorOrderDateField = value;
                    this.RaisePropertyChanged("VendorOrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetItemDescName", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetItemDescName : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCategoryReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetCategoryReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveField, value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Usage {
            get {
                return this.UsageField;
            }
            set {
                if ((object.ReferenceEquals(this.UsageField, value) != true)) {
                    this.UsageField = value;
                    this.RaisePropertyChanged("Usage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUomReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetUomReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UomIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UomNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveField, value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UomID {
            get {
                return this.UomIDField;
            }
            set {
                if ((this.UomIDField.Equals(value) != true)) {
                    this.UomIDField = value;
                    this.RaisePropertyChanged("UomID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UomName {
            get {
                return this.UomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UomNameField, value) != true)) {
                    this.UomNameField = value;
                    this.RaisePropertyChanged("UomName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetItemSummaryReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetItemSummaryReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> EachPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GPBillingCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NDCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> NonStandardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> StandardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitPriceCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UnitPricevalueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UomNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorItemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveField, value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> EachPrice {
            get {
                return this.EachPriceField;
            }
            set {
                if ((this.EachPriceField.Equals(value) != true)) {
                    this.EachPriceField = value;
                    this.RaisePropertyChanged("EachPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GPBillingCode {
            get {
                return this.GPBillingCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GPBillingCodeField, value) != true)) {
                    this.GPBillingCodeField = value;
                    this.RaisePropertyChanged("GPBillingCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NDC {
            get {
                return this.NDCField;
            }
            set {
                if ((object.ReferenceEquals(this.NDCField, value) != true)) {
                    this.NDCField = value;
                    this.RaisePropertyChanged("NDC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> NonStandard {
            get {
                return this.NonStandardField;
            }
            set {
                if ((this.NonStandardField.Equals(value) != true)) {
                    this.NonStandardField = value;
                    this.RaisePropertyChanged("NonStandard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Standard {
            get {
                return this.StandardField;
            }
            set {
                if ((this.StandardField.Equals(value) != true)) {
                    this.StandardField = value;
                    this.RaisePropertyChanged("Standard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitPriceField, value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitPriceCurrency {
            get {
                return this.UnitPriceCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitPriceCurrencyField, value) != true)) {
                    this.UnitPriceCurrencyField = value;
                    this.RaisePropertyChanged("UnitPriceCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> UnitPricevalue {
            get {
                return this.UnitPricevalueField;
            }
            set {
                if ((this.UnitPricevalueField.Equals(value) != true)) {
                    this.UnitPricevalueField = value;
                    this.RaisePropertyChanged("UnitPricevalue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UomName {
            get {
                return this.UomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UomNameField, value) != true)) {
                    this.UomNameField = value;
                    this.RaisePropertyChanged("UomName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorItemID {
            get {
                return this.VendorItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorItemIDField, value) != true)) {
                    this.VendorItemIDField = value;
                    this.RaisePropertyChanged("VendorItemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetItemDetailsReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetItemDetailsReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> EachPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GPBillingCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NDCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UomField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> EachPrice {
            get {
                return this.EachPriceField;
            }
            set {
                if ((this.EachPriceField.Equals(value) != true)) {
                    this.EachPriceField = value;
                    this.RaisePropertyChanged("EachPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GPBillingCode {
            get {
                return this.GPBillingCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GPBillingCodeField, value) != true)) {
                    this.GPBillingCodeField = value;
                    this.RaisePropertyChanged("GPBillingCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NDC {
            get {
                return this.NDCField;
            }
            set {
                if ((object.ReferenceEquals(this.NDCField, value) != true)) {
                    this.NDCField = value;
                    this.RaisePropertyChanged("NDC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitPriceField, value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uom {
            get {
                return this.UomField;
            }
            set {
                if ((object.ReferenceEquals(this.UomField, value) != true)) {
                    this.UomField = value;
                    this.RaisePropertyChanged("Uom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMachineMasterReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetMachineMasterReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipementListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GpAccountCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HoursonthemachineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IstrActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MachineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturedyearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarrantyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipementList {
            get {
                return this.EquipementListField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipementListField, value) != true)) {
                    this.EquipementListField = value;
                    this.RaisePropertyChanged("EquipementList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentCategory {
            get {
                return this.EquipmentCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentCategoryField, value) != true)) {
                    this.EquipmentCategoryField = value;
                    this.RaisePropertyChanged("EquipmentCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategory {
            get {
                return this.EquipmentSubCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryField, value) != true)) {
                    this.EquipmentSubCategoryField = value;
                    this.RaisePropertyChanged("EquipmentSubCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GpAccountCode {
            get {
                return this.GpAccountCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GpAccountCodeField, value) != true)) {
                    this.GpAccountCodeField = value;
                    this.RaisePropertyChanged("GpAccountCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Hoursonthemachine {
            get {
                return this.HoursonthemachineField;
            }
            set {
                if ((this.HoursonthemachineField.Equals(value) != true)) {
                    this.HoursonthemachineField = value;
                    this.RaisePropertyChanged("Hoursonthemachine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IstrActive {
            get {
                return this.IstrActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IstrActiveField, value) != true)) {
                    this.IstrActiveField = value;
                    this.RaisePropertyChanged("IstrActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MachineID {
            get {
                return this.MachineIDField;
            }
            set {
                if ((this.MachineIDField.Equals(value) != true)) {
                    this.MachineIDField = value;
                    this.RaisePropertyChanged("MachineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturedyear {
            get {
                return this.ManufacturedyearField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturedyearField, value) != true)) {
                    this.ManufacturedyearField = value;
                    this.RaisePropertyChanged("Manufacturedyear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Warranty {
            get {
                return this.WarrantyField;
            }
            set {
                if ((object.ReferenceEquals(this.WarrantyField, value) != true)) {
                    this.WarrantyField = value;
                    this.RaisePropertyChanged("Warranty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMachineMasterDetailsReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetMachineMasterDetailsReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipementListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GpAccountCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HoursonthemachineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MachineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturedyearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarrantyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipementList {
            get {
                return this.EquipementListField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipementListField, value) != true)) {
                    this.EquipementListField = value;
                    this.RaisePropertyChanged("EquipementList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentCategory {
            get {
                return this.EquipmentCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentCategoryField, value) != true)) {
                    this.EquipmentCategoryField = value;
                    this.RaisePropertyChanged("EquipmentCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategory {
            get {
                return this.EquipmentSubCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryField, value) != true)) {
                    this.EquipmentSubCategoryField = value;
                    this.RaisePropertyChanged("EquipmentSubCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GpAccountCode {
            get {
                return this.GpAccountCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GpAccountCodeField, value) != true)) {
                    this.GpAccountCodeField = value;
                    this.RaisePropertyChanged("GpAccountCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Hoursonthemachine {
            get {
                return this.HoursonthemachineField;
            }
            set {
                if ((this.HoursonthemachineField.Equals(value) != true)) {
                    this.HoursonthemachineField = value;
                    this.RaisePropertyChanged("Hoursonthemachine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MachineID {
            get {
                return this.MachineIDField;
            }
            set {
                if ((this.MachineIDField.Equals(value) != true)) {
                    this.MachineIDField = value;
                    this.RaisePropertyChanged("MachineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturedyear {
            get {
                return this.ManufacturedyearField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturedyearField, value) != true)) {
                    this.ManufacturedyearField = value;
                    this.RaisePropertyChanged("Manufacturedyear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Warranty {
            get {
                return this.WarrantyField;
            }
            set {
                if ((object.ReferenceEquals(this.WarrantyField, value) != true)) {
                    this.WarrantyField = value;
                    this.RaisePropertyChanged("Warranty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidateMedicalSuppliesOrder", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class ValidateMedicalSuppliesOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PRMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONo {
            get {
                return this.PONoField;
            }
            set {
                if ((object.ReferenceEquals(this.PONoField, value) != true)) {
                    this.PONoField = value;
                    this.RaisePropertyChanged("PONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PRMasterID {
            get {
                return this.PRMasterIDField;
            }
            set {
                if ((this.PRMasterIDField.Equals(value) != true)) {
                    this.PRMasterIDField = value;
                    this.RaisePropertyChanged("PRMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetVendorOrderdueRemainderReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetVendorOrderdueRemainderReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyContent1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyContent2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyContent3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DaysToNotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromEmailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderdueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToEmailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VenOrderDueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorWithDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BodyContent1 {
            get {
                return this.BodyContent1Field;
            }
            set {
                if ((object.ReferenceEquals(this.BodyContent1Field, value) != true)) {
                    this.BodyContent1Field = value;
                    this.RaisePropertyChanged("BodyContent1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BodyContent2 {
            get {
                return this.BodyContent2Field;
            }
            set {
                if ((object.ReferenceEquals(this.BodyContent2Field, value) != true)) {
                    this.BodyContent2Field = value;
                    this.RaisePropertyChanged("BodyContent2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BodyContent3 {
            get {
                return this.BodyContent3Field;
            }
            set {
                if ((object.ReferenceEquals(this.BodyContent3Field, value) != true)) {
                    this.BodyContent3Field = value;
                    this.RaisePropertyChanged("BodyContent3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateDescription {
            get {
                return this.CorporateDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateDescriptionField, value) != true)) {
                    this.CorporateDescriptionField = value;
                    this.RaisePropertyChanged("CorporateDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> DaysToNotify {
            get {
                return this.DaysToNotifyField;
            }
            set {
                if ((this.DaysToNotifyField.Equals(value) != true)) {
                    this.DaysToNotifyField = value;
                    this.RaisePropertyChanged("DaysToNotify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryDate {
            get {
                return this.DeliveryDateField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryDateField, value) != true)) {
                    this.DeliveryDateField = value;
                    this.RaisePropertyChanged("DeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromEmailID {
            get {
                return this.FromEmailIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FromEmailIDField, value) != true)) {
                    this.FromEmailIDField = value;
                    this.RaisePropertyChanged("FromEmailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderTypeField, value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderdueDate {
            get {
                return this.OrderdueDateField;
            }
            set {
                if ((this.OrderdueDateField.Equals(value) != true)) {
                    this.OrderdueDateField = value;
                    this.RaisePropertyChanged("OrderdueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubjectContent {
            get {
                return this.SubjectContentField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectContentField, value) != true)) {
                    this.SubjectContentField = value;
                    this.RaisePropertyChanged("SubjectContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToEmailID {
            get {
                return this.ToEmailIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ToEmailIDField, value) != true)) {
                    this.ToEmailIDField = value;
                    this.RaisePropertyChanged("ToEmailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPhone {
            get {
                return this.UserPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPhoneField, value) != true)) {
                    this.UserPhoneField = value;
                    this.RaisePropertyChanged("UserPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VenOrderDueID {
            get {
                return this.VenOrderDueIDField;
            }
            set {
                if ((this.VenOrderDueIDField.Equals(value) != true)) {
                    this.VenOrderDueIDField = value;
                    this.RaisePropertyChanged("VenOrderDueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorWithDate {
            get {
                return this.VendorWithDateField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorWithDateField, value) != true)) {
                    this.VendorWithDateField = value;
                    this.RaisePropertyChanged("VendorWithDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchFacilityVendorAcct", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchFacilityVendorAcct : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityVendorAccIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ITField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MachinePartsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RegularSuppliesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ServiceOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAccount {
            get {
                return this.BillAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BillAccountField, value) != true)) {
                    this.BillAccountField = value;
                    this.RaisePropertyChanged("BillAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityVendorAccID {
            get {
                return this.FacilityVendorAccIDField;
            }
            set {
                if ((this.FacilityVendorAccIDField.Equals(value) != true)) {
                    this.FacilityVendorAccIDField = value;
                    this.RaisePropertyChanged("FacilityVendorAccID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IT {
            get {
                return this.ITField;
            }
            set {
                if ((this.ITField.Equals(value) != true)) {
                    this.ITField = value;
                    this.RaisePropertyChanged("IT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> MachineParts {
            get {
                return this.MachinePartsField;
            }
            set {
                if ((this.MachinePartsField.Equals(value) != true)) {
                    this.MachinePartsField = value;
                    this.RaisePropertyChanged("MachineParts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> RegularSupplies {
            get {
                return this.RegularSuppliesField;
            }
            set {
                if ((this.RegularSuppliesField.Equals(value) != true)) {
                    this.RegularSuppliesField = value;
                    this.RaisePropertyChanged("RegularSupplies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ServiceOrder {
            get {
                return this.ServiceOrderField;
            }
            set {
                if ((this.ServiceOrderField.Equals(value) != true)) {
                    this.ServiceOrderField = value;
                    this.RaisePropertyChanged("ServiceOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAccount {
            get {
                return this.ShipAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAccountField, value) != true)) {
                    this.ShipAccountField = value;
                    this.RaisePropertyChanged("ShipAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetEquipmentSubCategoryforCapital", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetEquipmentSubCategoryforCapital : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipementSubCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipementSubCategoryID {
            get {
                return this.EquipementSubCategoryIDField;
            }
            set {
                if ((this.EquipementSubCategoryIDField.Equals(value) != true)) {
                    this.EquipementSubCategoryIDField = value;
                    this.RaisePropertyChanged("EquipementSubCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategoryDescription {
            get {
                return this.EquipmentSubCategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryDescriptionField, value) != true)) {
                    this.EquipmentSubCategoryDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentSubCategoryDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetEquipementListforCapital", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetEquipementListforCapital : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipementListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipementListID {
            get {
                return this.EquipementListIDField;
            }
            set {
                if ((this.EquipementListIDField.Equals(value) != true)) {
                    this.EquipementListIDField = value;
                    this.RaisePropertyChanged("EquipementListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentListDescription {
            get {
                return this.EquipmentListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListDescriptionField, value) != true)) {
                    this.EquipmentListDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentListDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidCapitalEquipment", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class ValidCapitalEquipment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EditField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Edit {
            get {
                return this.EditField;
            }
            set {
                if ((this.EditField.Equals(value) != true)) {
                    this.EditField = value;
                    this.RaisePropertyChanged("Edit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMSRMultipleIDs", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetMSRMultipleIDs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalSuppliesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalSuppliesID {
            get {
                return this.MedicalSuppliesIDField;
            }
            set {
                if ((this.MedicalSuppliesIDField.Equals(value) != true)) {
                    this.MedicalSuppliesIDField = value;
                    this.RaisePropertyChanged("MedicalSuppliesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONo {
            get {
                return this.PONoField;
            }
            set {
                if ((object.ReferenceEquals(this.PONoField, value) != true)) {
                    this.PONoField = value;
                    this.RaisePropertyChanged("PONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRNo {
            get {
                return this.PRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PRNoField, value) != true)) {
                    this.PRNoField = value;
                    this.RaisePropertyChanged("PRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchMedicalSupplyRequestPo", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchMedicalSupplyRequestPo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalSuppliesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAccount {
            get {
                return this.BillAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BillAccountField, value) != true)) {
                    this.BillAccountField = value;
                    this.RaisePropertyChanged("BillAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalSuppliesID {
            get {
                return this.MedicalSuppliesIDField;
            }
            set {
                if ((this.MedicalSuppliesIDField.Equals(value) != true)) {
                    this.MedicalSuppliesIDField = value;
                    this.RaisePropertyChanged("MedicalSuppliesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONo {
            get {
                return this.PONoField;
            }
            set {
                if ((object.ReferenceEquals(this.PONoField, value) != true)) {
                    this.PONoField = value;
                    this.RaisePropertyChanged("PONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRNo {
            get {
                return this.PRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PRNoField, value) != true)) {
                    this.PRNoField = value;
                    this.RaisePropertyChanged("PRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAccount {
            get {
                return this.ShipAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAccountField, value) != true)) {
                    this.ShipAccountField = value;
                    this.RaisePropertyChanged("ShipAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMSROrderContentPO", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetMSROrderContentPO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillADField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillZipCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaczipcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] OrderContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderwithUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurchaseDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SNGItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipADField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorADField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAD {
            get {
                return this.BillADField;
            }
            set {
                if ((object.ReferenceEquals(this.BillADField, value) != true)) {
                    this.BillADField = value;
                    this.RaisePropertyChanged("BillAD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAccount {
            get {
                return this.BillAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BillAccountField, value) != true)) {
                    this.BillAccountField = value;
                    this.RaisePropertyChanged("BillAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAddress1 {
            get {
                return this.BillAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.BillAddress1Field, value) != true)) {
                    this.BillAddress1Field = value;
                    this.RaisePropertyChanged("BillAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAddress2 {
            get {
                return this.BillAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.BillAddress2Field, value) != true)) {
                    this.BillAddress2Field = value;
                    this.RaisePropertyChanged("BillAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillCity {
            get {
                return this.BillCityField;
            }
            set {
                if ((object.ReferenceEquals(this.BillCityField, value) != true)) {
                    this.BillCityField = value;
                    this.RaisePropertyChanged("BillCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillFax {
            get {
                return this.BillFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.BillFaxField, value) != true)) {
                    this.BillFaxField = value;
                    this.RaisePropertyChanged("BillFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillPhone {
            get {
                return this.BillPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.BillPhoneField, value) != true)) {
                    this.BillPhoneField = value;
                    this.RaisePropertyChanged("BillPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillState {
            get {
                return this.BillStateField;
            }
            set {
                if ((object.ReferenceEquals(this.BillStateField, value) != true)) {
                    this.BillStateField = value;
                    this.RaisePropertyChanged("BillState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillZipCode {
            get {
                return this.BillZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillZipCodeField, value) != true)) {
                    this.BillZipCodeField = value;
                    this.RaisePropertyChanged("BillZipCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateDescription {
            get {
                return this.CorporateDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateDescriptionField, value) != true)) {
                    this.CorporateDescriptionField = value;
                    this.RaisePropertyChanged("CorporateDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacFax {
            get {
                return this.FacFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FacFaxField, value) != true)) {
                    this.FacFaxField = value;
                    this.RaisePropertyChanged("FacFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacPhone {
            get {
                return this.FacPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.FacPhoneField, value) != true)) {
                    this.FacPhoneField = value;
                    this.RaisePropertyChanged("FacPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityAddress1 {
            get {
                return this.FacilityAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityAddress1Field, value) != true)) {
                    this.FacilityAddress1Field = value;
                    this.RaisePropertyChanged("FacilityAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityAddress2 {
            get {
                return this.FacilityAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityAddress2Field, value) != true)) {
                    this.FacilityAddress2Field = value;
                    this.RaisePropertyChanged("FacilityAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityCity {
            get {
                return this.FacilityCityField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityCityField, value) != true)) {
                    this.FacilityCityField = value;
                    this.RaisePropertyChanged("FacilityCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Faczipcode {
            get {
                return this.FaczipcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FaczipcodeField, value) != true)) {
                    this.FaczipcodeField = value;
                    this.RaisePropertyChanged("Faczipcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromEmail {
            get {
                return this.FromEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.FromEmailField, value) != true)) {
                    this.FromEmailField = value;
                    this.RaisePropertyChanged("FromEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderBy {
            get {
                return this.OrderByField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderByField, value) != true)) {
                    this.OrderByField = value;
                    this.RaisePropertyChanged("OrderBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] OrderContent {
            get {
                return this.OrderContentField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderContentField, value) != true)) {
                    this.OrderContentField = value;
                    this.RaisePropertyChanged("OrderContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderDateField, value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderTypeField, value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderwithUOM {
            get {
                return this.OrderwithUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderwithUOMField, value) != true)) {
                    this.OrderwithUOMField = value;
                    this.RaisePropertyChanged("OrderwithUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONo {
            get {
                return this.PONoField;
            }
            set {
                if ((object.ReferenceEquals(this.PONoField, value) != true)) {
                    this.PONoField = value;
                    this.RaisePropertyChanged("PONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRNo {
            get {
                return this.PRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PRNoField, value) != true)) {
                    this.PRNoField = value;
                    this.RaisePropertyChanged("PRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurchaseDetails {
            get {
                return this.PurchaseDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.PurchaseDetailsField, value) != true)) {
                    this.PurchaseDetailsField = value;
                    this.RaisePropertyChanged("PurchaseDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SNGItemID {
            get {
                return this.SNGItemIDField;
            }
            set {
                if ((this.SNGItemIDField.Equals(value) != true)) {
                    this.SNGItemIDField = value;
                    this.RaisePropertyChanged("SNGItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAD {
            get {
                return this.ShipADField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipADField, value) != true)) {
                    this.ShipADField = value;
                    this.RaisePropertyChanged("ShipAD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAccount {
            get {
                return this.ShipAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAccountField, value) != true)) {
                    this.ShipAccountField = value;
                    this.RaisePropertyChanged("ShipAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToEmail {
            get {
                return this.ToEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ToEmailField, value) != true)) {
                    this.ToEmailField = value;
                    this.RaisePropertyChanged("ToEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPhoneNo {
            get {
                return this.UserPhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPhoneNoField, value) != true)) {
                    this.UserPhoneNoField = value;
                    this.RaisePropertyChanged("UserPhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAD {
            get {
                return this.VendorADField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorADField, value) != true)) {
                    this.VendorADField = value;
                    this.RaisePropertyChanged("VendorAD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress {
            get {
                return this.VendorAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddressField, value) != true)) {
                    this.VendorAddressField = value;
                    this.RaisePropertyChanged("VendorAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress2 {
            get {
                return this.VendorAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddress2Field, value) != true)) {
                    this.VendorAddress2Field = value;
                    this.RaisePropertyChanged("VendorAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCity {
            get {
                return this.VendorCityField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCityField, value) != true)) {
                    this.VendorCityField = value;
                    this.RaisePropertyChanged("VendorCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorFax {
            get {
                return this.VendorFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorFaxField, value) != true)) {
                    this.VendorFaxField = value;
                    this.RaisePropertyChanged("VendorFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorItemID {
            get {
                return this.VendorItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorItemIDField, value) != true)) {
                    this.VendorItemIDField = value;
                    this.RaisePropertyChanged("VendorItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPhone {
            get {
                return this.VendorPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPhoneField, value) != true)) {
                    this.VendorPhoneField = value;
                    this.RaisePropertyChanged("VendorPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorState {
            get {
                return this.VendorStateField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorStateField, value) != true)) {
                    this.VendorStateField = value;
                    this.RaisePropertyChanged("VendorState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorZip {
            get {
                return this.VendorZipField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorZipField, value) != true)) {
                    this.VendorZipField = value;
                    this.RaisePropertyChanged("VendorZip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMedicalSupplyPoReportDetails", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetMedicalSupplyPoReportDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalSuppliesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MedicalsuppliesItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParlevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoRemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QtyInHandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UomIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorItemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedinByField, value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalSuppliesID {
            get {
                return this.MedicalSuppliesIDField;
            }
            set {
                if ((this.MedicalSuppliesIDField.Equals(value) != true)) {
                    this.MedicalSuppliesIDField = value;
                    this.RaisePropertyChanged("MedicalSuppliesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MedicalsuppliesItemID {
            get {
                return this.MedicalsuppliesItemIDField;
            }
            set {
                if ((this.MedicalsuppliesItemIDField.Equals(value) != true)) {
                    this.MedicalsuppliesItemIDField = value;
                    this.RaisePropertyChanged("MedicalsuppliesItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderPeriod {
            get {
                return this.OrderPeriodField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderPeriodField, value) != true)) {
                    this.OrderPeriodField = value;
                    this.RaisePropertyChanged("OrderPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderTypeField, value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONo {
            get {
                return this.PONoField;
            }
            set {
                if ((object.ReferenceEquals(this.PONoField, value) != true)) {
                    this.PONoField = value;
                    this.RaisePropertyChanged("PONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRNo {
            get {
                return this.PRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PRNoField, value) != true)) {
                    this.PRNoField = value;
                    this.RaisePropertyChanged("PRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parlevel {
            get {
                return this.ParlevelField;
            }
            set {
                if ((object.ReferenceEquals(this.ParlevelField, value) != true)) {
                    this.ParlevelField = value;
                    this.RaisePropertyChanged("Parlevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PoRemarks {
            get {
                return this.PoRemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.PoRemarksField, value) != true)) {
                    this.PoRemarksField = value;
                    this.RaisePropertyChanged("PoRemarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QtyInHand {
            get {
                return this.QtyInHandField;
            }
            set {
                if ((this.QtyInHandField.Equals(value) != true)) {
                    this.QtyInHandField = value;
                    this.RaisePropertyChanged("QtyInHand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeDelivery {
            get {
                return this.TimeDeliveryField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeDeliveryField, value) != true)) {
                    this.TimeDeliveryField = value;
                    this.RaisePropertyChanged("TimeDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UomID {
            get {
                return this.UomIDField;
            }
            set {
                if ((this.UomIDField.Equals(value) != true)) {
                    this.UomIDField = value;
                    this.RaisePropertyChanged("UomID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorItemID {
            get {
                return this.VendorItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorItemIDField, value) != true)) {
                    this.VendorItemIDField = value;
                    this.RaisePropertyChanged("VendorItemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSuperAdminDetails", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetSuperAdminDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNo {
            get {
                return this.PhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNoField, value) != true)) {
                    this.PhoneNoField = value;
                    this.RaisePropertyChanged("PhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindEquipement", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindEquipement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipementSubCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentCatDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveField, value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipementSubCategoryID {
            get {
                return this.EquipementSubCategoryIDField;
            }
            set {
                if ((this.EquipementSubCategoryIDField.Equals(value) != true)) {
                    this.EquipementSubCategoryIDField = value;
                    this.RaisePropertyChanged("EquipementSubCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentCatDescription {
            get {
                return this.EquipmentCatDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentCatDescriptionField, value) != true)) {
                    this.EquipmentCatDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentCatDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipmentCategoryID {
            get {
                return this.EquipmentCategoryIDField;
            }
            set {
                if ((this.EquipmentCategoryIDField.Equals(value) != true)) {
                    this.EquipmentCategoryIDField = value;
                    this.RaisePropertyChanged("EquipmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategoryDescription {
            get {
                return this.EquipmentSubCategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryDescriptionField, value) != true)) {
                    this.EquipmentSubCategoryDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentSubCategoryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetEquipementSubCategory", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetEquipementSubCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipementSubCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipementSubCategoryID {
            get {
                return this.EquipementSubCategoryIDField;
            }
            set {
                if ((this.EquipementSubCategoryIDField.Equals(value) != true)) {
                    this.EquipementSubCategoryIDField = value;
                    this.RaisePropertyChanged("EquipementSubCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategoryDescription {
            get {
                return this.EquipmentSubCategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryDescriptionField, value) != true)) {
                    this.EquipmentSubCategoryDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentSubCategoryDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetActiveEquipementSubCategoryvalue", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetActiveEquipementSubCategoryvalue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipmentCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipmentCategory {
            get {
                return this.EquipmentCategoryField;
            }
            set {
                if ((this.EquipmentCategoryField.Equals(value) != true)) {
                    this.EquipmentCategoryField = value;
                    this.RaisePropertyChanged("EquipmentCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategoryDescription {
            get {
                return this.EquipmentSubCategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryDescriptionField, value) != true)) {
                    this.EquipmentSubCategoryDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentSubCategoryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SavedEquipmentSubCategory", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SavedEquipmentSubCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipementSubCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipementSubCategoryID {
            get {
                return this.EquipementSubCategoryIDField;
            }
            set {
                if ((this.EquipementSubCategoryIDField.Equals(value) != true)) {
                    this.EquipementSubCategoryIDField = value;
                    this.RaisePropertyChanged("EquipementSubCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategoryDescription {
            get {
                return this.EquipmentSubCategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryDescriptionField, value) != true)) {
                    this.EquipmentSubCategoryDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentSubCategoryDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindEquipementSubCategoryReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindEquipementSubCategoryReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipementSubCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentCatDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveField, value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipementSubCategoryID {
            get {
                return this.EquipementSubCategoryIDField;
            }
            set {
                if ((this.EquipementSubCategoryIDField.Equals(value) != true)) {
                    this.EquipementSubCategoryIDField = value;
                    this.RaisePropertyChanged("EquipementSubCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentCatDescription {
            get {
                return this.EquipmentCatDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentCatDescriptionField, value) != true)) {
                    this.EquipmentCatDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentCatDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipmentCategoryID {
            get {
                return this.EquipmentCategoryIDField;
            }
            set {
                if ((this.EquipmentCategoryIDField.Equals(value) != true)) {
                    this.EquipmentCategoryIDField = value;
                    this.RaisePropertyChanged("EquipmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategoryDescription {
            get {
                return this.EquipmentSubCategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryDescriptionField, value) != true)) {
                    this.EquipmentSubCategoryDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentSubCategoryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserApprovePermission", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetUserApprovePermission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ApproveRangeFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ApproveRangeToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsApproveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsDenyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsViewOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MainMenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PermissionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SubMenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UserRoleIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ApproveRangeFrom {
            get {
                return this.ApproveRangeFromField;
            }
            set {
                if ((this.ApproveRangeFromField.Equals(value) != true)) {
                    this.ApproveRangeFromField = value;
                    this.RaisePropertyChanged("ApproveRangeFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ApproveRangeTo {
            get {
                return this.ApproveRangeToField;
            }
            set {
                if ((this.ApproveRangeToField.Equals(value) != true)) {
                    this.ApproveRangeToField = value;
                    this.RaisePropertyChanged("ApproveRangeTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsApprove {
            get {
                return this.IsApproveField;
            }
            set {
                if ((this.IsApproveField.Equals(value) != true)) {
                    this.IsApproveField = value;
                    this.RaisePropertyChanged("IsApprove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsDeny {
            get {
                return this.IsDenyField;
            }
            set {
                if ((this.IsDenyField.Equals(value) != true)) {
                    this.IsDenyField = value;
                    this.RaisePropertyChanged("IsDeny");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsEdit {
            get {
                return this.IsEditField;
            }
            set {
                if ((this.IsEditField.Equals(value) != true)) {
                    this.IsEditField = value;
                    this.RaisePropertyChanged("IsEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsOrder {
            get {
                return this.IsOrderField;
            }
            set {
                if ((this.IsOrderField.Equals(value) != true)) {
                    this.IsOrderField = value;
                    this.RaisePropertyChanged("IsOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsViewOnly {
            get {
                return this.IsViewOnlyField;
            }
            set {
                if ((this.IsViewOnlyField.Equals(value) != true)) {
                    this.IsViewOnlyField = value;
                    this.RaisePropertyChanged("IsViewOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MainMenuID {
            get {
                return this.MainMenuIDField;
            }
            set {
                if ((this.MainMenuIDField.Equals(value) != true)) {
                    this.MainMenuIDField = value;
                    this.RaisePropertyChanged("MainMenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PermissionID {
            get {
                return this.PermissionIDField;
            }
            set {
                if ((this.PermissionIDField.Equals(value) != true)) {
                    this.PermissionIDField = value;
                    this.RaisePropertyChanged("PermissionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SubMenuID {
            get {
                return this.SubMenuIDField;
            }
            set {
                if ((this.SubMenuIDField.Equals(value) != true)) {
                    this.SubMenuIDField = value;
                    this.RaisePropertyChanged("SubMenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleField, value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UserRoleID {
            get {
                return this.UserRoleIDField;
            }
            set {
                if ((this.UserRoleIDField.Equals(value) != true)) {
                    this.UserRoleIDField = value;
                    this.RaisePropertyChanged("UserRoleID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMultiUserApprove", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetMultiUserApprove : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApproverOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LinkedPermissionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PageMasterPermissionMultiRoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PermissionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UserRoleIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApproverOrder {
            get {
                return this.ApproverOrderField;
            }
            set {
                if ((this.ApproverOrderField.Equals(value) != true)) {
                    this.ApproverOrderField = value;
                    this.RaisePropertyChanged("ApproverOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LinkedPermissionID {
            get {
                return this.LinkedPermissionIDField;
            }
            set {
                if ((this.LinkedPermissionIDField.Equals(value) != true)) {
                    this.LinkedPermissionIDField = value;
                    this.RaisePropertyChanged("LinkedPermissionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PageMasterPermissionMultiRoleID {
            get {
                return this.PageMasterPermissionMultiRoleIDField;
            }
            set {
                if ((this.PageMasterPermissionMultiRoleIDField.Equals(value) != true)) {
                    this.PageMasterPermissionMultiRoleIDField = value;
                    this.RaisePropertyChanged("PageMasterPermissionMultiRoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PermissionID {
            get {
                return this.PermissionIDField;
            }
            set {
                if ((this.PermissionIDField.Equals(value) != true)) {
                    this.PermissionIDField = value;
                    this.RaisePropertyChanged("PermissionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleField, value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UserRoleID {
            get {
                return this.UserRoleIDField;
            }
            set {
                if ((this.UserRoleIDField.Equals(value) != true)) {
                    this.UserRoleIDField = value;
                    this.RaisePropertyChanged("UserRoleID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GETITRequestPODetails", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GETITRequestPODetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITNNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RequestITMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> RequestITOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Facility {
            get {
                return this.FacilityField;
            }
            set {
                if ((this.FacilityField.Equals(value) != true)) {
                    this.FacilityField = value;
                    this.RaisePropertyChanged("Facility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITNNo {
            get {
                return this.ITNNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITNNoField, value) != true)) {
                    this.ITNNoField = value;
                    this.RaisePropertyChanged("ITNNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITRNo {
            get {
                return this.ITRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITRNoField, value) != true)) {
                    this.ITRNoField = value;
                    this.RaisePropertyChanged("ITRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RequestITMasterID {
            get {
                return this.RequestITMasterIDField;
            }
            set {
                if ((this.RequestITMasterIDField.Equals(value) != true)) {
                    this.RequestITMasterIDField = value;
                    this.RaisePropertyChanged("RequestITMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> RequestITOrderID {
            get {
                return this.RequestITOrderIDField;
            }
            set {
                if ((this.RequestITOrderIDField.Equals(value) != true)) {
                    this.RequestITOrderIDField = value;
                    this.RaisePropertyChanged("RequestITOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchRequestITPO", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchRequestITPO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ISSEARCHLOADField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITNNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RequestITMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> RequestITOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAccount {
            get {
                return this.BillAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BillAccountField, value) != true)) {
                    this.BillAccountField = value;
                    this.RaisePropertyChanged("BillAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Facility {
            get {
                return this.FacilityField;
            }
            set {
                if ((this.FacilityField.Equals(value) != true)) {
                    this.FacilityField = value;
                    this.RaisePropertyChanged("Facility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ISSEARCHLOAD {
            get {
                return this.ISSEARCHLOADField;
            }
            set {
                if ((this.ISSEARCHLOADField.Equals(value) != true)) {
                    this.ISSEARCHLOADField = value;
                    this.RaisePropertyChanged("ISSEARCHLOAD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITNNo {
            get {
                return this.ITNNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITNNoField, value) != true)) {
                    this.ITNNoField = value;
                    this.RaisePropertyChanged("ITNNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITRNo {
            get {
                return this.ITRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITRNoField, value) != true)) {
                    this.ITRNoField = value;
                    this.RaisePropertyChanged("ITRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RequestITMasterID {
            get {
                return this.RequestITMasterIDField;
            }
            set {
                if ((this.RequestITMasterIDField.Equals(value) != true)) {
                    this.RequestITMasterIDField = value;
                    this.RaisePropertyChanged("RequestITMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> RequestITOrderID {
            get {
                return this.RequestITOrderIDField;
            }
            set {
                if ((this.RequestITOrderIDField.Equals(value) != true)) {
                    this.RequestITOrderIDField = value;
                    this.RaisePropertyChanged("RequestITOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAccount {
            get {
                return this.ShipAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAccountField, value) != true)) {
                    this.ShipAccountField = value;
                    this.RaisePropertyChanged("ShipAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindRequestITDetailsfromPO", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindRequestITDetailsfromPO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipementListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipementSubCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ITRequestDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ITRequestMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderquantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceperUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ReequestypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipementListID {
            get {
                return this.EquipementListIDField;
            }
            set {
                if ((this.EquipementListIDField.Equals(value) != true)) {
                    this.EquipementListIDField = value;
                    this.RaisePropertyChanged("EquipementListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipementSubCategoryID {
            get {
                return this.EquipementSubCategoryIDField;
            }
            set {
                if ((this.EquipementSubCategoryIDField.Equals(value) != true)) {
                    this.EquipementSubCategoryIDField = value;
                    this.RaisePropertyChanged("EquipementSubCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentList {
            get {
                return this.EquipmentListField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListField, value) != true)) {
                    this.EquipmentListField = value;
                    this.RaisePropertyChanged("EquipmentList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategory {
            get {
                return this.EquipmentSubCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryField, value) != true)) {
                    this.EquipmentSubCategoryField = value;
                    this.RaisePropertyChanged("EquipmentSubCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Facility {
            get {
                return this.FacilityField;
            }
            set {
                if ((this.FacilityField.Equals(value) != true)) {
                    this.FacilityField = value;
                    this.RaisePropertyChanged("Facility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ITRequestDetailID {
            get {
                return this.ITRequestDetailIDField;
            }
            set {
                if ((this.ITRequestDetailIDField.Equals(value) != true)) {
                    this.ITRequestDetailIDField = value;
                    this.RaisePropertyChanged("ITRequestDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ITRequestMasterID {
            get {
                return this.ITRequestMasterIDField;
            }
            set {
                if ((this.ITRequestMasterIDField.Equals(value) != true)) {
                    this.ITRequestMasterIDField = value;
                    this.RaisePropertyChanged("ITRequestMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Orderquantity {
            get {
                return this.OrderquantityField;
            }
            set {
                if ((this.OrderquantityField.Equals(value) != true)) {
                    this.OrderquantityField = value;
                    this.RaisePropertyChanged("Orderquantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PriceperUnit {
            get {
                return this.PriceperUnitField;
            }
            set {
                if ((this.PriceperUnitField.Equals(value) != true)) {
                    this.PriceperUnitField = value;
                    this.RaisePropertyChanged("PriceperUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Reequestype {
            get {
                return this.ReequestypeField;
            }
            set {
                if ((this.ReequestypeField.Equals(value) != true)) {
                    this.ReequestypeField = value;
                    this.RaisePropertyChanged("Reequestype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetITROrderContentPO", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetITROrderContentPO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillADField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillZipCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaczipcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITNNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] OrderContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderquantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceperUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RequestITMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> RequestITOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipADField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingcostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorADField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorContactEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAD {
            get {
                return this.BillADField;
            }
            set {
                if ((object.ReferenceEquals(this.BillADField, value) != true)) {
                    this.BillADField = value;
                    this.RaisePropertyChanged("BillAD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAccount {
            get {
                return this.BillAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BillAccountField, value) != true)) {
                    this.BillAccountField = value;
                    this.RaisePropertyChanged("BillAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAddress1 {
            get {
                return this.BillAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.BillAddress1Field, value) != true)) {
                    this.BillAddress1Field = value;
                    this.RaisePropertyChanged("BillAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAddress2 {
            get {
                return this.BillAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.BillAddress2Field, value) != true)) {
                    this.BillAddress2Field = value;
                    this.RaisePropertyChanged("BillAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillCity {
            get {
                return this.BillCityField;
            }
            set {
                if ((object.ReferenceEquals(this.BillCityField, value) != true)) {
                    this.BillCityField = value;
                    this.RaisePropertyChanged("BillCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillFax {
            get {
                return this.BillFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.BillFaxField, value) != true)) {
                    this.BillFaxField = value;
                    this.RaisePropertyChanged("BillFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillPhone {
            get {
                return this.BillPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.BillPhoneField, value) != true)) {
                    this.BillPhoneField = value;
                    this.RaisePropertyChanged("BillPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillState {
            get {
                return this.BillStateField;
            }
            set {
                if ((object.ReferenceEquals(this.BillStateField, value) != true)) {
                    this.BillStateField = value;
                    this.RaisePropertyChanged("BillState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillZipCode {
            get {
                return this.BillZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillZipCodeField, value) != true)) {
                    this.BillZipCodeField = value;
                    this.RaisePropertyChanged("BillZipCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateDescription {
            get {
                return this.CorporateDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateDescriptionField, value) != true)) {
                    this.CorporateDescriptionField = value;
                    this.RaisePropertyChanged("CorporateDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentListDescription {
            get {
                return this.EquipmentListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListDescriptionField, value) != true)) {
                    this.EquipmentListDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategoryDescription {
            get {
                return this.EquipmentSubCategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryDescriptionField, value) != true)) {
                    this.EquipmentSubCategoryDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentSubCategoryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacFax {
            get {
                return this.FacFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FacFaxField, value) != true)) {
                    this.FacFaxField = value;
                    this.RaisePropertyChanged("FacFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacPhone {
            get {
                return this.FacPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.FacPhoneField, value) != true)) {
                    this.FacPhoneField = value;
                    this.RaisePropertyChanged("FacPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Facility {
            get {
                return this.FacilityField;
            }
            set {
                if ((this.FacilityField.Equals(value) != true)) {
                    this.FacilityField = value;
                    this.RaisePropertyChanged("Facility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityAddress1 {
            get {
                return this.FacilityAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityAddress1Field, value) != true)) {
                    this.FacilityAddress1Field = value;
                    this.RaisePropertyChanged("FacilityAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityAddress2 {
            get {
                return this.FacilityAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityAddress2Field, value) != true)) {
                    this.FacilityAddress2Field = value;
                    this.RaisePropertyChanged("FacilityAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityCity {
            get {
                return this.FacilityCityField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityCityField, value) != true)) {
                    this.FacilityCityField = value;
                    this.RaisePropertyChanged("FacilityCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityState {
            get {
                return this.FacilityStateField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityStateField, value) != true)) {
                    this.FacilityStateField = value;
                    this.RaisePropertyChanged("FacilityState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Faczipcode {
            get {
                return this.FaczipcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FaczipcodeField, value) != true)) {
                    this.FaczipcodeField = value;
                    this.RaisePropertyChanged("Faczipcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromEmail {
            get {
                return this.FromEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.FromEmailField, value) != true)) {
                    this.FromEmailField = value;
                    this.RaisePropertyChanged("FromEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITNNo {
            get {
                return this.ITNNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITNNoField, value) != true)) {
                    this.ITNNoField = value;
                    this.RaisePropertyChanged("ITNNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITRNo {
            get {
                return this.ITRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITRNoField, value) != true)) {
                    this.ITRNoField = value;
                    this.RaisePropertyChanged("ITRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderBy {
            get {
                return this.OrderByField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderByField, value) != true)) {
                    this.OrderByField = value;
                    this.RaisePropertyChanged("OrderBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] OrderContent {
            get {
                return this.OrderContentField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderContentField, value) != true)) {
                    this.OrderContentField = value;
                    this.RaisePropertyChanged("OrderContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderDateField, value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Orderquantity {
            get {
                return this.OrderquantityField;
            }
            set {
                if ((this.OrderquantityField.Equals(value) != true)) {
                    this.OrderquantityField = value;
                    this.RaisePropertyChanged("Orderquantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PoEmail {
            get {
                return this.PoEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.PoEmailField, value) != true)) {
                    this.PoEmailField = value;
                    this.RaisePropertyChanged("PoEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PriceperUnit {
            get {
                return this.PriceperUnitField;
            }
            set {
                if ((this.PriceperUnitField.Equals(value) != true)) {
                    this.PriceperUnitField = value;
                    this.RaisePropertyChanged("PriceperUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RequestITMasterID {
            get {
                return this.RequestITMasterIDField;
            }
            set {
                if ((this.RequestITMasterIDField.Equals(value) != true)) {
                    this.RequestITMasterIDField = value;
                    this.RaisePropertyChanged("RequestITMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> RequestITOrderID {
            get {
                return this.RequestITOrderIDField;
            }
            set {
                if ((this.RequestITOrderIDField.Equals(value) != true)) {
                    this.RequestITOrderIDField = value;
                    this.RaisePropertyChanged("RequestITOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestType {
            get {
                return this.RequestTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestTypeField, value) != true)) {
                    this.RequestTypeField = value;
                    this.RaisePropertyChanged("RequestType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAD {
            get {
                return this.ShipADField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipADField, value) != true)) {
                    this.ShipADField = value;
                    this.RaisePropertyChanged("ShipAD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAccount {
            get {
                return this.ShipAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAccountField, value) != true)) {
                    this.ShipAccountField = value;
                    this.RaisePropertyChanged("ShipAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shippingcost {
            get {
                return this.ShippingcostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingcostField, value) != true)) {
                    this.ShippingcostField = value;
                    this.RaisePropertyChanged("Shippingcost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToEmail {
            get {
                return this.ToEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ToEmailField, value) != true)) {
                    this.ToEmailField = value;
                    this.RaisePropertyChanged("ToEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserEmail {
            get {
                return this.UserEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.UserEmailField, value) != true)) {
                    this.UserEmailField = value;
                    this.RaisePropertyChanged("UserEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPhoneNo {
            get {
                return this.UserPhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPhoneNoField, value) != true)) {
                    this.UserPhoneNoField = value;
                    this.RaisePropertyChanged("UserPhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAD {
            get {
                return this.VendorADField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorADField, value) != true)) {
                    this.VendorADField = value;
                    this.RaisePropertyChanged("VendorAD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress1 {
            get {
                return this.VendorAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddress1Field, value) != true)) {
                    this.VendorAddress1Field = value;
                    this.RaisePropertyChanged("VendorAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress2 {
            get {
                return this.VendorAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddress2Field, value) != true)) {
                    this.VendorAddress2Field = value;
                    this.RaisePropertyChanged("VendorAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCity {
            get {
                return this.VendorCityField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCityField, value) != true)) {
                    this.VendorCityField = value;
                    this.RaisePropertyChanged("VendorCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorContactEmail {
            get {
                return this.VendorContactEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorContactEmailField, value) != true)) {
                    this.VendorContactEmailField = value;
                    this.RaisePropertyChanged("VendorContactEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorFax {
            get {
                return this.VendorFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorFaxField, value) != true)) {
                    this.VendorFaxField = value;
                    this.RaisePropertyChanged("VendorFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPhone {
            get {
                return this.VendorPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPhoneField, value) != true)) {
                    this.VendorPhoneField = value;
                    this.RaisePropertyChanged("VendorPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorState {
            get {
                return this.VendorStateField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorStateField, value) != true)) {
                    this.VendorStateField = value;
                    this.RaisePropertyChanged("VendorState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorZip {
            get {
                return this.VendorZipField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorZipField, value) != true)) {
                    this.VendorZipField = value;
                    this.RaisePropertyChanged("VendorZip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindITRequestPOReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindITRequestPOReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITNNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ITRequestDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ITRequestMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderquantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderremarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceperUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequesttypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingcostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentListDescription {
            get {
                return this.EquipmentListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListDescriptionField, value) != true)) {
                    this.EquipmentListDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategoryDescription {
            get {
                return this.EquipmentSubCategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryDescriptionField, value) != true)) {
                    this.EquipmentSubCategoryDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentSubCategoryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Facility {
            get {
                return this.FacilityField;
            }
            set {
                if ((this.FacilityField.Equals(value) != true)) {
                    this.FacilityField = value;
                    this.RaisePropertyChanged("Facility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITNNo {
            get {
                return this.ITNNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITNNoField, value) != true)) {
                    this.ITNNoField = value;
                    this.RaisePropertyChanged("ITNNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITRNo {
            get {
                return this.ITRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITRNoField, value) != true)) {
                    this.ITRNoField = value;
                    this.RaisePropertyChanged("ITRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ITRequestDetailID {
            get {
                return this.ITRequestDetailIDField;
            }
            set {
                if ((this.ITRequestDetailIDField.Equals(value) != true)) {
                    this.ITRequestDetailIDField = value;
                    this.RaisePropertyChanged("ITRequestDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ITRequestMasterID {
            get {
                return this.ITRequestMasterIDField;
            }
            set {
                if ((this.ITRequestMasterIDField.Equals(value) != true)) {
                    this.ITRequestMasterIDField = value;
                    this.RaisePropertyChanged("ITRequestMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedinByField, value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Orderquantity {
            get {
                return this.OrderquantityField;
            }
            set {
                if ((this.OrderquantityField.Equals(value) != true)) {
                    this.OrderquantityField = value;
                    this.RaisePropertyChanged("Orderquantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Orderremarks {
            get {
                return this.OrderremarksField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderremarksField, value) != true)) {
                    this.OrderremarksField = value;
                    this.RaisePropertyChanged("Orderremarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PriceperUnit {
            get {
                return this.PriceperUnitField;
            }
            set {
                if ((this.PriceperUnitField.Equals(value) != true)) {
                    this.PriceperUnitField = value;
                    this.RaisePropertyChanged("PriceperUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestDate {
            get {
                return this.RequestDateField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestDateField, value) != true)) {
                    this.RequestDateField = value;
                    this.RaisePropertyChanged("RequestDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Requesttype {
            get {
                return this.RequesttypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RequesttypeField, value) != true)) {
                    this.RequesttypeField = value;
                    this.RaisePropertyChanged("Requesttype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shippingcost {
            get {
                return this.ShippingcostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingcostField, value) != true)) {
                    this.ShippingcostField = value;
                    this.RaisePropertyChanged("Shippingcost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRwdlsafterordergeneration", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetRwdlsafterordergeneration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITNNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RequestITMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> RequestITOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Facility {
            get {
                return this.FacilityField;
            }
            set {
                if ((this.FacilityField.Equals(value) != true)) {
                    this.FacilityField = value;
                    this.RaisePropertyChanged("Facility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITNNo {
            get {
                return this.ITNNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITNNoField, value) != true)) {
                    this.ITNNoField = value;
                    this.RaisePropertyChanged("ITNNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITRNo {
            get {
                return this.ITRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITRNoField, value) != true)) {
                    this.ITRNoField = value;
                    this.RaisePropertyChanged("ITRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RequestITMasterID {
            get {
                return this.RequestITMasterIDField;
            }
            set {
                if ((this.RequestITMasterIDField.Equals(value) != true)) {
                    this.RequestITMasterIDField = value;
                    this.RaisePropertyChanged("RequestITMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> RequestITOrderID {
            get {
                return this.RequestITOrderIDField;
            }
            set {
                if ((this.RequestITOrderIDField.Equals(value) != true)) {
                    this.RequestITOrderIDField = value;
                    this.RaisePropertyChanged("RequestITOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetServiceRequestPODetails", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetServiceRequestPODetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SRPONOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceRequestMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SRNo {
            get {
                return this.SRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SRNoField, value) != true)) {
                    this.SRNoField = value;
                    this.RaisePropertyChanged("SRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SRPONO {
            get {
                return this.SRPONOField;
            }
            set {
                if ((object.ReferenceEquals(this.SRPONOField, value) != true)) {
                    this.SRPONOField = value;
                    this.RaisePropertyChanged("SRPONO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceRequestMasterID {
            get {
                return this.ServiceRequestMasterIDField;
            }
            set {
                if ((this.ServiceRequestMasterIDField.Equals(value) != true)) {
                    this.ServiceRequestMasterIDField = value;
                    this.RaisePropertyChanged("ServiceRequestMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchServiceRequestPO", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchServiceRequestPO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SRPONOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceRequestMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SRNo {
            get {
                return this.SRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SRNoField, value) != true)) {
                    this.SRNoField = value;
                    this.RaisePropertyChanged("SRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SRPONO {
            get {
                return this.SRPONOField;
            }
            set {
                if ((object.ReferenceEquals(this.SRPONOField, value) != true)) {
                    this.SRPONOField = value;
                    this.RaisePropertyChanged("SRPONO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceRequestMasterID {
            get {
                return this.ServiceRequestMasterIDField;
            }
            set {
                if ((this.ServiceRequestMasterIDField.Equals(value) != true)) {
                    this.ServiceRequestMasterIDField = value;
                    this.RaisePropertyChanged("ServiceRequestMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetServiceRequestPOGenerateDetails", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetServiceRequestPOGenerateDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrdRemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] OrdercontentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SRPONOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ServiceRequestDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceRequestMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateDescription {
            get {
                return this.CorporateDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateDescriptionField, value) != true)) {
                    this.CorporateDescriptionField = value;
                    this.RaisePropertyChanged("CorporateDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrdRemarks {
            get {
                return this.OrdRemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdRemarksField, value) != true)) {
                    this.OrdRemarksField = value;
                    this.RaisePropertyChanged("OrdRemarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Ordercontent {
            get {
                return this.OrdercontentField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdercontentField, value) != true)) {
                    this.OrdercontentField = value;
                    this.RaisePropertyChanged("Ordercontent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SRNo {
            get {
                return this.SRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SRNoField, value) != true)) {
                    this.SRNoField = value;
                    this.RaisePropertyChanged("SRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SRPONO {
            get {
                return this.SRPONOField;
            }
            set {
                if ((object.ReferenceEquals(this.SRPONOField, value) != true)) {
                    this.SRPONOField = value;
                    this.RaisePropertyChanged("SRPONO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ServiceRequestDetailsID {
            get {
                return this.ServiceRequestDetailsIDField;
            }
            set {
                if ((this.ServiceRequestDetailsIDField.Equals(value) != true)) {
                    this.ServiceRequestDetailsIDField = value;
                    this.RaisePropertyChanged("ServiceRequestDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceRequestMasterID {
            get {
                return this.ServiceRequestMasterIDField;
            }
            set {
                if ((this.ServiceRequestMasterIDField.Equals(value) != true)) {
                    this.ServiceRequestMasterIDField = value;
                    this.RaisePropertyChanged("ServiceRequestMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSROrderContentPOReports", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetSROrderContentPOReports : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillADField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillZipCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaczipcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] OrderContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SPONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceRequestDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipADField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorADField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAD {
            get {
                return this.BillADField;
            }
            set {
                if ((object.ReferenceEquals(this.BillADField, value) != true)) {
                    this.BillADField = value;
                    this.RaisePropertyChanged("BillAD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAccount {
            get {
                return this.BillAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BillAccountField, value) != true)) {
                    this.BillAccountField = value;
                    this.RaisePropertyChanged("BillAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAddress1 {
            get {
                return this.BillAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.BillAddress1Field, value) != true)) {
                    this.BillAddress1Field = value;
                    this.RaisePropertyChanged("BillAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAddress2 {
            get {
                return this.BillAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.BillAddress2Field, value) != true)) {
                    this.BillAddress2Field = value;
                    this.RaisePropertyChanged("BillAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillCity {
            get {
                return this.BillCityField;
            }
            set {
                if ((object.ReferenceEquals(this.BillCityField, value) != true)) {
                    this.BillCityField = value;
                    this.RaisePropertyChanged("BillCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillFax {
            get {
                return this.BillFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.BillFaxField, value) != true)) {
                    this.BillFaxField = value;
                    this.RaisePropertyChanged("BillFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillPhone {
            get {
                return this.BillPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.BillPhoneField, value) != true)) {
                    this.BillPhoneField = value;
                    this.RaisePropertyChanged("BillPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillState {
            get {
                return this.BillStateField;
            }
            set {
                if ((object.ReferenceEquals(this.BillStateField, value) != true)) {
                    this.BillStateField = value;
                    this.RaisePropertyChanged("BillState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillZipCode {
            get {
                return this.BillZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillZipCodeField, value) != true)) {
                    this.BillZipCodeField = value;
                    this.RaisePropertyChanged("BillZipCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactEmail {
            get {
                return this.ContactEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactEmailField, value) != true)) {
                    this.ContactEmailField = value;
                    this.RaisePropertyChanged("ContactEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateDescription {
            get {
                return this.CorporateDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateDescriptionField, value) != true)) {
                    this.CorporateDescriptionField = value;
                    this.RaisePropertyChanged("CorporateDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacFax {
            get {
                return this.FacFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FacFaxField, value) != true)) {
                    this.FacFaxField = value;
                    this.RaisePropertyChanged("FacFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacPhone {
            get {
                return this.FacPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.FacPhoneField, value) != true)) {
                    this.FacPhoneField = value;
                    this.RaisePropertyChanged("FacPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityAddress1 {
            get {
                return this.FacilityAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityAddress1Field, value) != true)) {
                    this.FacilityAddress1Field = value;
                    this.RaisePropertyChanged("FacilityAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityAddress2 {
            get {
                return this.FacilityAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityAddress2Field, value) != true)) {
                    this.FacilityAddress2Field = value;
                    this.RaisePropertyChanged("FacilityAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityCity {
            get {
                return this.FacilityCityField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityCityField, value) != true)) {
                    this.FacilityCityField = value;
                    this.RaisePropertyChanged("FacilityCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Faczipcode {
            get {
                return this.FaczipcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FaczipcodeField, value) != true)) {
                    this.FaczipcodeField = value;
                    this.RaisePropertyChanged("Faczipcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromEmail {
            get {
                return this.FromEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.FromEmailField, value) != true)) {
                    this.FromEmailField = value;
                    this.RaisePropertyChanged("FromEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderBy {
            get {
                return this.OrderByField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderByField, value) != true)) {
                    this.OrderByField = value;
                    this.RaisePropertyChanged("OrderBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] OrderContent {
            get {
                return this.OrderContentField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderContentField, value) != true)) {
                    this.OrderContentField = value;
                    this.RaisePropertyChanged("OrderContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderDateField, value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PoEmail {
            get {
                return this.PoEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.PoEmailField, value) != true)) {
                    this.PoEmailField = value;
                    this.RaisePropertyChanged("PoEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SPONo {
            get {
                return this.SPONoField;
            }
            set {
                if ((object.ReferenceEquals(this.SPONoField, value) != true)) {
                    this.SPONoField = value;
                    this.RaisePropertyChanged("SPONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SRNo {
            get {
                return this.SRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SRNoField, value) != true)) {
                    this.SRNoField = value;
                    this.RaisePropertyChanged("SRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceRequestDetailsID {
            get {
                return this.ServiceRequestDetailsIDField;
            }
            set {
                if ((this.ServiceRequestDetailsIDField.Equals(value) != true)) {
                    this.ServiceRequestDetailsIDField = value;
                    this.RaisePropertyChanged("ServiceRequestDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAD {
            get {
                return this.ShipADField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipADField, value) != true)) {
                    this.ShipADField = value;
                    this.RaisePropertyChanged("ShipAD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAccount {
            get {
                return this.ShipAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAccountField, value) != true)) {
                    this.ShipAccountField = value;
                    this.RaisePropertyChanged("ShipAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToEmail {
            get {
                return this.ToEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ToEmailField, value) != true)) {
                    this.ToEmailField = value;
                    this.RaisePropertyChanged("ToEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserEmail {
            get {
                return this.UserEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.UserEmailField, value) != true)) {
                    this.UserEmailField = value;
                    this.RaisePropertyChanged("UserEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPhoneNo {
            get {
                return this.UserPhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPhoneNoField, value) != true)) {
                    this.UserPhoneNoField = value;
                    this.RaisePropertyChanged("UserPhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAD {
            get {
                return this.VendorADField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorADField, value) != true)) {
                    this.VendorADField = value;
                    this.RaisePropertyChanged("VendorAD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress {
            get {
                return this.VendorAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddressField, value) != true)) {
                    this.VendorAddressField = value;
                    this.RaisePropertyChanged("VendorAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress2 {
            get {
                return this.VendorAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddress2Field, value) != true)) {
                    this.VendorAddress2Field = value;
                    this.RaisePropertyChanged("VendorAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCity {
            get {
                return this.VendorCityField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCityField, value) != true)) {
                    this.VendorCityField = value;
                    this.RaisePropertyChanged("VendorCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorFax {
            get {
                return this.VendorFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorFaxField, value) != true)) {
                    this.VendorFaxField = value;
                    this.RaisePropertyChanged("VendorFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPhone {
            get {
                return this.VendorPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPhoneField, value) != true)) {
                    this.VendorPhoneField = value;
                    this.RaisePropertyChanged("VendorPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorState {
            get {
                return this.VendorStateField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorStateField, value) != true)) {
                    this.VendorStateField = value;
                    this.RaisePropertyChanged("VendorState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorZip {
            get {
                return this.VendorZipField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorZipField, value) != true)) {
                    this.VendorZipField = value;
                    this.RaisePropertyChanged("VendorZip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetServiceRequestPoReportDetails", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetServiceRequestPoReportDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DetailsCreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipSubcategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipcategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoRemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SPONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ServiceRequestDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceRequestMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DetailsCreatedOn {
            get {
                return this.DetailsCreatedOnField;
            }
            set {
                if ((this.DetailsCreatedOnField.Equals(value) != true)) {
                    this.DetailsCreatedOnField = value;
                    this.RaisePropertyChanged("DetailsCreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquList {
            get {
                return this.EquListField;
            }
            set {
                if ((object.ReferenceEquals(this.EquListField, value) != true)) {
                    this.EquListField = value;
                    this.RaisePropertyChanged("EquList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipSubcategory {
            get {
                return this.EquipSubcategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipSubcategoryField, value) != true)) {
                    this.EquipSubcategoryField = value;
                    this.RaisePropertyChanged("EquipSubcategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Equipcategory {
            get {
                return this.EquipcategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipcategoryField, value) != true)) {
                    this.EquipcategoryField = value;
                    this.RaisePropertyChanged("Equipcategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedinByField, value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PoRemarks {
            get {
                return this.PoRemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.PoRemarksField, value) != true)) {
                    this.PoRemarksField = value;
                    this.RaisePropertyChanged("PoRemarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SPONo {
            get {
                return this.SPONoField;
            }
            set {
                if ((object.ReferenceEquals(this.SPONoField, value) != true)) {
                    this.SPONoField = value;
                    this.RaisePropertyChanged("SPONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SRNo {
            get {
                return this.SRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SRNoField, value) != true)) {
                    this.SRNoField = value;
                    this.RaisePropertyChanged("SRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ServiceRequestDetailsID {
            get {
                return this.ServiceRequestDetailsIDField;
            }
            set {
                if ((this.ServiceRequestDetailsIDField.Equals(value) != true)) {
                    this.ServiceRequestDetailsIDField = value;
                    this.RaisePropertyChanged("ServiceRequestDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceRequestMasterID {
            get {
                return this.ServiceRequestMasterIDField;
            }
            set {
                if ((this.ServiceRequestMasterIDField.Equals(value) != true)) {
                    this.ServiceRequestMasterIDField = value;
                    this.RaisePropertyChanged("ServiceRequestMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceTypeField, value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetServiceRequestActionByMasterID", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetServiceRequestActionByMasterID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceRequestAOIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceRequestDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceRequestAOID {
            get {
                return this.ServiceRequestAOIDField;
            }
            set {
                if ((this.ServiceRequestAOIDField.Equals(value) != true)) {
                    this.ServiceRequestAOIDField = value;
                    this.RaisePropertyChanged("ServiceRequestAOID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceRequestDetailsID {
            get {
                return this.ServiceRequestDetailsIDField;
            }
            set {
                if ((this.ServiceRequestDetailsIDField.Equals(value) != true)) {
                    this.ServiceRequestDetailsIDField = value;
                    this.RaisePropertyChanged("ServiceRequestDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchServiceRequestPurchaseOrder", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchServiceRequestPurchaseOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CURRENTAPPOVESTAGEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LASTACTIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NEXTAPPOVESTAGEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SRPONOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceRequestMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TotalAPPROVESTAGEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> USERSTAGEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int isEditField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CURRENTAPPOVESTAGE {
            get {
                return this.CURRENTAPPOVESTAGEField;
            }
            set {
                if ((this.CURRENTAPPOVESTAGEField.Equals(value) != true)) {
                    this.CURRENTAPPOVESTAGEField = value;
                    this.RaisePropertyChanged("CURRENTAPPOVESTAGE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LASTACTION {
            get {
                return this.LASTACTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.LASTACTIONField, value) != true)) {
                    this.LASTACTIONField = value;
                    this.RaisePropertyChanged("LASTACTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NEXTAPPOVESTAGE {
            get {
                return this.NEXTAPPOVESTAGEField;
            }
            set {
                if ((this.NEXTAPPOVESTAGEField.Equals(value) != true)) {
                    this.NEXTAPPOVESTAGEField = value;
                    this.RaisePropertyChanged("NEXTAPPOVESTAGE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SRNo {
            get {
                return this.SRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SRNoField, value) != true)) {
                    this.SRNoField = value;
                    this.RaisePropertyChanged("SRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SRPONO {
            get {
                return this.SRPONOField;
            }
            set {
                if ((object.ReferenceEquals(this.SRPONOField, value) != true)) {
                    this.SRPONOField = value;
                    this.RaisePropertyChanged("SRPONO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceRequestMasterID {
            get {
                return this.ServiceRequestMasterIDField;
            }
            set {
                if ((this.ServiceRequestMasterIDField.Equals(value) != true)) {
                    this.ServiceRequestMasterIDField = value;
                    this.RaisePropertyChanged("ServiceRequestMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TotalAPPROVESTAGE {
            get {
                return this.TotalAPPROVESTAGEField;
            }
            set {
                if ((this.TotalAPPROVESTAGEField.Equals(value) != true)) {
                    this.TotalAPPROVESTAGEField = value;
                    this.RaisePropertyChanged("TotalAPPROVESTAGE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> USERSTAGE {
            get {
                return this.USERSTAGEField;
            }
            set {
                if ((this.USERSTAGEField.Equals(value) != true)) {
                    this.USERSTAGEField = value;
                    this.RaisePropertyChanged("USERSTAGE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int isEdit {
            get {
                return this.isEditField;
            }
            set {
                if ((this.isEditField.Equals(value) != true)) {
                    this.isEditField = value;
                    this.RaisePropertyChanged("isEdit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchServiceRequestPurchaseOrderDetails", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchServiceRequestPurchaseOrderDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ServiceRequestDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ServiceRequestMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ServiceRequestDetailsID {
            get {
                return this.ServiceRequestDetailsIDField;
            }
            set {
                if ((this.ServiceRequestDetailsIDField.Equals(value) != true)) {
                    this.ServiceRequestDetailsIDField = value;
                    this.RaisePropertyChanged("ServiceRequestDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ServiceRequestMasterID {
            get {
                return this.ServiceRequestMasterIDField;
            }
            set {
                if ((this.ServiceRequestMasterIDField.Equals(value) != true)) {
                    this.ServiceRequestMasterIDField = value;
                    this.RaisePropertyChanged("ServiceRequestMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindMultiRolesPermission", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindMultiRolesPermission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserRoleIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleField, value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserRoleID {
            get {
                return this.UserRoleIDField;
            }
            set {
                if ((this.UserRoleIDField.Equals(value) != true)) {
                    this.UserRoleIDField = value;
                    this.RaisePropertyChanged("UserRoleID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMPRMasterOrder", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetMPRMasterOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MPRMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] OrderContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPONo {
            get {
                return this.MPONoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPONoField, value) != true)) {
                    this.MPONoField = value;
                    this.RaisePropertyChanged("MPONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MPRMasterID {
            get {
                return this.MPRMasterIDField;
            }
            set {
                if ((this.MPRMasterIDField.Equals(value) != true)) {
                    this.MPRMasterIDField = value;
                    this.RaisePropertyChanged("MPRMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPRNo {
            get {
                return this.MPRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPRNoField, value) != true)) {
                    this.MPRNoField = value;
                    this.RaisePropertyChanged("MPRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] OrderContent {
            get {
                return this.OrderContentField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderContentField, value) != true)) {
                    this.OrderContentField = value;
                    this.RaisePropertyChanged("OrderContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchMPRMasterOrder", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchMPRMasterOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ISSEARCHLOADField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MPRMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAccount {
            get {
                return this.BillAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BillAccountField, value) != true)) {
                    this.BillAccountField = value;
                    this.RaisePropertyChanged("BillAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ISSEARCHLOAD {
            get {
                return this.ISSEARCHLOADField;
            }
            set {
                if ((this.ISSEARCHLOADField.Equals(value) != true)) {
                    this.ISSEARCHLOADField = value;
                    this.RaisePropertyChanged("ISSEARCHLOAD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPONo {
            get {
                return this.MPONoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPONoField, value) != true)) {
                    this.MPONoField = value;
                    this.RaisePropertyChanged("MPONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MPRMasterID {
            get {
                return this.MPRMasterIDField;
            }
            set {
                if ((this.MPRMasterIDField.Equals(value) != true)) {
                    this.MPRMasterIDField = value;
                    this.RaisePropertyChanged("MPRMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPRNo {
            get {
                return this.MPRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPRNoField, value) != true)) {
                    this.MPRNoField = value;
                    this.RaisePropertyChanged("MPRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAccount {
            get {
                return this.ShipAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAccountField, value) != true)) {
                    this.ShipAccountField = value;
                    this.RaisePropertyChanged("ShipAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMPOrderContentPO", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetMPOrderContentPO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillADField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillZipCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaczipcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] OrderContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderPriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PricePerUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipADField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorADField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAD {
            get {
                return this.BillADField;
            }
            set {
                if ((object.ReferenceEquals(this.BillADField, value) != true)) {
                    this.BillADField = value;
                    this.RaisePropertyChanged("BillAD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAccount {
            get {
                return this.BillAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BillAccountField, value) != true)) {
                    this.BillAccountField = value;
                    this.RaisePropertyChanged("BillAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAddress1 {
            get {
                return this.BillAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.BillAddress1Field, value) != true)) {
                    this.BillAddress1Field = value;
                    this.RaisePropertyChanged("BillAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAddress2 {
            get {
                return this.BillAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.BillAddress2Field, value) != true)) {
                    this.BillAddress2Field = value;
                    this.RaisePropertyChanged("BillAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillCity {
            get {
                return this.BillCityField;
            }
            set {
                if ((object.ReferenceEquals(this.BillCityField, value) != true)) {
                    this.BillCityField = value;
                    this.RaisePropertyChanged("BillCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillFax {
            get {
                return this.BillFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.BillFaxField, value) != true)) {
                    this.BillFaxField = value;
                    this.RaisePropertyChanged("BillFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillPhone {
            get {
                return this.BillPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.BillPhoneField, value) != true)) {
                    this.BillPhoneField = value;
                    this.RaisePropertyChanged("BillPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillState {
            get {
                return this.BillStateField;
            }
            set {
                if ((object.ReferenceEquals(this.BillStateField, value) != true)) {
                    this.BillStateField = value;
                    this.RaisePropertyChanged("BillState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillZipCode {
            get {
                return this.BillZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillZipCodeField, value) != true)) {
                    this.BillZipCodeField = value;
                    this.RaisePropertyChanged("BillZipCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateDescription {
            get {
                return this.CorporateDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateDescriptionField, value) != true)) {
                    this.CorporateDescriptionField = value;
                    this.RaisePropertyChanged("CorporateDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacFax {
            get {
                return this.FacFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FacFaxField, value) != true)) {
                    this.FacFaxField = value;
                    this.RaisePropertyChanged("FacFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacPhone {
            get {
                return this.FacPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.FacPhoneField, value) != true)) {
                    this.FacPhoneField = value;
                    this.RaisePropertyChanged("FacPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityAddress1 {
            get {
                return this.FacilityAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityAddress1Field, value) != true)) {
                    this.FacilityAddress1Field = value;
                    this.RaisePropertyChanged("FacilityAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityAddress2 {
            get {
                return this.FacilityAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityAddress2Field, value) != true)) {
                    this.FacilityAddress2Field = value;
                    this.RaisePropertyChanged("FacilityAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityCity {
            get {
                return this.FacilityCityField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityCityField, value) != true)) {
                    this.FacilityCityField = value;
                    this.RaisePropertyChanged("FacilityCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Faczipcode {
            get {
                return this.FaczipcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FaczipcodeField, value) != true)) {
                    this.FaczipcodeField = value;
                    this.RaisePropertyChanged("Faczipcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromEmail {
            get {
                return this.FromEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.FromEmailField, value) != true)) {
                    this.FromEmailField = value;
                    this.RaisePropertyChanged("FromEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemIDField, value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPONo {
            get {
                return this.MPONoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPONoField, value) != true)) {
                    this.MPONoField = value;
                    this.RaisePropertyChanged("MPONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPRNo {
            get {
                return this.MPRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPRNoField, value) != true)) {
                    this.MPRNoField = value;
                    this.RaisePropertyChanged("MPRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderBy {
            get {
                return this.OrderByField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderByField, value) != true)) {
                    this.OrderByField = value;
                    this.RaisePropertyChanged("OrderBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] OrderContent {
            get {
                return this.OrderContentField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderContentField, value) != true)) {
                    this.OrderContentField = value;
                    this.RaisePropertyChanged("OrderContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderDateField, value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderPriority {
            get {
                return this.OrderPriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderPriorityField, value) != true)) {
                    this.OrderPriorityField = value;
                    this.RaisePropertyChanged("OrderPriority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderQuantity {
            get {
                return this.OrderQuantityField;
            }
            set {
                if ((this.OrderQuantityField.Equals(value) != true)) {
                    this.OrderQuantityField = value;
                    this.RaisePropertyChanged("OrderQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PricePerUnit {
            get {
                return this.PricePerUnitField;
            }
            set {
                if ((this.PricePerUnitField.Equals(value) != true)) {
                    this.PricePerUnitField = value;
                    this.RaisePropertyChanged("PricePerUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAD {
            get {
                return this.ShipADField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipADField, value) != true)) {
                    this.ShipADField = value;
                    this.RaisePropertyChanged("ShipAD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAccount {
            get {
                return this.ShipAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAccountField, value) != true)) {
                    this.ShipAccountField = value;
                    this.RaisePropertyChanged("ShipAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToEmail {
            get {
                return this.ToEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ToEmailField, value) != true)) {
                    this.ToEmailField = value;
                    this.RaisePropertyChanged("ToEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserEmail {
            get {
                return this.UserEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.UserEmailField, value) != true)) {
                    this.UserEmailField = value;
                    this.RaisePropertyChanged("UserEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPhoneNo {
            get {
                return this.UserPhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPhoneNoField, value) != true)) {
                    this.UserPhoneNoField = value;
                    this.RaisePropertyChanged("UserPhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAD {
            get {
                return this.VendorADField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorADField, value) != true)) {
                    this.VendorADField = value;
                    this.RaisePropertyChanged("VendorAD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress {
            get {
                return this.VendorAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddressField, value) != true)) {
                    this.VendorAddressField = value;
                    this.RaisePropertyChanged("VendorAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress2 {
            get {
                return this.VendorAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddress2Field, value) != true)) {
                    this.VendorAddress2Field = value;
                    this.RaisePropertyChanged("VendorAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCity {
            get {
                return this.VendorCityField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCityField, value) != true)) {
                    this.VendorCityField = value;
                    this.RaisePropertyChanged("VendorCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorFax {
            get {
                return this.VendorFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorFaxField, value) != true)) {
                    this.VendorFaxField = value;
                    this.RaisePropertyChanged("VendorFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPhone {
            get {
                return this.VendorPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPhoneField, value) != true)) {
                    this.VendorPhoneField = value;
                    this.RaisePropertyChanged("VendorPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorState {
            get {
                return this.VendorStateField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorStateField, value) != true)) {
                    this.VendorStateField = value;
                    this.RaisePropertyChanged("VendorState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorZip {
            get {
                return this.VendorZipField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorZipField, value) != true)) {
                    this.VendorZipField = value;
                    this.RaisePropertyChanged("VendorZip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindMachinePOReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindMachinePOReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentCatDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HoursonmachineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PORemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PricePerUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentCatDescription {
            get {
                return this.EquipmentCatDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentCatDescriptionField, value) != true)) {
                    this.EquipmentCatDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentCatDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentListDescription {
            get {
                return this.EquipmentListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListDescriptionField, value) != true)) {
                    this.EquipmentListDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategoryDescription {
            get {
                return this.EquipmentSubCategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryDescriptionField, value) != true)) {
                    this.EquipmentSubCategoryDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentSubCategoryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hoursonmachine {
            get {
                return this.HoursonmachineField;
            }
            set {
                if ((object.ReferenceEquals(this.HoursonmachineField, value) != true)) {
                    this.HoursonmachineField = value;
                    this.RaisePropertyChanged("Hoursonmachine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemIDField, value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedinByField, value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPONo {
            get {
                return this.MPONoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPONoField, value) != true)) {
                    this.MPONoField = value;
                    this.RaisePropertyChanged("MPONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPRNo {
            get {
                return this.MPRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPRNoField, value) != true)) {
                    this.MPRNoField = value;
                    this.RaisePropertyChanged("MPRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderQuantity {
            get {
                return this.OrderQuantityField;
            }
            set {
                if ((this.OrderQuantityField.Equals(value) != true)) {
                    this.OrderQuantityField = value;
                    this.RaisePropertyChanged("OrderQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PORemarks {
            get {
                return this.PORemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.PORemarksField, value) != true)) {
                    this.PORemarksField = value;
                    this.RaisePropertyChanged("PORemarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PricePerUnit {
            get {
                return this.PricePerUnitField;
            }
            set {
                if ((this.PricePerUnitField.Equals(value) != true)) {
                    this.PricePerUnitField = value;
                    this.RaisePropertyChanged("PricePerUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMachinePartsOrderMPONo", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetMachinePartsOrderMPONo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MPRMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] OrderContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPONo {
            get {
                return this.MPONoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPONoField, value) != true)) {
                    this.MPONoField = value;
                    this.RaisePropertyChanged("MPONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MPRMasterID {
            get {
                return this.MPRMasterIDField;
            }
            set {
                if ((this.MPRMasterIDField.Equals(value) != true)) {
                    this.MPRMasterIDField = value;
                    this.RaisePropertyChanged("MPRMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPRNo {
            get {
                return this.MPRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPRNoField, value) != true)) {
                    this.MPRNoField = value;
                    this.RaisePropertyChanged("MPRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] OrderContent {
            get {
                return this.OrderContentField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderContentField, value) != true)) {
                    this.OrderContentField = value;
                    this.RaisePropertyChanged("OrderContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchCapitalPO", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchCapitalPO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalItemMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ISSEARCHLOADField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAccount {
            get {
                return this.BillAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BillAccountField, value) != true)) {
                    this.BillAccountField = value;
                    this.RaisePropertyChanged("BillAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CRNo {
            get {
                return this.CRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CRNoField, value) != true)) {
                    this.CRNoField = value;
                    this.RaisePropertyChanged("CRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CRONo {
            get {
                return this.CRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.CRONoField, value) != true)) {
                    this.CRONoField = value;
                    this.RaisePropertyChanged("CRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalItemMasterID {
            get {
                return this.CapitalItemMasterIDField;
            }
            set {
                if ((this.CapitalItemMasterIDField.Equals(value) != true)) {
                    this.CapitalItemMasterIDField = value;
                    this.RaisePropertyChanged("CapitalItemMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ISSEARCHLOAD {
            get {
                return this.ISSEARCHLOADField;
            }
            set {
                if ((this.ISSEARCHLOADField.Equals(value) != true)) {
                    this.ISSEARCHLOADField = value;
                    this.RaisePropertyChanged("ISSEARCHLOAD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAccount {
            get {
                return this.ShipAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAccountField, value) != true)) {
                    this.ShipAccountField = value;
                    this.RaisePropertyChanged("ShipAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCROrderContentPO", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetCROrderContentPO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillADField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillZipCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalItemMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipmentListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipmentSubCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaczipcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] OrderContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> OrderQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PricePerUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipADField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorADField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAD {
            get {
                return this.BillADField;
            }
            set {
                if ((object.ReferenceEquals(this.BillADField, value) != true)) {
                    this.BillADField = value;
                    this.RaisePropertyChanged("BillAD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAccount {
            get {
                return this.BillAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BillAccountField, value) != true)) {
                    this.BillAccountField = value;
                    this.RaisePropertyChanged("BillAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAddress1 {
            get {
                return this.BillAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.BillAddress1Field, value) != true)) {
                    this.BillAddress1Field = value;
                    this.RaisePropertyChanged("BillAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAddress2 {
            get {
                return this.BillAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.BillAddress2Field, value) != true)) {
                    this.BillAddress2Field = value;
                    this.RaisePropertyChanged("BillAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillCity {
            get {
                return this.BillCityField;
            }
            set {
                if ((object.ReferenceEquals(this.BillCityField, value) != true)) {
                    this.BillCityField = value;
                    this.RaisePropertyChanged("BillCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillFax {
            get {
                return this.BillFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.BillFaxField, value) != true)) {
                    this.BillFaxField = value;
                    this.RaisePropertyChanged("BillFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillPhone {
            get {
                return this.BillPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.BillPhoneField, value) != true)) {
                    this.BillPhoneField = value;
                    this.RaisePropertyChanged("BillPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillState {
            get {
                return this.BillStateField;
            }
            set {
                if ((object.ReferenceEquals(this.BillStateField, value) != true)) {
                    this.BillStateField = value;
                    this.RaisePropertyChanged("BillState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillZipCode {
            get {
                return this.BillZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillZipCodeField, value) != true)) {
                    this.BillZipCodeField = value;
                    this.RaisePropertyChanged("BillZipCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CRNo {
            get {
                return this.CRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CRNoField, value) != true)) {
                    this.CRNoField = value;
                    this.RaisePropertyChanged("CRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CRONo {
            get {
                return this.CRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.CRONoField, value) != true)) {
                    this.CRONoField = value;
                    this.RaisePropertyChanged("CRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalItemMasterID {
            get {
                return this.CapitalItemMasterIDField;
            }
            set {
                if ((this.CapitalItemMasterIDField.Equals(value) != true)) {
                    this.CapitalItemMasterIDField = value;
                    this.RaisePropertyChanged("CapitalItemMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateDescription {
            get {
                return this.CorporateDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateDescriptionField, value) != true)) {
                    this.CorporateDescriptionField = value;
                    this.RaisePropertyChanged("CorporateDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipmentList {
            get {
                return this.EquipmentListField;
            }
            set {
                if ((this.EquipmentListField.Equals(value) != true)) {
                    this.EquipmentListField = value;
                    this.RaisePropertyChanged("EquipmentList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentListDescription {
            get {
                return this.EquipmentListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListDescriptionField, value) != true)) {
                    this.EquipmentListDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipmentSubCategory {
            get {
                return this.EquipmentSubCategoryField;
            }
            set {
                if ((this.EquipmentSubCategoryField.Equals(value) != true)) {
                    this.EquipmentSubCategoryField = value;
                    this.RaisePropertyChanged("EquipmentSubCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategoryDescription {
            get {
                return this.EquipmentSubCategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryDescriptionField, value) != true)) {
                    this.EquipmentSubCategoryDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentSubCategoryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacFax {
            get {
                return this.FacFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FacFaxField, value) != true)) {
                    this.FacFaxField = value;
                    this.RaisePropertyChanged("FacFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacPhone {
            get {
                return this.FacPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.FacPhoneField, value) != true)) {
                    this.FacPhoneField = value;
                    this.RaisePropertyChanged("FacPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Faczipcode {
            get {
                return this.FaczipcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FaczipcodeField, value) != true)) {
                    this.FaczipcodeField = value;
                    this.RaisePropertyChanged("Faczipcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromEmail {
            get {
                return this.FromEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.FromEmailField, value) != true)) {
                    this.FromEmailField = value;
                    this.RaisePropertyChanged("FromEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderBy {
            get {
                return this.OrderByField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderByField, value) != true)) {
                    this.OrderByField = value;
                    this.RaisePropertyChanged("OrderBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] OrderContent {
            get {
                return this.OrderContentField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderContentField, value) != true)) {
                    this.OrderContentField = value;
                    this.RaisePropertyChanged("OrderContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderDateField, value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> OrderQuantity {
            get {
                return this.OrderQuantityField;
            }
            set {
                if ((this.OrderQuantityField.Equals(value) != true)) {
                    this.OrderQuantityField = value;
                    this.RaisePropertyChanged("OrderQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PoEmail {
            get {
                return this.PoEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.PoEmailField, value) != true)) {
                    this.PoEmailField = value;
                    this.RaisePropertyChanged("PoEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PricePerUnit {
            get {
                return this.PricePerUnitField;
            }
            set {
                if ((this.PricePerUnitField.Equals(value) != true)) {
                    this.PricePerUnitField = value;
                    this.RaisePropertyChanged("PricePerUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestType {
            get {
                return this.RequestTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestTypeField, value) != true)) {
                    this.RequestTypeField = value;
                    this.RaisePropertyChanged("RequestType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAD {
            get {
                return this.ShipADField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipADField, value) != true)) {
                    this.ShipADField = value;
                    this.RaisePropertyChanged("ShipAD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAccount {
            get {
                return this.ShipAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAccountField, value) != true)) {
                    this.ShipAccountField = value;
                    this.RaisePropertyChanged("ShipAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToEmail {
            get {
                return this.ToEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ToEmailField, value) != true)) {
                    this.ToEmailField = value;
                    this.RaisePropertyChanged("ToEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserEmail {
            get {
                return this.UserEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.UserEmailField, value) != true)) {
                    this.UserEmailField = value;
                    this.RaisePropertyChanged("UserEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPhoneNo {
            get {
                return this.UserPhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPhoneNoField, value) != true)) {
                    this.UserPhoneNoField = value;
                    this.RaisePropertyChanged("UserPhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAD {
            get {
                return this.VendorADField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorADField, value) != true)) {
                    this.VendorADField = value;
                    this.RaisePropertyChanged("VendorAD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress {
            get {
                return this.VendorAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddressField, value) != true)) {
                    this.VendorAddressField = value;
                    this.RaisePropertyChanged("VendorAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress2 {
            get {
                return this.VendorAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddress2Field, value) != true)) {
                    this.VendorAddress2Field = value;
                    this.RaisePropertyChanged("VendorAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCity {
            get {
                return this.VendorCityField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCityField, value) != true)) {
                    this.VendorCityField = value;
                    this.RaisePropertyChanged("VendorCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorFax {
            get {
                return this.VendorFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorFaxField, value) != true)) {
                    this.VendorFaxField = value;
                    this.RaisePropertyChanged("VendorFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPhone {
            get {
                return this.VendorPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPhoneField, value) != true)) {
                    this.VendorPhoneField = value;
                    this.RaisePropertyChanged("VendorPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorState {
            get {
                return this.VendorStateField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorStateField, value) != true)) {
                    this.VendorStateField = value;
                    this.RaisePropertyChanged("VendorState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorZip {
            get {
                return this.VendorZipField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorZipField, value) != true)) {
                    this.VendorZipField = value;
                    this.RaisePropertyChanged("VendorZip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCapitalPOReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetCapitalPOReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CapitalItemDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CapitalItemMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> OrderquantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceperUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RequestDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequesttypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CRNo {
            get {
                return this.CRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CRNoField, value) != true)) {
                    this.CRNoField = value;
                    this.RaisePropertyChanged("CRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CRONo {
            get {
                return this.CRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.CRONoField, value) != true)) {
                    this.CRONoField = value;
                    this.RaisePropertyChanged("CRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CapitalItemDetailsID {
            get {
                return this.CapitalItemDetailsIDField;
            }
            set {
                if ((this.CapitalItemDetailsIDField.Equals(value) != true)) {
                    this.CapitalItemDetailsIDField = value;
                    this.RaisePropertyChanged("CapitalItemDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CapitalItemMasterID {
            get {
                return this.CapitalItemMasterIDField;
            }
            set {
                if ((this.CapitalItemMasterIDField.Equals(value) != true)) {
                    this.CapitalItemMasterIDField = value;
                    this.RaisePropertyChanged("CapitalItemMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentListDescription {
            get {
                return this.EquipmentListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListDescriptionField, value) != true)) {
                    this.EquipmentListDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategoryDescription {
            get {
                return this.EquipmentSubCategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryDescriptionField, value) != true)) {
                    this.EquipmentSubCategoryDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentSubCategoryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedinByField, value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Orderquantity {
            get {
                return this.OrderquantityField;
            }
            set {
                if ((this.OrderquantityField.Equals(value) != true)) {
                    this.OrderquantityField = value;
                    this.RaisePropertyChanged("Orderquantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PriceperUnit {
            get {
                return this.PriceperUnitField;
            }
            set {
                if ((this.PriceperUnitField.Equals(value) != true)) {
                    this.PriceperUnitField = value;
                    this.RaisePropertyChanged("PriceperUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RequestDate {
            get {
                return this.RequestDateField;
            }
            set {
                if ((this.RequestDateField.Equals(value) != true)) {
                    this.RequestDateField = value;
                    this.RaisePropertyChanged("RequestDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Requesttype {
            get {
                return this.RequesttypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RequesttypeField, value) != true)) {
                    this.RequesttypeField = value;
                    this.RaisePropertyChanged("Requesttype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCapitalOrderCPONo", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetCapitalOrderCPONo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CPONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalItemMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CapitalOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CPONo {
            get {
                return this.CPONoField;
            }
            set {
                if ((object.ReferenceEquals(this.CPONoField, value) != true)) {
                    this.CPONoField = value;
                    this.RaisePropertyChanged("CPONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CRNo {
            get {
                return this.CRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CRNoField, value) != true)) {
                    this.CRNoField = value;
                    this.RaisePropertyChanged("CRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalItemMasterID {
            get {
                return this.CapitalItemMasterIDField;
            }
            set {
                if ((this.CapitalItemMasterIDField.Equals(value) != true)) {
                    this.CapitalItemMasterIDField = value;
                    this.RaisePropertyChanged("CapitalItemMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CapitalOrderID {
            get {
                return this.CapitalOrderIDField;
            }
            set {
                if ((this.CapitalOrderIDField.Equals(value) != true)) {
                    this.CapitalOrderIDField = value;
                    this.RaisePropertyChanged("CapitalOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchMachinePartsReceive", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchMachinePartsReceive : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MPRMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MachinePartsReceivingMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MachinePartsRequestOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPONo {
            get {
                return this.MPONoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPONoField, value) != true)) {
                    this.MPONoField = value;
                    this.RaisePropertyChanged("MPONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MPRMasterID {
            get {
                return this.MPRMasterIDField;
            }
            set {
                if ((this.MPRMasterIDField.Equals(value) != true)) {
                    this.MPRMasterIDField = value;
                    this.RaisePropertyChanged("MPRMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPRONo {
            get {
                return this.MPRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPRONoField, value) != true)) {
                    this.MPRONoField = value;
                    this.RaisePropertyChanged("MPRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MachinePartsReceivingMasterID {
            get {
                return this.MachinePartsReceivingMasterIDField;
            }
            set {
                if ((this.MachinePartsReceivingMasterIDField.Equals(value) != true)) {
                    this.MachinePartsReceivingMasterIDField = value;
                    this.RaisePropertyChanged("MachinePartsReceivingMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MachinePartsRequestOrderID {
            get {
                return this.MachinePartsRequestOrderIDField;
            }
            set {
                if ((this.MachinePartsRequestOrderIDField.Equals(value) != true)) {
                    this.MachinePartsRequestOrderIDField = value;
                    this.RaisePropertyChanged("MachinePartsRequestOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GETMPOValues", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GETMPOValues : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BalanceQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MPRMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MachinePartsReceivingDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PackingSlipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PricePerQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReceivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BalanceQty {
            get {
                return this.BalanceQtyField;
            }
            set {
                if ((this.BalanceQtyField.Equals(value) != true)) {
                    this.BalanceQtyField = value;
                    this.RaisePropertyChanged("BalanceQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemIDField, value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MPRMasterID {
            get {
                return this.MPRMasterIDField;
            }
            set {
                if ((this.MPRMasterIDField.Equals(value) != true)) {
                    this.MPRMasterIDField = value;
                    this.RaisePropertyChanged("MPRMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MachinePartsReceivingDetailsID {
            get {
                return this.MachinePartsReceivingDetailsIDField;
            }
            set {
                if ((this.MachinePartsReceivingDetailsIDField.Equals(value) != true)) {
                    this.MachinePartsReceivingDetailsIDField = value;
                    this.RaisePropertyChanged("MachinePartsReceivingDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PackingSlipDate {
            get {
                return this.PackingSlipDateField;
            }
            set {
                if ((this.PackingSlipDateField.Equals(value) != true)) {
                    this.PackingSlipDateField = value;
                    this.RaisePropertyChanged("PackingSlipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipNo {
            get {
                return this.PackingSlipNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipNoField, value) != true)) {
                    this.PackingSlipNoField = value;
                    this.RaisePropertyChanged("PackingSlipNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PricePerQty {
            get {
                return this.PricePerQtyField;
            }
            set {
                if ((this.PricePerQtyField.Equals(value) != true)) {
                    this.PricePerQtyField = value;
                    this.RaisePropertyChanged("PricePerQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReceivedQty {
            get {
                return this.ReceivedQtyField;
            }
            set {
                if ((this.ReceivedQtyField.Equals(value) != true)) {
                    this.ReceivedQtyField = value;
                    this.RaisePropertyChanged("ReceivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GETMPROValues", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GETMPROValues : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BalanceQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MPRMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MachinePartsReceivingDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MachinePartsReceivingMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OthersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PackingSlipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PricePerQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReceivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivingActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BalanceQty {
            get {
                return this.BalanceQtyField;
            }
            set {
                if ((this.BalanceQtyField.Equals(value) != true)) {
                    this.BalanceQtyField = value;
                    this.RaisePropertyChanged("BalanceQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNo {
            get {
                return this.InvoiceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNoField, value) != true)) {
                    this.InvoiceNoField = value;
                    this.RaisePropertyChanged("InvoiceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemIDField, value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MPRMasterID {
            get {
                return this.MPRMasterIDField;
            }
            set {
                if ((this.MPRMasterIDField.Equals(value) != true)) {
                    this.MPRMasterIDField = value;
                    this.RaisePropertyChanged("MPRMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPRONo {
            get {
                return this.MPRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPRONoField, value) != true)) {
                    this.MPRONoField = value;
                    this.RaisePropertyChanged("MPRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MachinePartsReceivingDetailsID {
            get {
                return this.MachinePartsReceivingDetailsIDField;
            }
            set {
                if ((this.MachinePartsReceivingDetailsIDField.Equals(value) != true)) {
                    this.MachinePartsReceivingDetailsIDField = value;
                    this.RaisePropertyChanged("MachinePartsReceivingDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MachinePartsReceivingMasterID {
            get {
                return this.MachinePartsReceivingMasterIDField;
            }
            set {
                if ((this.MachinePartsReceivingMasterIDField.Equals(value) != true)) {
                    this.MachinePartsReceivingMasterIDField = value;
                    this.RaisePropertyChanged("MachinePartsReceivingMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Others {
            get {
                return this.OthersField;
            }
            set {
                if ((object.ReferenceEquals(this.OthersField, value) != true)) {
                    this.OthersField = value;
                    this.RaisePropertyChanged("Others");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PackingSlipDate {
            get {
                return this.PackingSlipDateField;
            }
            set {
                if ((this.PackingSlipDateField.Equals(value) != true)) {
                    this.PackingSlipDateField = value;
                    this.RaisePropertyChanged("PackingSlipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipNo {
            get {
                return this.PackingSlipNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipNoField, value) != true)) {
                    this.PackingSlipNoField = value;
                    this.RaisePropertyChanged("PackingSlipNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PricePerQty {
            get {
                return this.PricePerQtyField;
            }
            set {
                if ((this.PricePerQtyField.Equals(value) != true)) {
                    this.PricePerQtyField = value;
                    this.RaisePropertyChanged("PricePerQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReceivedQty {
            get {
                return this.ReceivedQtyField;
            }
            set {
                if ((this.ReceivedQtyField.Equals(value) != true)) {
                    this.ReceivedQtyField = value;
                    this.RaisePropertyChanged("ReceivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivingAction {
            get {
                return this.ReceivingActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivingActionField, value) != true)) {
                    this.ReceivingActionField = value;
                    this.RaisePropertyChanged("ReceivingAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindMachineReceivingDetailsReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindMachineReceivingDetailsReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BALANCEQTYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COMMENTSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentCatDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INVOICEDATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INVOICENOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MPRMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MachinePartsReceivingDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MachinePartsReceivingMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MachinePartsRequestOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ORDERQTYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PACKINGSLIPNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PRICEPERQTYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string REASONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RECEIVEDDATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RECEIVINGACTIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReceivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SHIPPINGCOSTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TAXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TOTALCOSTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TOTALPRICEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BALANCEQTY {
            get {
                return this.BALANCEQTYField;
            }
            set {
                if ((this.BALANCEQTYField.Equals(value) != true)) {
                    this.BALANCEQTYField = value;
                    this.RaisePropertyChanged("BALANCEQTY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAccount {
            get {
                return this.BillAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BillAccountField, value) != true)) {
                    this.BillAccountField = value;
                    this.RaisePropertyChanged("BillAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMMENTS {
            get {
                return this.COMMENTSField;
            }
            set {
                if ((object.ReferenceEquals(this.COMMENTSField, value) != true)) {
                    this.COMMENTSField = value;
                    this.RaisePropertyChanged("COMMENTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentCatDescription {
            get {
                return this.EquipmentCatDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentCatDescriptionField, value) != true)) {
                    this.EquipmentCatDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentCatDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentListDescription {
            get {
                return this.EquipmentListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListDescriptionField, value) != true)) {
                    this.EquipmentListDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategoryDescription {
            get {
                return this.EquipmentSubCategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryDescriptionField, value) != true)) {
                    this.EquipmentSubCategoryDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentSubCategoryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INVOICEDATE {
            get {
                return this.INVOICEDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.INVOICEDATEField, value) != true)) {
                    this.INVOICEDATEField = value;
                    this.RaisePropertyChanged("INVOICEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INVOICENO {
            get {
                return this.INVOICENOField;
            }
            set {
                if ((object.ReferenceEquals(this.INVOICENOField, value) != true)) {
                    this.INVOICENOField = value;
                    this.RaisePropertyChanged("INVOICENO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemIDField, value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedinByField, value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPONo {
            get {
                return this.MPONoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPONoField, value) != true)) {
                    this.MPONoField = value;
                    this.RaisePropertyChanged("MPONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MPRMasterID {
            get {
                return this.MPRMasterIDField;
            }
            set {
                if ((this.MPRMasterIDField.Equals(value) != true)) {
                    this.MPRMasterIDField = value;
                    this.RaisePropertyChanged("MPRMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPRONo {
            get {
                return this.MPRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPRONoField, value) != true)) {
                    this.MPRONoField = value;
                    this.RaisePropertyChanged("MPRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MachinePartsReceivingDetailsID {
            get {
                return this.MachinePartsReceivingDetailsIDField;
            }
            set {
                if ((this.MachinePartsReceivingDetailsIDField.Equals(value) != true)) {
                    this.MachinePartsReceivingDetailsIDField = value;
                    this.RaisePropertyChanged("MachinePartsReceivingDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MachinePartsReceivingMasterID {
            get {
                return this.MachinePartsReceivingMasterIDField;
            }
            set {
                if ((this.MachinePartsReceivingMasterIDField.Equals(value) != true)) {
                    this.MachinePartsReceivingMasterIDField = value;
                    this.RaisePropertyChanged("MachinePartsReceivingMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MachinePartsRequestOrderID {
            get {
                return this.MachinePartsRequestOrderIDField;
            }
            set {
                if ((this.MachinePartsRequestOrderIDField.Equals(value) != true)) {
                    this.MachinePartsRequestOrderIDField = value;
                    this.RaisePropertyChanged("MachinePartsRequestOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ORDERQTY {
            get {
                return this.ORDERQTYField;
            }
            set {
                if ((this.ORDERQTYField.Equals(value) != true)) {
                    this.ORDERQTYField = value;
                    this.RaisePropertyChanged("ORDERQTY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PACKINGSLIPNO {
            get {
                return this.PACKINGSLIPNOField;
            }
            set {
                if ((object.ReferenceEquals(this.PACKINGSLIPNOField, value) != true)) {
                    this.PACKINGSLIPNOField = value;
                    this.RaisePropertyChanged("PACKINGSLIPNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PRICEPERQTY {
            get {
                return this.PRICEPERQTYField;
            }
            set {
                if ((this.PRICEPERQTYField.Equals(value) != true)) {
                    this.PRICEPERQTYField = value;
                    this.RaisePropertyChanged("PRICEPERQTY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipDate {
            get {
                return this.PackingSlipDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipDateField, value) != true)) {
                    this.PackingSlipDateField = value;
                    this.RaisePropertyChanged("PackingSlipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REASON {
            get {
                return this.REASONField;
            }
            set {
                if ((object.ReferenceEquals(this.REASONField, value) != true)) {
                    this.REASONField = value;
                    this.RaisePropertyChanged("REASON");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVEDDATE {
            get {
                return this.RECEIVEDDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVEDDATEField, value) != true)) {
                    this.RECEIVEDDATEField = value;
                    this.RaisePropertyChanged("RECEIVEDDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVINGACTION {
            get {
                return this.RECEIVINGACTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVINGACTIONField, value) != true)) {
                    this.RECEIVINGACTIONField = value;
                    this.RaisePropertyChanged("RECEIVINGACTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReceivedQty {
            get {
                return this.ReceivedQtyField;
            }
            set {
                if ((this.ReceivedQtyField.Equals(value) != true)) {
                    this.ReceivedQtyField = value;
                    this.RaisePropertyChanged("ReceivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SHIPPINGCOST {
            get {
                return this.SHIPPINGCOSTField;
            }
            set {
                if ((object.ReferenceEquals(this.SHIPPINGCOSTField, value) != true)) {
                    this.SHIPPINGCOSTField = value;
                    this.RaisePropertyChanged("SHIPPINGCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAccount {
            get {
                return this.ShipAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAccountField, value) != true)) {
                    this.ShipAccountField = value;
                    this.RaisePropertyChanged("ShipAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TAX {
            get {
                return this.TAXField;
            }
            set {
                if ((object.ReferenceEquals(this.TAXField, value) != true)) {
                    this.TAXField = value;
                    this.RaisePropertyChanged("TAX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TOTALCOST {
            get {
                return this.TOTALCOSTField;
            }
            set {
                if ((this.TOTALCOSTField.Equals(value) != true)) {
                    this.TOTALCOSTField = value;
                    this.RaisePropertyChanged("TOTALCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TOTALPRICE {
            get {
                return this.TOTALPRICEField;
            }
            set {
                if ((this.TOTALPRICEField.Equals(value) != true)) {
                    this.TOTALPRICEField = value;
                    this.RaisePropertyChanged("TOTALPRICE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindMachinePartReceivingDetailsSubReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindMachinePartReceivingDetailsSubReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BALANCEQTYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COMMENTSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INVOICEDATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INVOICENOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MPRMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MachinePartsReceivingDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MachinePartsReceivingMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MachinePartsRequestOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ORDERQTYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PACKINGSLIPNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PRICEPERQTYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string REASONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RECEIVEDDATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RECEIVINGACTIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReceivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SHIPPINGCOSTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TAXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TOTALCOSTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TOTALPRICEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BALANCEQTY {
            get {
                return this.BALANCEQTYField;
            }
            set {
                if ((this.BALANCEQTYField.Equals(value) != true)) {
                    this.BALANCEQTYField = value;
                    this.RaisePropertyChanged("BALANCEQTY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMMENTS {
            get {
                return this.COMMENTSField;
            }
            set {
                if ((object.ReferenceEquals(this.COMMENTSField, value) != true)) {
                    this.COMMENTSField = value;
                    this.RaisePropertyChanged("COMMENTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INVOICEDATE {
            get {
                return this.INVOICEDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.INVOICEDATEField, value) != true)) {
                    this.INVOICEDATEField = value;
                    this.RaisePropertyChanged("INVOICEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INVOICENO {
            get {
                return this.INVOICENOField;
            }
            set {
                if ((object.ReferenceEquals(this.INVOICENOField, value) != true)) {
                    this.INVOICENOField = value;
                    this.RaisePropertyChanged("INVOICENO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemIDField, value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedinByField, value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MPRMasterID {
            get {
                return this.MPRMasterIDField;
            }
            set {
                if ((this.MPRMasterIDField.Equals(value) != true)) {
                    this.MPRMasterIDField = value;
                    this.RaisePropertyChanged("MPRMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPRONo {
            get {
                return this.MPRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPRONoField, value) != true)) {
                    this.MPRONoField = value;
                    this.RaisePropertyChanged("MPRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MachinePartsReceivingDetailsID {
            get {
                return this.MachinePartsReceivingDetailsIDField;
            }
            set {
                if ((this.MachinePartsReceivingDetailsIDField.Equals(value) != true)) {
                    this.MachinePartsReceivingDetailsIDField = value;
                    this.RaisePropertyChanged("MachinePartsReceivingDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MachinePartsReceivingMasterID {
            get {
                return this.MachinePartsReceivingMasterIDField;
            }
            set {
                if ((this.MachinePartsReceivingMasterIDField.Equals(value) != true)) {
                    this.MachinePartsReceivingMasterIDField = value;
                    this.RaisePropertyChanged("MachinePartsReceivingMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MachinePartsRequestOrderID {
            get {
                return this.MachinePartsRequestOrderIDField;
            }
            set {
                if ((this.MachinePartsRequestOrderIDField.Equals(value) != true)) {
                    this.MachinePartsRequestOrderIDField = value;
                    this.RaisePropertyChanged("MachinePartsRequestOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ORDERQTY {
            get {
                return this.ORDERQTYField;
            }
            set {
                if ((this.ORDERQTYField.Equals(value) != true)) {
                    this.ORDERQTYField = value;
                    this.RaisePropertyChanged("ORDERQTY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PACKINGSLIPNO {
            get {
                return this.PACKINGSLIPNOField;
            }
            set {
                if ((object.ReferenceEquals(this.PACKINGSLIPNOField, value) != true)) {
                    this.PACKINGSLIPNOField = value;
                    this.RaisePropertyChanged("PACKINGSLIPNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PRICEPERQTY {
            get {
                return this.PRICEPERQTYField;
            }
            set {
                if ((this.PRICEPERQTYField.Equals(value) != true)) {
                    this.PRICEPERQTYField = value;
                    this.RaisePropertyChanged("PRICEPERQTY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipDate {
            get {
                return this.PackingSlipDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipDateField, value) != true)) {
                    this.PackingSlipDateField = value;
                    this.RaisePropertyChanged("PackingSlipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REASON {
            get {
                return this.REASONField;
            }
            set {
                if ((object.ReferenceEquals(this.REASONField, value) != true)) {
                    this.REASONField = value;
                    this.RaisePropertyChanged("REASON");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVEDDATE {
            get {
                return this.RECEIVEDDATEField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVEDDATEField, value) != true)) {
                    this.RECEIVEDDATEField = value;
                    this.RaisePropertyChanged("RECEIVEDDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECEIVINGACTION {
            get {
                return this.RECEIVINGACTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.RECEIVINGACTIONField, value) != true)) {
                    this.RECEIVINGACTIONField = value;
                    this.RaisePropertyChanged("RECEIVINGACTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReceivedQty {
            get {
                return this.ReceivedQtyField;
            }
            set {
                if ((this.ReceivedQtyField.Equals(value) != true)) {
                    this.ReceivedQtyField = value;
                    this.RaisePropertyChanged("ReceivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SHIPPINGCOST {
            get {
                return this.SHIPPINGCOSTField;
            }
            set {
                if ((object.ReferenceEquals(this.SHIPPINGCOSTField, value) != true)) {
                    this.SHIPPINGCOSTField = value;
                    this.RaisePropertyChanged("SHIPPINGCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TAX {
            get {
                return this.TAXField;
            }
            set {
                if ((object.ReferenceEquals(this.TAXField, value) != true)) {
                    this.TAXField = value;
                    this.RaisePropertyChanged("TAX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TOTALCOST {
            get {
                return this.TOTALCOSTField;
            }
            set {
                if ((this.TOTALCOSTField.Equals(value) != true)) {
                    this.TOTALCOSTField = value;
                    this.RaisePropertyChanged("TOTALCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TOTALPRICE {
            get {
                return this.TOTALPRICEField;
            }
            set {
                if ((this.TOTALPRICEField.Equals(value) != true)) {
                    this.TOTALPRICEField = value;
                    this.RaisePropertyChanged("TOTALPRICE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindMachineReceiveSummaryReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindMachineReceiveSummaryReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentCatDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MachinePartsRequestOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TOTALCOSTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentCatDescription {
            get {
                return this.EquipmentCatDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentCatDescriptionField, value) != true)) {
                    this.EquipmentCatDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentCatDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentListDescription {
            get {
                return this.EquipmentListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListDescriptionField, value) != true)) {
                    this.EquipmentListDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategoryDescription {
            get {
                return this.EquipmentSubCategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryDescriptionField, value) != true)) {
                    this.EquipmentSubCategoryDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentSubCategoryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FinalStatus {
            get {
                return this.FinalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.FinalStatusField, value) != true)) {
                    this.FinalStatusField = value;
                    this.RaisePropertyChanged("FinalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceDateField, value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNo {
            get {
                return this.InvoiceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNoField, value) != true)) {
                    this.InvoiceNoField = value;
                    this.RaisePropertyChanged("InvoiceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedinByField, value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPONo {
            get {
                return this.MPONoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPONoField, value) != true)) {
                    this.MPONoField = value;
                    this.RaisePropertyChanged("MPONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPRONo {
            get {
                return this.MPRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPRONoField, value) != true)) {
                    this.MPRONoField = value;
                    this.RaisePropertyChanged("MPRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MachinePartsRequestOrderID {
            get {
                return this.MachinePartsRequestOrderIDField;
            }
            set {
                if ((this.MachinePartsRequestOrderIDField.Equals(value) != true)) {
                    this.MachinePartsRequestOrderIDField = value;
                    this.RaisePropertyChanged("MachinePartsRequestOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipDate {
            get {
                return this.PackingSlipDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipDateField, value) != true)) {
                    this.PackingSlipDateField = value;
                    this.RaisePropertyChanged("PackingSlipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipNo {
            get {
                return this.PackingSlipNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipNoField, value) != true)) {
                    this.PackingSlipNoField = value;
                    this.RaisePropertyChanged("PackingSlipNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivedDateField, value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TOTALCOST {
            get {
                return this.TOTALCOSTField;
            }
            set {
                if ((this.TOTALCOSTField.Equals(value) != true)) {
                    this.TOTALCOSTField = value;
                    this.RaisePropertyChanged("TOTALCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateMachinePartsReceivingMaster", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class UpdateMachinePartsReceivingMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> INSERTRECORDIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TYPEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UPDATERECORDIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> INSERTRECORDID {
            get {
                return this.INSERTRECORDIDField;
            }
            set {
                if ((this.INSERTRECORDIDField.Equals(value) != true)) {
                    this.INSERTRECORDIDField = value;
                    this.RaisePropertyChanged("INSERTRECORDID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TYPE {
            get {
                return this.TYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.TYPEField, value) != true)) {
                    this.TYPEField = value;
                    this.RaisePropertyChanged("TYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UPDATERECORDID {
            get {
                return this.UPDATERECORDIDField;
            }
            set {
                if ((this.UPDATERECORDIDField.Equals(value) != true)) {
                    this.UPDATERECORDIDField = value;
                    this.RaisePropertyChanged("UPDATERECORDID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchMedicalSuppliesReceiving", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchMedicalSuppliesReceiving : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalSuppliesReceivingMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MedicalSuppliesRequestOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PRMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FinalStatus {
            get {
                return this.FinalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.FinalStatusField, value) != true)) {
                    this.FinalStatusField = value;
                    this.RaisePropertyChanged("FinalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalSuppliesReceivingMasterID {
            get {
                return this.MedicalSuppliesReceivingMasterIDField;
            }
            set {
                if ((this.MedicalSuppliesReceivingMasterIDField.Equals(value) != true)) {
                    this.MedicalSuppliesReceivingMasterIDField = value;
                    this.RaisePropertyChanged("MedicalSuppliesReceivingMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MedicalSuppliesRequestOrderID {
            get {
                return this.MedicalSuppliesRequestOrderIDField;
            }
            set {
                if ((this.MedicalSuppliesRequestOrderIDField.Equals(value) != true)) {
                    this.MedicalSuppliesRequestOrderIDField = value;
                    this.RaisePropertyChanged("MedicalSuppliesRequestOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONo {
            get {
                return this.PONoField;
            }
            set {
                if ((object.ReferenceEquals(this.PONoField, value) != true)) {
                    this.PONoField = value;
                    this.RaisePropertyChanged("PONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PRMasterID {
            get {
                return this.PRMasterIDField;
            }
            set {
                if ((this.PRMasterIDField.Equals(value) != true)) {
                    this.PRMasterIDField = value;
                    this.RaisePropertyChanged("PRMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRONo {
            get {
                return this.PRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.PRONoField, value) != true)) {
                    this.PRONoField = value;
                    this.RaisePropertyChanged("PRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindMedicalsupplyReceivingDetail", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindMedicalsupplyReceivingDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BalanceQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalSuppliesReceivingDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PackingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReceivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivingActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SNGItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorItemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BalanceQty {
            get {
                return this.BalanceQtyField;
            }
            set {
                if ((this.BalanceQtyField.Equals(value) != true)) {
                    this.BalanceQtyField = value;
                    this.RaisePropertyChanged("BalanceQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNo {
            get {
                return this.InvoiceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNoField, value) != true)) {
                    this.InvoiceNoField = value;
                    this.RaisePropertyChanged("InvoiceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalSuppliesReceivingDetailsID {
            get {
                return this.MedicalSuppliesReceivingDetailsIDField;
            }
            set {
                if ((this.MedicalSuppliesReceivingDetailsIDField.Equals(value) != true)) {
                    this.MedicalSuppliesReceivingDetailsIDField = value;
                    this.RaisePropertyChanged("MedicalSuppliesReceivingDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherReason {
            get {
                return this.OtherReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherReasonField, value) != true)) {
                    this.OtherReasonField = value;
                    this.RaisePropertyChanged("OtherReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PackingDate {
            get {
                return this.PackingDateField;
            }
            set {
                if ((this.PackingDateField.Equals(value) != true)) {
                    this.PackingDateField = value;
                    this.RaisePropertyChanged("PackingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipNo {
            get {
                return this.PackingSlipNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipNoField, value) != true)) {
                    this.PackingSlipNoField = value;
                    this.RaisePropertyChanged("PackingSlipNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReceivedQty {
            get {
                return this.ReceivedQtyField;
            }
            set {
                if ((this.ReceivedQtyField.Equals(value) != true)) {
                    this.ReceivedQtyField = value;
                    this.RaisePropertyChanged("ReceivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivingAction {
            get {
                return this.ReceivingActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivingActionField, value) != true)) {
                    this.ReceivingActionField = value;
                    this.RaisePropertyChanged("ReceivingAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SNGItemID {
            get {
                return this.SNGItemIDField;
            }
            set {
                if ((this.SNGItemIDField.Equals(value) != true)) {
                    this.SNGItemIDField = value;
                    this.RaisePropertyChanged("SNGItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((this.ShippingField.Equals(value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((this.TaxField.Equals(value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorItemID {
            get {
                return this.VendorItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorItemIDField, value) != true)) {
                    this.VendorItemIDField = value;
                    this.RaisePropertyChanged("VendorItemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateMSRReceivingMaster", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class UpdateMSRReceivingMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> INSERTRECORDIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TYPEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UPDATERECORDIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> INSERTRECORDID {
            get {
                return this.INSERTRECORDIDField;
            }
            set {
                if ((this.INSERTRECORDIDField.Equals(value) != true)) {
                    this.INSERTRECORDIDField = value;
                    this.RaisePropertyChanged("INSERTRECORDID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TYPE {
            get {
                return this.TYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.TYPEField, value) != true)) {
                    this.TYPEField = value;
                    this.RaisePropertyChanged("TYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UPDATERECORDID {
            get {
                return this.UPDATERECORDIDField;
            }
            set {
                if ((this.UPDATERECORDIDField.Equals(value) != true)) {
                    this.UPDATERECORDIDField = value;
                    this.RaisePropertyChanged("UPDATERECORDID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMSRReceivingsummaryReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetMSRReceivingsummaryReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PRMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FinalStatus {
            get {
                return this.FinalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.FinalStatusField, value) != true)) {
                    this.FinalStatusField = value;
                    this.RaisePropertyChanged("FinalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceDateField, value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNo {
            get {
                return this.InvoiceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNoField, value) != true)) {
                    this.InvoiceNoField = value;
                    this.RaisePropertyChanged("InvoiceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedinByField, value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderPeriod {
            get {
                return this.OrderPeriodField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderPeriodField, value) != true)) {
                    this.OrderPeriodField = value;
                    this.RaisePropertyChanged("OrderPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderTypeField, value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONo {
            get {
                return this.PONoField;
            }
            set {
                if ((object.ReferenceEquals(this.PONoField, value) != true)) {
                    this.PONoField = value;
                    this.RaisePropertyChanged("PONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PRMasterID {
            get {
                return this.PRMasterIDField;
            }
            set {
                if ((this.PRMasterIDField.Equals(value) != true)) {
                    this.PRMasterIDField = value;
                    this.RaisePropertyChanged("PRMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRONo {
            get {
                return this.PRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.PRONoField, value) != true)) {
                    this.PRONoField = value;
                    this.RaisePropertyChanged("PRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingDate {
            get {
                return this.PackingDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingDateField, value) != true)) {
                    this.PackingDateField = value;
                    this.RaisePropertyChanged("PackingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipNo {
            get {
                return this.PackingSlipNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipNoField, value) != true)) {
                    this.PackingSlipNoField = value;
                    this.RaisePropertyChanged("PackingSlipNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivedDateField, value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeDelivery {
            get {
                return this.TimeDeliveryField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeDeliveryField, value) != true)) {
                    this.TimeDeliveryField = value;
                    this.RaisePropertyChanged("TimeDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindMedicalSupplyDetailsReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindMedicalSupplyDetailsReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BalanceQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalSuppliesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalsuppliesItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderwithUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParlevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QtyInHandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReceivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivingActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SNGItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorItemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BalanceQty {
            get {
                return this.BalanceQtyField;
            }
            set {
                if ((this.BalanceQtyField.Equals(value) != true)) {
                    this.BalanceQtyField = value;
                    this.RaisePropertyChanged("BalanceQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAccount {
            get {
                return this.BillAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BillAccountField, value) != true)) {
                    this.BillAccountField = value;
                    this.RaisePropertyChanged("BillAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceDateField, value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNo {
            get {
                return this.InvoiceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNoField, value) != true)) {
                    this.InvoiceNoField = value;
                    this.RaisePropertyChanged("InvoiceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedinByField, value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalSuppliesID {
            get {
                return this.MedicalSuppliesIDField;
            }
            set {
                if ((this.MedicalSuppliesIDField.Equals(value) != true)) {
                    this.MedicalSuppliesIDField = value;
                    this.RaisePropertyChanged("MedicalSuppliesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalsuppliesItemID {
            get {
                return this.MedicalsuppliesItemIDField;
            }
            set {
                if ((this.MedicalsuppliesItemIDField.Equals(value) != true)) {
                    this.MedicalsuppliesItemIDField = value;
                    this.RaisePropertyChanged("MedicalsuppliesItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderPeriod {
            get {
                return this.OrderPeriodField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderPeriodField, value) != true)) {
                    this.OrderPeriodField = value;
                    this.RaisePropertyChanged("OrderPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderTypeField, value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderwithUOM {
            get {
                return this.OrderwithUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderwithUOMField, value) != true)) {
                    this.OrderwithUOMField = value;
                    this.RaisePropertyChanged("OrderwithUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONo {
            get {
                return this.PONoField;
            }
            set {
                if ((object.ReferenceEquals(this.PONoField, value) != true)) {
                    this.PONoField = value;
                    this.RaisePropertyChanged("PONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRNo {
            get {
                return this.PRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PRNoField, value) != true)) {
                    this.PRNoField = value;
                    this.RaisePropertyChanged("PRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRONo {
            get {
                return this.PRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.PRONoField, value) != true)) {
                    this.PRONoField = value;
                    this.RaisePropertyChanged("PRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingDate {
            get {
                return this.PackingDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingDateField, value) != true)) {
                    this.PackingDateField = value;
                    this.RaisePropertyChanged("PackingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipNo {
            get {
                return this.PackingSlipNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipNoField, value) != true)) {
                    this.PackingSlipNoField = value;
                    this.RaisePropertyChanged("PackingSlipNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parlevel {
            get {
                return this.ParlevelField;
            }
            set {
                if ((object.ReferenceEquals(this.ParlevelField, value) != true)) {
                    this.ParlevelField = value;
                    this.RaisePropertyChanged("Parlevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QtyInHand {
            get {
                return this.QtyInHandField;
            }
            set {
                if ((this.QtyInHandField.Equals(value) != true)) {
                    this.QtyInHandField = value;
                    this.RaisePropertyChanged("QtyInHand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivedDateField, value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReceivedQty {
            get {
                return this.ReceivedQtyField;
            }
            set {
                if ((this.ReceivedQtyField.Equals(value) != true)) {
                    this.ReceivedQtyField = value;
                    this.RaisePropertyChanged("ReceivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivingAction {
            get {
                return this.ReceivingActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivingActionField, value) != true)) {
                    this.ReceivingActionField = value;
                    this.RaisePropertyChanged("ReceivingAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SNGItemID {
            get {
                return this.SNGItemIDField;
            }
            set {
                if ((this.SNGItemIDField.Equals(value) != true)) {
                    this.SNGItemIDField = value;
                    this.RaisePropertyChanged("SNGItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAccount {
            get {
                return this.ShipAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAccountField, value) != true)) {
                    this.ShipAccountField = value;
                    this.RaisePropertyChanged("ShipAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((this.ShippingField.Equals(value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingPeriod {
            get {
                return this.ShippingPeriodField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingPeriodField, value) != true)) {
                    this.ShippingPeriodField = value;
                    this.RaisePropertyChanged("ShippingPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((this.TaxField.Equals(value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeDelivery {
            get {
                return this.TimeDeliveryField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeDeliveryField, value) != true)) {
                    this.TimeDeliveryField = value;
                    this.RaisePropertyChanged("TimeDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorItemID {
            get {
                return this.VendorItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorItemIDField, value) != true)) {
                    this.VendorItemIDField = value;
                    this.RaisePropertyChanged("VendorItemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindMedicalSupplyDetailsSubReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindMedicalSupplyDetailsSubReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BalanceQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedinByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalSuppliesReceivingDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PRMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRONoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingSlipNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReceivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivingActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SNGItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BalanceQty {
            get {
                return this.BalanceQtyField;
            }
            set {
                if ((this.BalanceQtyField.Equals(value) != true)) {
                    this.BalanceQtyField = value;
                    this.RaisePropertyChanged("BalanceQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceDateField, value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNo {
            get {
                return this.InvoiceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNoField, value) != true)) {
                    this.InvoiceNoField = value;
                    this.RaisePropertyChanged("InvoiceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedinBy {
            get {
                return this.LoggedinByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedinByField, value) != true)) {
                    this.LoggedinByField = value;
                    this.RaisePropertyChanged("LoggedinBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalSuppliesReceivingDetailsID {
            get {
                return this.MedicalSuppliesReceivingDetailsIDField;
            }
            set {
                if ((this.MedicalSuppliesReceivingDetailsIDField.Equals(value) != true)) {
                    this.MedicalSuppliesReceivingDetailsIDField = value;
                    this.RaisePropertyChanged("MedicalSuppliesReceivingDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PRMasterID {
            get {
                return this.PRMasterIDField;
            }
            set {
                if ((this.PRMasterIDField.Equals(value) != true)) {
                    this.PRMasterIDField = value;
                    this.RaisePropertyChanged("PRMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRONo {
            get {
                return this.PRONoField;
            }
            set {
                if ((object.ReferenceEquals(this.PRONoField, value) != true)) {
                    this.PRONoField = value;
                    this.RaisePropertyChanged("PRONo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingDate {
            get {
                return this.PackingDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingDateField, value) != true)) {
                    this.PackingDateField = value;
                    this.RaisePropertyChanged("PackingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingSlipNo {
            get {
                return this.PackingSlipNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingSlipNoField, value) != true)) {
                    this.PackingSlipNoField = value;
                    this.RaisePropertyChanged("PackingSlipNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivedDateField, value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReceivedQty {
            get {
                return this.ReceivedQtyField;
            }
            set {
                if ((this.ReceivedQtyField.Equals(value) != true)) {
                    this.ReceivedQtyField = value;
                    this.RaisePropertyChanged("ReceivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivingAction {
            get {
                return this.ReceivingActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivingActionField, value) != true)) {
                    this.ReceivingActionField = value;
                    this.RaisePropertyChanged("ReceivingAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SNGItemID {
            get {
                return this.SNGItemIDField;
            }
            set {
                if ((this.SNGItemIDField.Equals(value) != true)) {
                    this.SNGItemIDField = value;
                    this.RaisePropertyChanged("SNGItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((this.ShippingField.Equals(value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((this.TaxField.Equals(value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindMachinePartsReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindMachinePartsReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentCatDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HoursonmachineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PricePerUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentCatDescription {
            get {
                return this.EquipmentCatDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentCatDescriptionField, value) != true)) {
                    this.EquipmentCatDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentCatDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentListDescription {
            get {
                return this.EquipmentListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListDescriptionField, value) != true)) {
                    this.EquipmentListDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategoryDescription {
            get {
                return this.EquipmentSubCategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryDescriptionField, value) != true)) {
                    this.EquipmentSubCategoryDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentSubCategoryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hoursonmachine {
            get {
                return this.HoursonmachineField;
            }
            set {
                if ((object.ReferenceEquals(this.HoursonmachineField, value) != true)) {
                    this.HoursonmachineField = value;
                    this.RaisePropertyChanged("Hoursonmachine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemIDField, value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPRNo {
            get {
                return this.MPRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPRNoField, value) != true)) {
                    this.MPRNoField = value;
                    this.RaisePropertyChanged("MPRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderQuantity {
            get {
                return this.OrderQuantityField;
            }
            set {
                if ((this.OrderQuantityField.Equals(value) != true)) {
                    this.OrderQuantityField = value;
                    this.RaisePropertyChanged("OrderQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PricePerUnit {
            get {
                return this.PricePerUnitField;
            }
            set {
                if ((this.PricePerUnitField.Equals(value) != true)) {
                    this.PricePerUnitField = value;
                    this.RaisePropertyChanged("PricePerUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMPRMaster", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetMPRMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipementListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipementListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipementSubCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HoursonmachineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MPRMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipementList {
            get {
                return this.EquipementListField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipementListField, value) != true)) {
                    this.EquipementListField = value;
                    this.RaisePropertyChanged("EquipementList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipementListID {
            get {
                return this.EquipementListIDField;
            }
            set {
                if ((this.EquipementListIDField.Equals(value) != true)) {
                    this.EquipementListIDField = value;
                    this.RaisePropertyChanged("EquipementListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipementSubCategoryID {
            get {
                return this.EquipementSubCategoryIDField;
            }
            set {
                if ((this.EquipementSubCategoryIDField.Equals(value) != true)) {
                    this.EquipementSubCategoryIDField = value;
                    this.RaisePropertyChanged("EquipementSubCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentCategory {
            get {
                return this.EquipmentCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentCategoryField, value) != true)) {
                    this.EquipmentCategoryField = value;
                    this.RaisePropertyChanged("EquipmentCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipmentCategoryID {
            get {
                return this.EquipmentCategoryIDField;
            }
            set {
                if ((this.EquipmentCategoryIDField.Equals(value) != true)) {
                    this.EquipmentCategoryIDField = value;
                    this.RaisePropertyChanged("EquipmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategory {
            get {
                return this.EquipmentSubCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryField, value) != true)) {
                    this.EquipmentSubCategoryField = value;
                    this.RaisePropertyChanged("EquipmentSubCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hoursonmachine {
            get {
                return this.HoursonmachineField;
            }
            set {
                if ((object.ReferenceEquals(this.HoursonmachineField, value) != true)) {
                    this.HoursonmachineField = value;
                    this.RaisePropertyChanged("Hoursonmachine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MPRMasterID {
            get {
                return this.MPRMasterIDField;
            }
            set {
                if ((this.MPRMasterIDField.Equals(value) != true)) {
                    this.MPRMasterIDField = value;
                    this.RaisePropertyChanged("MPRMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPRNo {
            get {
                return this.MPRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPRNoField, value) != true)) {
                    this.MPRNoField = value;
                    this.RaisePropertyChanged("MPRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status {
            get {
                return this.statusField;
            }
            set {
                if ((object.ReferenceEquals(this.statusField, value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetList", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvenValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> InvenkeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvenValue {
            get {
                return this.InvenValueField;
            }
            set {
                if ((object.ReferenceEquals(this.InvenValueField, value) != true)) {
                    this.InvenValueField = value;
                    this.RaisePropertyChanged("InvenValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Invenkey {
            get {
                return this.InvenkeyField;
            }
            set {
                if ((this.InvenkeyField.Equals(value) != true)) {
                    this.InvenkeyField = value;
                    this.RaisePropertyChanged("Invenkey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchMPRMaster", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchMPRMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipementListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipementListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipementSubCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HoursonmachineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MPRMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MPRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipementList {
            get {
                return this.EquipementListField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipementListField, value) != true)) {
                    this.EquipementListField = value;
                    this.RaisePropertyChanged("EquipementList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipementListID {
            get {
                return this.EquipementListIDField;
            }
            set {
                if ((this.EquipementListIDField.Equals(value) != true)) {
                    this.EquipementListIDField = value;
                    this.RaisePropertyChanged("EquipementListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipementSubCategoryID {
            get {
                return this.EquipementSubCategoryIDField;
            }
            set {
                if ((this.EquipementSubCategoryIDField.Equals(value) != true)) {
                    this.EquipementSubCategoryIDField = value;
                    this.RaisePropertyChanged("EquipementSubCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentCategory {
            get {
                return this.EquipmentCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentCategoryField, value) != true)) {
                    this.EquipmentCategoryField = value;
                    this.RaisePropertyChanged("EquipmentCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipmentCategoryID {
            get {
                return this.EquipmentCategoryIDField;
            }
            set {
                if ((this.EquipmentCategoryIDField.Equals(value) != true)) {
                    this.EquipmentCategoryIDField = value;
                    this.RaisePropertyChanged("EquipmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategory {
            get {
                return this.EquipmentSubCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryField, value) != true)) {
                    this.EquipmentSubCategoryField = value;
                    this.RaisePropertyChanged("EquipmentSubCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hoursonmachine {
            get {
                return this.HoursonmachineField;
            }
            set {
                if ((object.ReferenceEquals(this.HoursonmachineField, value) != true)) {
                    this.HoursonmachineField = value;
                    this.RaisePropertyChanged("Hoursonmachine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MPRMasterID {
            get {
                return this.MPRMasterIDField;
            }
            set {
                if ((this.MPRMasterIDField.Equals(value) != true)) {
                    this.MPRMasterIDField = value;
                    this.RaisePropertyChanged("MPRMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MPRNo {
            get {
                return this.MPRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MPRNoField, value) != true)) {
                    this.MPRNoField = value;
                    this.RaisePropertyChanged("MPRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status {
            get {
                return this.statusField;
            }
            set {
                if ((object.ReferenceEquals(this.statusField, value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidMachineEquipment", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class ValidMachineEquipment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EditField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Edit {
            get {
                return this.EditField;
            }
            set {
                if ((this.EditField.Equals(value) != true)) {
                    this.EditField = value;
                    this.RaisePropertyChanged("Edit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetmedicalsupplyReviewReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetmedicalsupplyReviewReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemCategoryGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalSuppliesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalsuppliesItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParlevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QtyInHandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UomIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorItemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Corporate {
            get {
                return this.CorporateField;
            }
            set {
                if ((this.CorporateField.Equals(value) != true)) {
                    this.CorporateField = value;
                    this.RaisePropertyChanged("Corporate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Facility {
            get {
                return this.FacilityField;
            }
            set {
                if ((this.FacilityField.Equals(value) != true)) {
                    this.FacilityField = value;
                    this.RaisePropertyChanged("Facility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityName {
            get {
                return this.FacilityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityNameField, value) != true)) {
                    this.FacilityNameField = value;
                    this.RaisePropertyChanged("FacilityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemCategoryGroup {
            get {
                return this.ItemCategoryGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemCategoryGroupField, value) != true)) {
                    this.ItemCategoryGroupField = value;
                    this.RaisePropertyChanged("ItemCategoryGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalSuppliesID {
            get {
                return this.MedicalSuppliesIDField;
            }
            set {
                if ((this.MedicalSuppliesIDField.Equals(value) != true)) {
                    this.MedicalSuppliesIDField = value;
                    this.RaisePropertyChanged("MedicalSuppliesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalsuppliesItemID {
            get {
                return this.MedicalsuppliesItemIDField;
            }
            set {
                if ((this.MedicalsuppliesItemIDField.Equals(value) != true)) {
                    this.MedicalsuppliesItemIDField = value;
                    this.RaisePropertyChanged("MedicalsuppliesItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderPeriod {
            get {
                return this.OrderPeriodField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderPeriodField, value) != true)) {
                    this.OrderPeriodField = value;
                    this.RaisePropertyChanged("OrderPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderTypeField, value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRNo {
            get {
                return this.PRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PRNoField, value) != true)) {
                    this.PRNoField = value;
                    this.RaisePropertyChanged("PRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parlevel {
            get {
                return this.ParlevelField;
            }
            set {
                if ((object.ReferenceEquals(this.ParlevelField, value) != true)) {
                    this.ParlevelField = value;
                    this.RaisePropertyChanged("Parlevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QtyInHand {
            get {
                return this.QtyInHandField;
            }
            set {
                if ((this.QtyInHandField.Equals(value) != true)) {
                    this.QtyInHandField = value;
                    this.RaisePropertyChanged("QtyInHand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowNumber {
            get {
                return this.RowNumberField;
            }
            set {
                if ((this.RowNumberField.Equals(value) != true)) {
                    this.RowNumberField = value;
                    this.RaisePropertyChanged("RowNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeDelivery {
            get {
                return this.TimeDeliveryField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeDeliveryField, value) != true)) {
                    this.TimeDeliveryField = value;
                    this.RaisePropertyChanged("TimeDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UomID {
            get {
                return this.UomIDField;
            }
            set {
                if ((this.UomIDField.Equals(value) != true)) {
                    this.UomIDField = value;
                    this.RaisePropertyChanged("UomID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vendor {
            get {
                return this.VendorField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorField, value) != true)) {
                    this.VendorField = value;
                    this.RaisePropertyChanged("Vendor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorItemID {
            get {
                return this.VendorItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorItemIDField, value) != true)) {
                    this.VendorItemIDField = value;
                    this.RaisePropertyChanged("VendorItemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMedicalsuppliesItem", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetMedicalsuppliesItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ParlevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitPriceCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UnitPriceValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UomIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorItemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemShortName {
            get {
                return this.ItemShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemShortNameField, value) != true)) {
                    this.ItemShortNameField = value;
                    this.RaisePropertyChanged("ItemShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Parlevel {
            get {
                return this.ParlevelField;
            }
            set {
                if ((this.ParlevelField.Equals(value) != true)) {
                    this.ParlevelField = value;
                    this.RaisePropertyChanged("Parlevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitPriceCurrency {
            get {
                return this.UnitPriceCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitPriceCurrencyField, value) != true)) {
                    this.UnitPriceCurrencyField = value;
                    this.RaisePropertyChanged("UnitPriceCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> UnitPriceValue {
            get {
                return this.UnitPriceValueField;
            }
            set {
                if ((this.UnitPriceValueField.Equals(value) != true)) {
                    this.UnitPriceValueField = value;
                    this.RaisePropertyChanged("UnitPriceValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UomID {
            get {
                return this.UomIDField;
            }
            set {
                if ((this.UomIDField.Equals(value) != true)) {
                    this.UomIDField = value;
                    this.RaisePropertyChanged("UomID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorItemID {
            get {
                return this.VendorItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorItemIDField, value) != true)) {
                    this.VendorItemIDField = value;
                    this.RaisePropertyChanged("VendorItemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetLookUpList", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetLookUpList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvenValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> InvenkeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvenValue {
            get {
                return this.InvenValueField;
            }
            set {
                if ((object.ReferenceEquals(this.InvenValueField, value) != true)) {
                    this.InvenValueField = value;
                    this.RaisePropertyChanged("InvenValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Invenkey {
            get {
                return this.InvenkeyField;
            }
            set {
                if ((this.InvenkeyField.Equals(value) != true)) {
                    this.InvenkeyField = value;
                    this.RaisePropertyChanged("Invenkey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetOrderPeriod", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetOrderPeriod : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderdueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VenOrderDueIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((this.OrderTypeField.Equals(value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderdueDate {
            get {
                return this.OrderdueDateField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderdueDateField, value) != true)) {
                    this.OrderdueDateField = value;
                    this.RaisePropertyChanged("OrderdueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VenOrderDueID {
            get {
                return this.VenOrderDueIDField;
            }
            set {
                if ((this.VenOrderDueIDField.Equals(value) != true)) {
                    this.VenOrderDueIDField = value;
                    this.RaisePropertyChanged("VenOrderDueID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMedicalSupplyRequestMaster", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetMedicalSupplyRequestMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalSuppliesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Corporate {
            get {
                return this.CorporateField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateField, value) != true)) {
                    this.CorporateField = value;
                    this.RaisePropertyChanged("Corporate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Facility {
            get {
                return this.FacilityField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityField, value) != true)) {
                    this.FacilityField = value;
                    this.RaisePropertyChanged("Facility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedOnField, value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalSuppliesID {
            get {
                return this.MedicalSuppliesIDField;
            }
            set {
                if ((this.MedicalSuppliesIDField.Equals(value) != true)) {
                    this.MedicalSuppliesIDField = value;
                    this.RaisePropertyChanged("MedicalSuppliesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderPeriod {
            get {
                return this.OrderPeriodField;
            }
            set {
                if ((this.OrderPeriodField.Equals(value) != true)) {
                    this.OrderPeriodField = value;
                    this.RaisePropertyChanged("OrderPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((this.OrderTypeField.Equals(value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRNo {
            get {
                return this.PRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PRNoField, value) != true)) {
                    this.PRNoField = value;
                    this.RaisePropertyChanged("PRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeDelivery {
            get {
                return this.TimeDeliveryField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeDeliveryField, value) != true)) {
                    this.TimeDeliveryField = value;
                    this.RaisePropertyChanged("TimeDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vendor {
            get {
                return this.VendorField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorField, value) != true)) {
                    this.VendorField = value;
                    this.RaisePropertyChanged("Vendor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchMedicalSupplyRequest", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchMedicalSupplyRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalSuppliesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Corporate {
            get {
                return this.CorporateField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateField, value) != true)) {
                    this.CorporateField = value;
                    this.RaisePropertyChanged("Corporate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Facility {
            get {
                return this.FacilityField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityField, value) != true)) {
                    this.FacilityField = value;
                    this.RaisePropertyChanged("Facility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalSuppliesID {
            get {
                return this.MedicalSuppliesIDField;
            }
            set {
                if ((this.MedicalSuppliesIDField.Equals(value) != true)) {
                    this.MedicalSuppliesIDField = value;
                    this.RaisePropertyChanged("MedicalSuppliesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderPeriod {
            get {
                return this.OrderPeriodField;
            }
            set {
                if ((this.OrderPeriodField.Equals(value) != true)) {
                    this.OrderPeriodField = value;
                    this.RaisePropertyChanged("OrderPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((this.OrderTypeField.Equals(value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRNo {
            get {
                return this.PRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PRNoField, value) != true)) {
                    this.PRNoField = value;
                    this.RaisePropertyChanged("PRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeDelivery {
            get {
                return this.TimeDeliveryField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeDeliveryField, value) != true)) {
                    this.TimeDeliveryField = value;
                    this.RaisePropertyChanged("TimeDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vendor {
            get {
                return this.VendorField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorField, value) != true)) {
                    this.VendorField = value;
                    this.RaisePropertyChanged("Vendor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindMedicalsupplymasterandDetail", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindMedicalsupplymasterandDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalSuppliesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalsuppliesItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParlevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QtyInHandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UomIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Corporate {
            get {
                return this.CorporateField;
            }
            set {
                if ((this.CorporateField.Equals(value) != true)) {
                    this.CorporateField = value;
                    this.RaisePropertyChanged("Corporate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Facility {
            get {
                return this.FacilityField;
            }
            set {
                if ((this.FacilityField.Equals(value) != true)) {
                    this.FacilityField = value;
                    this.RaisePropertyChanged("Facility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalSuppliesID {
            get {
                return this.MedicalSuppliesIDField;
            }
            set {
                if ((this.MedicalSuppliesIDField.Equals(value) != true)) {
                    this.MedicalSuppliesIDField = value;
                    this.RaisePropertyChanged("MedicalSuppliesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalsuppliesItemID {
            get {
                return this.MedicalsuppliesItemIDField;
            }
            set {
                if ((this.MedicalsuppliesItemIDField.Equals(value) != true)) {
                    this.MedicalsuppliesItemIDField = value;
                    this.RaisePropertyChanged("MedicalsuppliesItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderPeriod {
            get {
                return this.OrderPeriodField;
            }
            set {
                if ((this.OrderPeriodField.Equals(value) != true)) {
                    this.OrderPeriodField = value;
                    this.RaisePropertyChanged("OrderPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((this.OrderTypeField.Equals(value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRNo {
            get {
                return this.PRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PRNoField, value) != true)) {
                    this.PRNoField = value;
                    this.RaisePropertyChanged("PRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parlevel {
            get {
                return this.ParlevelField;
            }
            set {
                if ((object.ReferenceEquals(this.ParlevelField, value) != true)) {
                    this.ParlevelField = value;
                    this.RaisePropertyChanged("Parlevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QtyInHand {
            get {
                return this.QtyInHandField;
            }
            set {
                if ((this.QtyInHandField.Equals(value) != true)) {
                    this.QtyInHandField = value;
                    this.RaisePropertyChanged("QtyInHand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowNumber {
            get {
                return this.RowNumberField;
            }
            set {
                if ((this.RowNumberField.Equals(value) != true)) {
                    this.RowNumberField = value;
                    this.RaisePropertyChanged("RowNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeDelivery {
            get {
                return this.TimeDeliveryField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeDeliveryField, value) != true)) {
                    this.TimeDeliveryField = value;
                    this.RaisePropertyChanged("TimeDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UomID {
            get {
                return this.UomIDField;
            }
            set {
                if ((this.UomIDField.Equals(value) != true)) {
                    this.UomIDField = value;
                    this.RaisePropertyChanged("UomID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Vendor {
            get {
                return this.VendorField;
            }
            set {
                if ((this.VendorField.Equals(value) != true)) {
                    this.VendorField = value;
                    this.RaisePropertyChanged("Vendor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindMedicalsupplymaster", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindMedicalsupplymaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalSuppliesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Corporate {
            get {
                return this.CorporateField;
            }
            set {
                if ((this.CorporateField.Equals(value) != true)) {
                    this.CorporateField = value;
                    this.RaisePropertyChanged("Corporate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Facility {
            get {
                return this.FacilityField;
            }
            set {
                if ((this.FacilityField.Equals(value) != true)) {
                    this.FacilityField = value;
                    this.RaisePropertyChanged("Facility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalSuppliesID {
            get {
                return this.MedicalSuppliesIDField;
            }
            set {
                if ((this.MedicalSuppliesIDField.Equals(value) != true)) {
                    this.MedicalSuppliesIDField = value;
                    this.RaisePropertyChanged("MedicalSuppliesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderPeriod {
            get {
                return this.OrderPeriodField;
            }
            set {
                if ((this.OrderPeriodField.Equals(value) != true)) {
                    this.OrderPeriodField = value;
                    this.RaisePropertyChanged("OrderPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((this.OrderTypeField.Equals(value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRNo {
            get {
                return this.PRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PRNoField, value) != true)) {
                    this.PRNoField = value;
                    this.RaisePropertyChanged("PRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeDelivery {
            get {
                return this.TimeDeliveryField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeDeliveryField, value) != true)) {
                    this.TimeDeliveryField = value;
                    this.RaisePropertyChanged("TimeDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Vendor {
            get {
                return this.VendorField;
            }
            set {
                if ((this.VendorField.Equals(value) != true)) {
                    this.VendorField = value;
                    this.RaisePropertyChanged("Vendor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddMedicalsupplyitem", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class AddMedicalsupplyitem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedicalSupplyItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ParlevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QtyInHandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> RowNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitPriceCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UomIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorItemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemShortName {
            get {
                return this.ItemShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemShortNameField, value) != true)) {
                    this.ItemShortNameField = value;
                    this.RaisePropertyChanged("ItemShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedicalSupplyItemID {
            get {
                return this.MedicalSupplyItemIDField;
            }
            set {
                if ((this.MedicalSupplyItemIDField.Equals(value) != true)) {
                    this.MedicalSupplyItemIDField = value;
                    this.RaisePropertyChanged("MedicalSupplyItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderQtyField, value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Parlevel {
            get {
                return this.ParlevelField;
            }
            set {
                if ((this.ParlevelField.Equals(value) != true)) {
                    this.ParlevelField = value;
                    this.RaisePropertyChanged("Parlevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QtyInHand {
            get {
                return this.QtyInHandField;
            }
            set {
                if ((object.ReferenceEquals(this.QtyInHandField, value) != true)) {
                    this.QtyInHandField = value;
                    this.RaisePropertyChanged("QtyInHand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> RowNumber {
            get {
                return this.RowNumberField;
            }
            set {
                if ((this.RowNumberField.Equals(value) != true)) {
                    this.RowNumberField = value;
                    this.RaisePropertyChanged("RowNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitPriceCurrency {
            get {
                return this.UnitPriceCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitPriceCurrencyField, value) != true)) {
                    this.UnitPriceCurrencyField = value;
                    this.RaisePropertyChanged("UnitPriceCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UomID {
            get {
                return this.UomIDField;
            }
            set {
                if ((this.UomIDField.Equals(value) != true)) {
                    this.UomIDField = value;
                    this.RaisePropertyChanged("UomID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorItemID {
            get {
                return this.VendorItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorItemIDField, value) != true)) {
                    this.VendorItemIDField = value;
                    this.RaisePropertyChanged("VendorItemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SavedShippingValue", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SavedShippingValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvenValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> InvenkeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvenValue {
            get {
                return this.InvenValueField;
            }
            set {
                if ((object.ReferenceEquals(this.InvenValueField, value) != true)) {
                    this.InvenValueField = value;
                    this.RaisePropertyChanged("InvenValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Invenkey {
            get {
                return this.InvenkeyField;
            }
            set {
                if ((this.InvenkeyField.Equals(value) != true)) {
                    this.InvenkeyField = value;
                    this.RaisePropertyChanged("Invenkey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SavedTimeDeliveryValue", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SavedTimeDeliveryValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvenValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> InvenkeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvenValue {
            get {
                return this.InvenValueField;
            }
            set {
                if ((object.ReferenceEquals(this.InvenValueField, value) != true)) {
                    this.InvenValueField = value;
                    this.RaisePropertyChanged("InvenValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Invenkey {
            get {
                return this.InvenkeyField;
            }
            set {
                if ((this.InvenkeyField.Equals(value) != true)) {
                    this.InvenkeyField = value;
                    this.RaisePropertyChanged("Invenkey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FindDuplicateShippingValue", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class FindDuplicateShippingValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ShippingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((this.ShippingField.Equals(value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FindDuplicateTimeDeliveryValue", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class FindDuplicateTimeDeliveryValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ShippingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((this.ShippingField.Equals(value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindServiceRequestReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindServiceRequestReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipSubcategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipcategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SINoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceRequestMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquList {
            get {
                return this.EquListField;
            }
            set {
                if ((object.ReferenceEquals(this.EquListField, value) != true)) {
                    this.EquListField = value;
                    this.RaisePropertyChanged("EquList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipSubcategory {
            get {
                return this.EquipSubcategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipSubcategoryField, value) != true)) {
                    this.EquipSubcategoryField = value;
                    this.RaisePropertyChanged("EquipSubcategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Equipcategory {
            get {
                return this.EquipcategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipcategoryField, value) != true)) {
                    this.EquipcategoryField = value;
                    this.RaisePropertyChanged("Equipcategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SINo {
            get {
                return this.SINoField;
            }
            set {
                if ((this.SINoField.Equals(value) != true)) {
                    this.SINoField = value;
                    this.RaisePropertyChanged("SINo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SRNo {
            get {
                return this.SRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SRNoField, value) != true)) {
                    this.SRNoField = value;
                    this.RaisePropertyChanged("SRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceRequestMasterID {
            get {
                return this.ServiceRequestMasterIDField;
            }
            set {
                if ((this.ServiceRequestMasterIDField.Equals(value) != true)) {
                    this.ServiceRequestMasterIDField = value;
                    this.RaisePropertyChanged("ServiceRequestMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceTypeField, value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vendor {
            get {
                return this.VendorField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorField, value) != true)) {
                    this.VendorField = value;
                    this.RaisePropertyChanged("Vendor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetServiceRequestMaster", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetServiceRequestMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EqipmentCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EqipmentSubCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipementListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipementSubCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ServiceCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ServiceListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceRequestMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ServiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EqipmentCategory {
            get {
                return this.EqipmentCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EqipmentCategoryField, value) != true)) {
                    this.EqipmentCategoryField = value;
                    this.RaisePropertyChanged("EqipmentCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EqipmentSubCategory {
            get {
                return this.EqipmentSubCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EqipmentSubCategoryField, value) != true)) {
                    this.EqipmentSubCategoryField = value;
                    this.RaisePropertyChanged("EqipmentSubCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipementListID {
            get {
                return this.EquipementListIDField;
            }
            set {
                if ((this.EquipementListIDField.Equals(value) != true)) {
                    this.EquipementListIDField = value;
                    this.RaisePropertyChanged("EquipementListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipementSubCategoryID {
            get {
                return this.EquipementSubCategoryIDField;
            }
            set {
                if ((this.EquipementSubCategoryIDField.Equals(value) != true)) {
                    this.EquipementSubCategoryIDField = value;
                    this.RaisePropertyChanged("EquipementSubCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipmentCategoryID {
            get {
                return this.EquipmentCategoryIDField;
            }
            set {
                if ((this.EquipmentCategoryIDField.Equals(value) != true)) {
                    this.EquipmentCategoryIDField = value;
                    this.RaisePropertyChanged("EquipmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentList {
            get {
                return this.EquipmentListField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListField, value) != true)) {
                    this.EquipmentListField = value;
                    this.RaisePropertyChanged("EquipmentList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SRNo {
            get {
                return this.SRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SRNoField, value) != true)) {
                    this.SRNoField = value;
                    this.RaisePropertyChanged("SRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceCategory {
            get {
                return this.ServiceCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceCategoryField, value) != true)) {
                    this.ServiceCategoryField = value;
                    this.RaisePropertyChanged("ServiceCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ServiceCategoryID {
            get {
                return this.ServiceCategoryIDField;
            }
            set {
                if ((this.ServiceCategoryIDField.Equals(value) != true)) {
                    this.ServiceCategoryIDField = value;
                    this.RaisePropertyChanged("ServiceCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceList {
            get {
                return this.ServiceListField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceListField, value) != true)) {
                    this.ServiceListField = value;
                    this.RaisePropertyChanged("ServiceList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ServiceListID {
            get {
                return this.ServiceListIDField;
            }
            set {
                if ((this.ServiceListIDField.Equals(value) != true)) {
                    this.ServiceListIDField = value;
                    this.RaisePropertyChanged("ServiceListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceRequestMasterID {
            get {
                return this.ServiceRequestMasterIDField;
            }
            set {
                if ((this.ServiceRequestMasterIDField.Equals(value) != true)) {
                    this.ServiceRequestMasterIDField = value;
                    this.RaisePropertyChanged("ServiceRequestMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((this.ServiceTypeField.Equals(value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetServiceCategory", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetServiceCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceCatDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceCategoryIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceCatDescription {
            get {
                return this.ServiceCatDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceCatDescriptionField, value) != true)) {
                    this.ServiceCatDescriptionField = value;
                    this.RaisePropertyChanged("ServiceCatDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceCategoryID {
            get {
                return this.ServiceCategoryIDField;
            }
            set {
                if ((this.ServiceCategoryIDField.Equals(value) != true)) {
                    this.ServiceCategoryIDField = value;
                    this.RaisePropertyChanged("ServiceCategoryID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetServiceList", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetServiceList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceListIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceListDescription {
            get {
                return this.ServiceListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceListDescriptionField, value) != true)) {
                    this.ServiceListDescriptionField = value;
                    this.RaisePropertyChanged("ServiceListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceListID {
            get {
                return this.ServiceListIDField;
            }
            set {
                if ((this.ServiceListIDField.Equals(value) != true)) {
                    this.ServiceListIDField = value;
                    this.RaisePropertyChanged("ServiceListID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchServiceRequestMaster", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchServiceRequestMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EqipmentCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EqipmentSubCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipementListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipementSubCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ServiceCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ServiceListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceRequestMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ServiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EqipmentCategory {
            get {
                return this.EqipmentCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EqipmentCategoryField, value) != true)) {
                    this.EqipmentCategoryField = value;
                    this.RaisePropertyChanged("EqipmentCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EqipmentSubCategory {
            get {
                return this.EqipmentSubCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EqipmentSubCategoryField, value) != true)) {
                    this.EqipmentSubCategoryField = value;
                    this.RaisePropertyChanged("EqipmentSubCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipementListID {
            get {
                return this.EquipementListIDField;
            }
            set {
                if ((this.EquipementListIDField.Equals(value) != true)) {
                    this.EquipementListIDField = value;
                    this.RaisePropertyChanged("EquipementListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipementSubCategoryID {
            get {
                return this.EquipementSubCategoryIDField;
            }
            set {
                if ((this.EquipementSubCategoryIDField.Equals(value) != true)) {
                    this.EquipementSubCategoryIDField = value;
                    this.RaisePropertyChanged("EquipementSubCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipmentCategoryID {
            get {
                return this.EquipmentCategoryIDField;
            }
            set {
                if ((this.EquipmentCategoryIDField.Equals(value) != true)) {
                    this.EquipmentCategoryIDField = value;
                    this.RaisePropertyChanged("EquipmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentList {
            get {
                return this.EquipmentListField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListField, value) != true)) {
                    this.EquipmentListField = value;
                    this.RaisePropertyChanged("EquipmentList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SRNo {
            get {
                return this.SRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SRNoField, value) != true)) {
                    this.SRNoField = value;
                    this.RaisePropertyChanged("SRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceCategory {
            get {
                return this.ServiceCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceCategoryField, value) != true)) {
                    this.ServiceCategoryField = value;
                    this.RaisePropertyChanged("ServiceCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ServiceCategoryID {
            get {
                return this.ServiceCategoryIDField;
            }
            set {
                if ((this.ServiceCategoryIDField.Equals(value) != true)) {
                    this.ServiceCategoryIDField = value;
                    this.RaisePropertyChanged("ServiceCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceList {
            get {
                return this.ServiceListField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceListField, value) != true)) {
                    this.ServiceListField = value;
                    this.RaisePropertyChanged("ServiceList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ServiceListID {
            get {
                return this.ServiceListIDField;
            }
            set {
                if ((this.ServiceListIDField.Equals(value) != true)) {
                    this.ServiceListIDField = value;
                    this.RaisePropertyChanged("ServiceListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceRequestMasterID {
            get {
                return this.ServiceRequestMasterIDField;
            }
            set {
                if ((this.ServiceRequestMasterIDField.Equals(value) != true)) {
                    this.ServiceRequestMasterIDField = value;
                    this.RaisePropertyChanged("ServiceRequestMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((this.ServiceTypeField.Equals(value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckServicelist", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class CheckServicelist : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceCatDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceListIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceCatDescription {
            get {
                return this.ServiceCatDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceCatDescriptionField, value) != true)) {
                    this.ServiceCatDescriptionField = value;
                    this.RaisePropertyChanged("ServiceCatDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceCategoryID {
            get {
                return this.ServiceCategoryIDField;
            }
            set {
                if ((this.ServiceCategoryIDField.Equals(value) != true)) {
                    this.ServiceCategoryIDField = value;
                    this.RaisePropertyChanged("ServiceCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceListDescription {
            get {
                return this.ServiceListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceListDescriptionField, value) != true)) {
                    this.ServiceListDescriptionField = value;
                    this.RaisePropertyChanged("ServiceListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceListID {
            get {
                return this.ServiceListIDField;
            }
            set {
                if ((this.ServiceListIDField.Equals(value) != true)) {
                    this.ServiceListIDField = value;
                    this.RaisePropertyChanged("ServiceListID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SavedServiceCategory", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SavedServiceCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceCatDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceCategoryIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceCatDescription {
            get {
                return this.ServiceCatDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceCatDescriptionField, value) != true)) {
                    this.ServiceCatDescriptionField = value;
                    this.RaisePropertyChanged("ServiceCatDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceCategoryID {
            get {
                return this.ServiceCategoryIDField;
            }
            set {
                if ((this.ServiceCategoryIDField.Equals(value) != true)) {
                    this.ServiceCategoryIDField = value;
                    this.RaisePropertyChanged("ServiceCategoryID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SavedServiceList", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SavedServiceList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceListIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceListDescription {
            get {
                return this.ServiceListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceListDescriptionField, value) != true)) {
                    this.ServiceListDescriptionField = value;
                    this.RaisePropertyChanged("ServiceListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceListID {
            get {
                return this.ServiceListIDField;
            }
            set {
                if ((this.ServiceListIDField.Equals(value) != true)) {
                    this.ServiceListIDField = value;
                    this.RaisePropertyChanged("ServiceListID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetServiceAttachment", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetServiceAttachment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationOfTheFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ServiceRequestDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceUploadIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UploadedByNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UploadedDateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationOfTheFile {
            get {
                return this.LocationOfTheFileField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationOfTheFileField, value) != true)) {
                    this.LocationOfTheFileField = value;
                    this.RaisePropertyChanged("LocationOfTheFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ServiceRequestDetailsID {
            get {
                return this.ServiceRequestDetailsIDField;
            }
            set {
                if ((this.ServiceRequestDetailsIDField.Equals(value) != true)) {
                    this.ServiceRequestDetailsIDField = value;
                    this.RaisePropertyChanged("ServiceRequestDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceUploadID {
            get {
                return this.ServiceUploadIDField;
            }
            set {
                if ((this.ServiceUploadIDField.Equals(value) != true)) {
                    this.ServiceUploadIDField = value;
                    this.RaisePropertyChanged("ServiceUploadID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UploadedByName {
            get {
                return this.UploadedByNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UploadedByNameField, value) != true)) {
                    this.UploadedByNameField = value;
                    this.RaisePropertyChanged("UploadedByName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UploadedDateTime {
            get {
                return this.UploadedDateTimeField;
            }
            set {
                if ((this.UploadedDateTimeField.Equals(value) != true)) {
                    this.UploadedDateTimeField = value;
                    this.RaisePropertyChanged("UploadedDateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetActiveServiceListvalue", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetActiveServiceListvalue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ServiceCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ServiceListIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ServiceCategoryID {
            get {
                return this.ServiceCategoryIDField;
            }
            set {
                if ((this.ServiceCategoryIDField.Equals(value) != true)) {
                    this.ServiceCategoryIDField = value;
                    this.RaisePropertyChanged("ServiceCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ServiceListID {
            get {
                return this.ServiceListIDField;
            }
            set {
                if ((this.ServiceListIDField.Equals(value) != true)) {
                    this.ServiceListIDField = value;
                    this.RaisePropertyChanged("ServiceListID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetServiceTempAttachment", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetServiceTempAttachment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationOfTheFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SINOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceRequestDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ServiceUploadIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UploadedByNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UploadedDateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationOfTheFile {
            get {
                return this.LocationOfTheFileField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationOfTheFileField, value) != true)) {
                    this.LocationOfTheFileField = value;
                    this.RaisePropertyChanged("LocationOfTheFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SINO {
            get {
                return this.SINOField;
            }
            set {
                if ((this.SINOField.Equals(value) != true)) {
                    this.SINOField = value;
                    this.RaisePropertyChanged("SINO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceRequestDetailsID {
            get {
                return this.ServiceRequestDetailsIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceRequestDetailsIDField, value) != true)) {
                    this.ServiceRequestDetailsIDField = value;
                    this.RaisePropertyChanged("ServiceRequestDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceUploadID {
            get {
                return this.ServiceUploadIDField;
            }
            set {
                if ((this.ServiceUploadIDField.Equals(value) != true)) {
                    this.ServiceUploadIDField = value;
                    this.RaisePropertyChanged("ServiceUploadID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UploadedByName {
            get {
                return this.UploadedByNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UploadedByNameField, value) != true)) {
                    this.UploadedByNameField = value;
                    this.RaisePropertyChanged("UploadedByName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UploadedDateTime {
            get {
                return this.UploadedDateTimeField;
            }
            set {
                if ((this.UploadedDateTimeField.Equals(value) != true)) {
                    this.UploadedDateTimeField = value;
                    this.RaisePropertyChanged("UploadedDateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRequestITMaster", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetRequestITMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReequestypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RequestITMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingcostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Corporate {
            get {
                return this.CorporateField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateField, value) != true)) {
                    this.CorporateField = value;
                    this.RaisePropertyChanged("Corporate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Facility {
            get {
                return this.FacilityField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityField, value) != true)) {
                    this.FacilityField = value;
                    this.RaisePropertyChanged("Facility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITRNo {
            get {
                return this.ITRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITRNoField, value) != true)) {
                    this.ITRNoField = value;
                    this.RaisePropertyChanged("ITRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedOnField, value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reequestype {
            get {
                return this.ReequestypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReequestypeField, value) != true)) {
                    this.ReequestypeField = value;
                    this.RaisePropertyChanged("Reequestype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RequestITMasterID {
            get {
                return this.RequestITMasterIDField;
            }
            set {
                if ((this.RequestITMasterIDField.Equals(value) != true)) {
                    this.RequestITMasterIDField = value;
                    this.RaisePropertyChanged("RequestITMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shippingcost {
            get {
                return this.ShippingcostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingcostField, value) != true)) {
                    this.ShippingcostField = value;
                    this.RaisePropertyChanged("Shippingcost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vendor {
            get {
                return this.VendorField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorField, value) != true)) {
                    this.VendorField = value;
                    this.RaisePropertyChanged("Vendor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetNonsuperAdminRequestITMaster", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetNonsuperAdminRequestITMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReequestypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RequestITMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Corporate {
            get {
                return this.CorporateField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateField, value) != true)) {
                    this.CorporateField = value;
                    this.RaisePropertyChanged("Corporate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Facility {
            get {
                return this.FacilityField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityField, value) != true)) {
                    this.FacilityField = value;
                    this.RaisePropertyChanged("Facility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITRNo {
            get {
                return this.ITRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITRNoField, value) != true)) {
                    this.ITRNoField = value;
                    this.RaisePropertyChanged("ITRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedOnField, value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reequestype {
            get {
                return this.ReequestypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReequestypeField, value) != true)) {
                    this.ReequestypeField = value;
                    this.RaisePropertyChanged("Reequestype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RequestITMasterID {
            get {
                return this.RequestITMasterIDField;
            }
            set {
                if ((this.RequestITMasterIDField.Equals(value) != true)) {
                    this.RequestITMasterIDField = value;
                    this.RaisePropertyChanged("RequestITMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vendor {
            get {
                return this.VendorField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorField, value) != true)) {
                    this.VendorField = value;
                    this.RaisePropertyChanged("Vendor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchITRequest", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchITRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReequestypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RequestITMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Corporate {
            get {
                return this.CorporateField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateField, value) != true)) {
                    this.CorporateField = value;
                    this.RaisePropertyChanged("Corporate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Facility {
            get {
                return this.FacilityField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityField, value) != true)) {
                    this.FacilityField = value;
                    this.RaisePropertyChanged("Facility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITRNo {
            get {
                return this.ITRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITRNoField, value) != true)) {
                    this.ITRNoField = value;
                    this.RaisePropertyChanged("ITRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reequestype {
            get {
                return this.ReequestypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReequestypeField, value) != true)) {
                    this.ReequestypeField = value;
                    this.RaisePropertyChanged("Reequestype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RequestITMasterID {
            get {
                return this.RequestITMasterIDField;
            }
            set {
                if ((this.RequestITMasterIDField.Equals(value) != true)) {
                    this.RequestITMasterIDField = value;
                    this.RaisePropertyChanged("RequestITMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vendor {
            get {
                return this.VendorField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorField, value) != true)) {
                    this.VendorField = value;
                    this.RaisePropertyChanged("Vendor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetITRequestDetailsbyMasterID", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetITRequestDetailsbyMasterID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipementListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipementSubCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ITRequestDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ITRequestMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LockedbyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceperUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipementListID {
            get {
                return this.EquipementListIDField;
            }
            set {
                if ((this.EquipementListIDField.Equals(value) != true)) {
                    this.EquipementListIDField = value;
                    this.RaisePropertyChanged("EquipementListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipementSubCategoryID {
            get {
                return this.EquipementSubCategoryIDField;
            }
            set {
                if ((this.EquipementSubCategoryIDField.Equals(value) != true)) {
                    this.EquipementSubCategoryIDField = value;
                    this.RaisePropertyChanged("EquipementSubCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentList {
            get {
                return this.EquipmentListField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListField, value) != true)) {
                    this.EquipmentListField = value;
                    this.RaisePropertyChanged("EquipmentList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategory {
            get {
                return this.EquipmentSubCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryField, value) != true)) {
                    this.EquipmentSubCategoryField = value;
                    this.RaisePropertyChanged("EquipmentSubCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ITRequestDetailID {
            get {
                return this.ITRequestDetailIDField;
            }
            set {
                if ((this.ITRequestDetailIDField.Equals(value) != true)) {
                    this.ITRequestDetailIDField = value;
                    this.RaisePropertyChanged("ITRequestDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ITRequestMasterID {
            get {
                return this.ITRequestMasterIDField;
            }
            set {
                if ((this.ITRequestMasterIDField.Equals(value) != true)) {
                    this.ITRequestMasterIDField = value;
                    this.RaisePropertyChanged("ITRequestMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((this.IsReadOnlyField.Equals(value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Lockedby {
            get {
                return this.LockedbyField;
            }
            set {
                if ((this.LockedbyField.Equals(value) != true)) {
                    this.LockedbyField = value;
                    this.RaisePropertyChanged("Lockedby");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderQuantity {
            get {
                return this.OrderQuantityField;
            }
            set {
                if ((this.OrderQuantityField.Equals(value) != true)) {
                    this.OrderQuantityField = value;
                    this.RaisePropertyChanged("OrderQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PriceperUnit {
            get {
                return this.PriceperUnitField;
            }
            set {
                if ((this.PriceperUnitField.Equals(value) != true)) {
                    this.PriceperUnitField = value;
                    this.RaisePropertyChanged("PriceperUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindEquipementsubcategoryFORIT", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindEquipementsubcategoryFORIT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipementSubCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipementSubCategoryID {
            get {
                return this.EquipementSubCategoryIDField;
            }
            set {
                if ((this.EquipementSubCategoryIDField.Equals(value) != true)) {
                    this.EquipementSubCategoryIDField = value;
                    this.RaisePropertyChanged("EquipementSubCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategoryDescription {
            get {
                return this.EquipmentSubCategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryDescriptionField, value) != true)) {
                    this.EquipmentSubCategoryDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentSubCategoryDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindEquipementListFORIT", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindEquipementListFORIT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipementListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipementListID {
            get {
                return this.EquipementListIDField;
            }
            set {
                if ((this.EquipementListIDField.Equals(value) != true)) {
                    this.EquipementListIDField = value;
                    this.RaisePropertyChanged("EquipementListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentListDescription {
            get {
                return this.EquipmentListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListDescriptionField, value) != true)) {
                    this.EquipmentListDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentListDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSerialNo", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetSerialNo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindRequestITPartsReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindRequestITPartsReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ITRequestDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderquantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceperUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReequestypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RequestITMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingcostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentListDescription {
            get {
                return this.EquipmentListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListDescriptionField, value) != true)) {
                    this.EquipmentListDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategoryDescription {
            get {
                return this.EquipmentSubCategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryDescriptionField, value) != true)) {
                    this.EquipmentSubCategoryDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentSubCategoryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITRNo {
            get {
                return this.ITRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ITRNoField, value) != true)) {
                    this.ITRNoField = value;
                    this.RaisePropertyChanged("ITRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ITRequestDetailID {
            get {
                return this.ITRequestDetailIDField;
            }
            set {
                if ((this.ITRequestDetailIDField.Equals(value) != true)) {
                    this.ITRequestDetailIDField = value;
                    this.RaisePropertyChanged("ITRequestDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Orderquantity {
            get {
                return this.OrderquantityField;
            }
            set {
                if ((this.OrderquantityField.Equals(value) != true)) {
                    this.OrderquantityField = value;
                    this.RaisePropertyChanged("Orderquantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PriceperUnit {
            get {
                return this.PriceperUnitField;
            }
            set {
                if ((this.PriceperUnitField.Equals(value) != true)) {
                    this.PriceperUnitField = value;
                    this.RaisePropertyChanged("PriceperUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reequestype {
            get {
                return this.ReequestypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReequestypeField, value) != true)) {
                    this.ReequestypeField = value;
                    this.RaisePropertyChanged("Reequestype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RequestITMasterID {
            get {
                return this.RequestITMasterIDField;
            }
            set {
                if ((this.RequestITMasterIDField.Equals(value) != true)) {
                    this.RequestITMasterIDField = value;
                    this.RaisePropertyChanged("RequestITMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Requestdate {
            get {
                return this.RequestdateField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestdateField, value) != true)) {
                    this.RequestdateField = value;
                    this.RaisePropertyChanged("Requestdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shippingcost {
            get {
                return this.ShippingcostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingcostField, value) != true)) {
                    this.ShippingcostField = value;
                    this.RaisePropertyChanged("Shippingcost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidITEquipment", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class ValidITEquipment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EditField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Edit {
            get {
                return this.EditField;
            }
            set {
                if ((this.EditField.Equals(value) != true)) {
                    this.EditField = value;
                    this.RaisePropertyChanged("Edit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindCapitalItemRequestReport", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindCapitalItemRequestReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CapitalItemDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CapitalItemMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> OrderQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PricePerUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CRNo {
            get {
                return this.CRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CRNoField, value) != true)) {
                    this.CRNoField = value;
                    this.RaisePropertyChanged("CRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CapitalItemDetailsID {
            get {
                return this.CapitalItemDetailsIDField;
            }
            set {
                if ((this.CapitalItemDetailsIDField.Equals(value) != true)) {
                    this.CapitalItemDetailsIDField = value;
                    this.RaisePropertyChanged("CapitalItemDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CapitalItemMasterID {
            get {
                return this.CapitalItemMasterIDField;
            }
            set {
                if ((this.CapitalItemMasterIDField.Equals(value) != true)) {
                    this.CapitalItemMasterIDField = value;
                    this.RaisePropertyChanged("CapitalItemMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentListDescription {
            get {
                return this.EquipmentListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListDescriptionField, value) != true)) {
                    this.EquipmentListDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategoryDescription {
            get {
                return this.EquipmentSubCategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryDescriptionField, value) != true)) {
                    this.EquipmentSubCategoryDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentSubCategoryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> OrderQuantity {
            get {
                return this.OrderQuantityField;
            }
            set {
                if ((this.OrderQuantityField.Equals(value) != true)) {
                    this.OrderQuantityField = value;
                    this.RaisePropertyChanged("OrderQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PricePerUnit {
            get {
                return this.PricePerUnitField;
            }
            set {
                if ((this.PricePerUnitField.Equals(value) != true)) {
                    this.PricePerUnitField = value;
                    this.RaisePropertyChanged("PricePerUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Requestdate {
            get {
                return this.RequestdateField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestdateField, value) != true)) {
                    this.RequestdateField = value;
                    this.RaisePropertyChanged("Requestdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCapitalItemMaster", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetCapitalItemMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ApprovedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalItemMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DeniedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ApprovedBy {
            get {
                return this.ApprovedByField;
            }
            set {
                if ((this.ApprovedByField.Equals(value) != true)) {
                    this.ApprovedByField = value;
                    this.RaisePropertyChanged("ApprovedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CRNo {
            get {
                return this.CRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CRNoField, value) != true)) {
                    this.CRNoField = value;
                    this.RaisePropertyChanged("CRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalItemMasterID {
            get {
                return this.CapitalItemMasterIDField;
            }
            set {
                if ((this.CapitalItemMasterIDField.Equals(value) != true)) {
                    this.CapitalItemMasterIDField = value;
                    this.RaisePropertyChanged("CapitalItemMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> DeniedBy {
            get {
                return this.DeniedByField;
            }
            set {
                if ((this.DeniedByField.Equals(value) != true)) {
                    this.DeniedByField = value;
                    this.RaisePropertyChanged("DeniedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status {
            get {
                return this.statusField;
            }
            set {
                if ((object.ReferenceEquals(this.statusField, value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchCapitalItemRequestMaster", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchCapitalItemRequestMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ApprovedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CapitalItemMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DeniedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ApprovedBy {
            get {
                return this.ApprovedByField;
            }
            set {
                if ((this.ApprovedByField.Equals(value) != true)) {
                    this.ApprovedByField = value;
                    this.RaisePropertyChanged("ApprovedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CRNo {
            get {
                return this.CRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CRNoField, value) != true)) {
                    this.CRNoField = value;
                    this.RaisePropertyChanged("CRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CapitalItemMasterID {
            get {
                return this.CapitalItemMasterIDField;
            }
            set {
                if ((this.CapitalItemMasterIDField.Equals(value) != true)) {
                    this.CapitalItemMasterIDField = value;
                    this.RaisePropertyChanged("CapitalItemMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> DeniedBy {
            get {
                return this.DeniedByField;
            }
            set {
                if ((this.DeniedByField.Equals(value) != true)) {
                    this.DeniedByField = value;
                    this.RaisePropertyChanged("DeniedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCost {
            get {
                return this.ShippingCostField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCostField, value) != true)) {
                    this.ShippingCostField = value;
                    this.RaisePropertyChanged("ShippingCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status {
            get {
                return this.statusField;
            }
            set {
                if ((object.ReferenceEquals(this.statusField, value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetLoginDetails", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetLoginDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRoleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRoleName {
            get {
                return this.UserRoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleNameField, value) != true)) {
                    this.UserRoleNameField = value;
                    this.RaisePropertyChanged("UserRoleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserInformation", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetUserInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsActiveField, value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNo {
            get {
                return this.PhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNoField, value) != true)) {
                    this.PhoneNoField = value;
                    this.RaisePropertyChanged("PhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetvendorDetails", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetvendorDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AllField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlternateEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> BuildingMaintenanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ITField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LastModitifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModitifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MachinePartsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RegularSuppliesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ServiceOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> XtnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vendortypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> All {
            get {
                return this.AllField;
            }
            set {
                if ((this.AllField.Equals(value) != true)) {
                    this.AllField = value;
                    this.RaisePropertyChanged("All");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlternateEmail {
            get {
                return this.AlternateEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateEmailField, value) != true)) {
                    this.AlternateEmailField = value;
                    this.RaisePropertyChanged("AlternateEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> BuildingMaintenance {
            get {
                return this.BuildingMaintenanceField;
            }
            set {
                if ((this.BuildingMaintenanceField.Equals(value) != true)) {
                    this.BuildingMaintenanceField = value;
                    this.RaisePropertyChanged("BuildingMaintenance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactEmail {
            get {
                return this.ContactEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactEmailField, value) != true)) {
                    this.ContactEmailField = value;
                    this.RaisePropertyChanged("ContactEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPhone {
            get {
                return this.ContactPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPhoneField, value) != true)) {
                    this.ContactPhoneField = value;
                    this.RaisePropertyChanged("ContactPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IT {
            get {
                return this.ITField;
            }
            set {
                if ((this.ITField.Equals(value) != true)) {
                    this.ITField = value;
                    this.RaisePropertyChanged("IT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LastModitifiedBy {
            get {
                return this.LastModitifiedByField;
            }
            set {
                if ((this.LastModitifiedByField.Equals(value) != true)) {
                    this.LastModitifiedByField = value;
                    this.RaisePropertyChanged("LastModitifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModitifiedOn {
            get {
                return this.LastModitifiedOnField;
            }
            set {
                if ((this.LastModitifiedOnField.Equals(value) != true)) {
                    this.LastModitifiedOnField = value;
                    this.RaisePropertyChanged("LastModitifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> MachineParts {
            get {
                return this.MachinePartsField;
            }
            set {
                if ((this.MachinePartsField.Equals(value) != true)) {
                    this.MachinePartsField = value;
                    this.RaisePropertyChanged("MachineParts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POEmail {
            get {
                return this.POEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.POEmailField, value) != true)) {
                    this.POEmailField = value;
                    this.RaisePropertyChanged("POEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> RegularSupplies {
            get {
                return this.RegularSuppliesField;
            }
            set {
                if ((this.RegularSuppliesField.Equals(value) != true)) {
                    this.RegularSuppliesField = value;
                    this.RaisePropertyChanged("RegularSupplies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ServiceOrder {
            get {
                return this.ServiceOrderField;
            }
            set {
                if ((this.ServiceOrderField.Equals(value) != true)) {
                    this.ServiceOrderField = value;
                    this.RaisePropertyChanged("ServiceOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Xtn {
            get {
                return this.XtnField;
            }
            set {
                if ((this.XtnField.Equals(value) != true)) {
                    this.XtnField = value;
                    this.RaisePropertyChanged("Xtn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vendortype {
            get {
                return this.vendortypeField;
            }
            set {
                if ((object.ReferenceEquals(this.vendortypeField, value) != true)) {
                    this.vendortypeField = value;
                    this.RaisePropertyChanged("vendortype");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindExistuser", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindExistuser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserDetails", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetUserDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> XtnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNo {
            get {
                return this.PhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNoField, value) != true)) {
                    this.PhoneNoField = value;
                    this.RaisePropertyChanged("PhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Xtn {
            get {
                return this.XtnField;
            }
            set {
                if ((this.XtnField.Equals(value) != true)) {
                    this.XtnField = value;
                    this.RaisePropertyChanged("Xtn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserRoleandFacility", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetUserRoleandFacility : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BudgetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserFacilityRoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Budget {
            get {
                return this.BudgetField;
            }
            set {
                if ((object.ReferenceEquals(this.BudgetField, value) != true)) {
                    this.BudgetField = value;
                    this.RaisePropertyChanged("Budget");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorporateName {
            get {
                return this.CorporateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateNameField, value) != true)) {
                    this.CorporateNameField = value;
                    this.RaisePropertyChanged("CorporateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserFacilityRoleID {
            get {
                return this.UserFacilityRoleIDField;
            }
            set {
                if ((this.UserFacilityRoleIDField.Equals(value) != true)) {
                    this.UserFacilityRoleIDField = value;
                    this.RaisePropertyChanged("UserFacilityRoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleField, value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindPermission", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindPermission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserRoleIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleField, value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserRoleID {
            get {
                return this.UserRoleIDField;
            }
            set {
                if ((this.UserRoleIDField.Equals(value) != true)) {
                    this.UserRoleIDField = value;
                    this.RaisePropertyChanged("UserRoleID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPermission", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetPermission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsEmailNotificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsViewOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MainMenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PermissionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SubMenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UserRoleIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsEdit {
            get {
                return this.IsEditField;
            }
            set {
                if ((this.IsEditField.Equals(value) != true)) {
                    this.IsEditField = value;
                    this.RaisePropertyChanged("IsEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsEmailNotification {
            get {
                return this.IsEmailNotificationField;
            }
            set {
                if ((this.IsEmailNotificationField.Equals(value) != true)) {
                    this.IsEmailNotificationField = value;
                    this.RaisePropertyChanged("IsEmailNotification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsViewOnly {
            get {
                return this.IsViewOnlyField;
            }
            set {
                if ((this.IsViewOnlyField.Equals(value) != true)) {
                    this.IsViewOnlyField = value;
                    this.RaisePropertyChanged("IsViewOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MainMenuID {
            get {
                return this.MainMenuIDField;
            }
            set {
                if ((this.MainMenuIDField.Equals(value) != true)) {
                    this.MainMenuIDField = value;
                    this.RaisePropertyChanged("MainMenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PermissionID {
            get {
                return this.PermissionIDField;
            }
            set {
                if ((this.PermissionIDField.Equals(value) != true)) {
                    this.PermissionIDField = value;
                    this.RaisePropertyChanged("PermissionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SubMenuID {
            get {
                return this.SubMenuIDField;
            }
            set {
                if ((this.SubMenuIDField.Equals(value) != true)) {
                    this.SubMenuIDField = value;
                    this.RaisePropertyChanged("SubMenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleField, value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UserRoleID {
            get {
                return this.UserRoleIDField;
            }
            set {
                if ((this.UserRoleIDField.Equals(value) != true)) {
                    this.UserRoleIDField = value;
                    this.RaisePropertyChanged("UserRoleID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetdrpMainMenu", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetdrpMainMenu : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageMainMenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PageMainMenuIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageMainMenu {
            get {
                return this.PageMainMenuField;
            }
            set {
                if ((object.ReferenceEquals(this.PageMainMenuField, value) != true)) {
                    this.PageMainMenuField = value;
                    this.RaisePropertyChanged("PageMainMenu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PageMainMenuID {
            get {
                return this.PageMainMenuIDField;
            }
            set {
                if ((this.PageMainMenuIDField.Equals(value) != true)) {
                    this.PageMainMenuIDField = value;
                    this.RaisePropertyChanged("PageMainMenuID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetdrpSubMenu", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetdrpSubMenu : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageSubMenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PageSubMenuIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageSubMenu {
            get {
                return this.PageSubMenuField;
            }
            set {
                if ((object.ReferenceEquals(this.PageSubMenuField, value) != true)) {
                    this.PageSubMenuField = value;
                    this.RaisePropertyChanged("PageSubMenu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PageSubMenuID {
            get {
                return this.PageSubMenuIDField;
            }
            set {
                if ((this.PageSubMenuIDField.Equals(value) != true)) {
                    this.PageSubMenuIDField = value;
                    this.RaisePropertyChanged("PageSubMenuID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetState", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetState : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvenValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> InvenkeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvenValue {
            get {
                return this.InvenValueField;
            }
            set {
                if ((object.ReferenceEquals(this.InvenValueField, value) != true)) {
                    this.InvenValueField = value;
                    this.RaisePropertyChanged("InvenValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Invenkey {
            get {
                return this.InvenkeyField;
            }
            set {
                if ((this.InvenkeyField.Equals(value) != true)) {
                    this.InvenkeyField = value;
                    this.RaisePropertyChanged("Invenkey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IsUserExist", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class IsUserExist : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetItemCategory", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetItemCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Usage {
            get {
                return this.UsageField;
            }
            set {
                if ((object.ReferenceEquals(this.UsageField, value) != true)) {
                    this.UsageField = value;
                    this.RaisePropertyChanged("Usage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchItemCategory", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchItemCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Usage {
            get {
                return this.UsageField;
            }
            set {
                if ((object.ReferenceEquals(this.UsageField, value) != true)) {
                    this.UsageField = value;
                    this.RaisePropertyChanged("Usage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ddlLoadValues", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class ddlLoadValues : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvenValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> InvenkeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvenValue {
            get {
                return this.InvenValueField;
            }
            set {
                if ((object.ReferenceEquals(this.InvenValueField, value) != true)) {
                    this.InvenValueField = value;
                    this.RaisePropertyChanged("InvenValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Invenkey {
            get {
                return this.InvenkeyField;
            }
            set {
                if ((this.InvenkeyField.Equals(value) != true)) {
                    this.InvenkeyField = value;
                    this.RaisePropertyChanged("Invenkey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindItem", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> EachPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GPBillingCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NDCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> NonStandardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> StandardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitPriceCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UnitPricevalueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UomNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveField, value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> EachPrice {
            get {
                return this.EachPriceField;
            }
            set {
                if ((this.EachPriceField.Equals(value) != true)) {
                    this.EachPriceField = value;
                    this.RaisePropertyChanged("EachPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GPBillingCode {
            get {
                return this.GPBillingCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GPBillingCodeField, value) != true)) {
                    this.GPBillingCodeField = value;
                    this.RaisePropertyChanged("GPBillingCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NDC {
            get {
                return this.NDCField;
            }
            set {
                if ((object.ReferenceEquals(this.NDCField, value) != true)) {
                    this.NDCField = value;
                    this.RaisePropertyChanged("NDC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> NonStandard {
            get {
                return this.NonStandardField;
            }
            set {
                if ((this.NonStandardField.Equals(value) != true)) {
                    this.NonStandardField = value;
                    this.RaisePropertyChanged("NonStandard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Standard {
            get {
                return this.StandardField;
            }
            set {
                if ((this.StandardField.Equals(value) != true)) {
                    this.StandardField = value;
                    this.RaisePropertyChanged("Standard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitPriceCurrency {
            get {
                return this.UnitPriceCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitPriceCurrencyField, value) != true)) {
                    this.UnitPriceCurrencyField = value;
                    this.RaisePropertyChanged("UnitPriceCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> UnitPricevalue {
            get {
                return this.UnitPricevalueField;
            }
            set {
                if ((this.UnitPricevalueField.Equals(value) != true)) {
                    this.UnitPricevalueField = value;
                    this.RaisePropertyChanged("UnitPricevalue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UomName {
            get {
                return this.UomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UomNameField, value) != true)) {
                    this.UomNameField = value;
                    this.RaisePropertyChanged("UomName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetItemMap", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetItemMap : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionWithCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ItemIDCkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemMapIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionWithCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescriptionWithCode {
            get {
                return this.ItemDescriptionWithCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionWithCodeField, value) != true)) {
                    this.ItemDescriptionWithCodeField = value;
                    this.RaisePropertyChanged("ItemDescriptionWithCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemIDField, value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ItemIDCk {
            get {
                return this.ItemIDCkField;
            }
            set {
                if ((this.ItemIDCkField.Equals(value) != true)) {
                    this.ItemIDCkField = value;
                    this.RaisePropertyChanged("ItemIDCk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemMapID {
            get {
                return this.ItemMapIDField;
            }
            set {
                if ((this.ItemMapIDField.Equals(value) != true)) {
                    this.ItemMapIDField = value;
                    this.RaisePropertyChanged("ItemMapID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescriptionWithCode {
            get {
                return this.VendorDescriptionWithCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionWithCodeField, value) != true)) {
                    this.VendorDescriptionWithCodeField = value;
                    this.RaisePropertyChanged("VendorDescriptionWithCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorItemID {
            get {
                return this.VendorItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorItemIDField, value) != true)) {
                    this.VendorItemIDField = value;
                    this.RaisePropertyChanged("VendorItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetItemMapping", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetItemMapping : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorItemID {
            get {
                return this.VendorItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorItemIDField, value) != true)) {
                    this.VendorItemIDField = value;
                    this.RaisePropertyChanged("VendorItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetItemDRD", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetItemDRD : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemShortName {
            get {
                return this.ItemShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemShortNameField, value) != true)) {
                    this.ItemShortNameField = value;
                    this.RaisePropertyChanged("ItemShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetDrpItemsByCategory", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetDrpItemsByCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemShortName {
            get {
                return this.ItemShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemShortNameField, value) != true)) {
                    this.ItemShortNameField = value;
                    this.RaisePropertyChanged("ItemShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ddlCurrency", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class ddlCurrency : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CurrencyID {
            get {
                return this.CurrencyIDField;
            }
            set {
                if ((this.CurrencyIDField.Equals(value) != true)) {
                    this.CurrencyIDField = value;
                    this.RaisePropertyChanged("CurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyName {
            get {
                return this.CurrencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyNameField, value) != true)) {
                    this.CurrencyNameField = value;
                    this.RaisePropertyChanged("CurrencyName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUom", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetUom : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsActivestrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UomIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UomNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsActivestr {
            get {
                return this.IsActivestrField;
            }
            set {
                if ((object.ReferenceEquals(this.IsActivestrField, value) != true)) {
                    this.IsActivestrField = value;
                    this.RaisePropertyChanged("IsActivestr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UomID {
            get {
                return this.UomIDField;
            }
            set {
                if ((this.UomIDField.Equals(value) != true)) {
                    this.UomIDField = value;
                    this.RaisePropertyChanged("UomID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UomName {
            get {
                return this.UomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UomNameField, value) != true)) {
                    this.UomNameField = value;
                    this.RaisePropertyChanged("UomName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCorporateFacility", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetCorporateFacility : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserFacilityRole", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class UserFacilityRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BudgetCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BudgetValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserFacilityRoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BudgetCurrency {
            get {
                return this.BudgetCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.BudgetCurrencyField, value) != true)) {
                    this.BudgetCurrencyField = value;
                    this.RaisePropertyChanged("BudgetCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BudgetValue {
            get {
                return this.BudgetValueField;
            }
            set {
                if ((this.BudgetValueField.Equals(value) != true)) {
                    this.BudgetValueField = value;
                    this.RaisePropertyChanged("BudgetValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserFacilityRoleID {
            get {
                return this.UserFacilityRoleIDField;
            }
            set {
                if ((this.UserFacilityRoleIDField.Equals(value) != true)) {
                    this.UserFacilityRoleIDField = value;
                    this.RaisePropertyChanged("UserFacilityRoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGPBilling", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetGPBilling : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GPBillingCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GPBillingIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GPBillingCode {
            get {
                return this.GPBillingCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GPBillingCodeField, value) != true)) {
                    this.GPBillingCodeField = value;
                    this.RaisePropertyChanged("GPBillingCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GPBillingID {
            get {
                return this.GPBillingIDField;
            }
            set {
                if ((this.GPBillingIDField.Equals(value) != true)) {
                    this.GPBillingIDField = value;
                    this.RaisePropertyChanged("GPBillingID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserPagePermission", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetUserPagePermission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsEmailNotificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsViewOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MainMenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SubMenuIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsEdit {
            get {
                return this.IsEditField;
            }
            set {
                if ((this.IsEditField.Equals(value) != true)) {
                    this.IsEditField = value;
                    this.RaisePropertyChanged("IsEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsEmailNotification {
            get {
                return this.IsEmailNotificationField;
            }
            set {
                if ((this.IsEmailNotificationField.Equals(value) != true)) {
                    this.IsEmailNotificationField = value;
                    this.RaisePropertyChanged("IsEmailNotification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsViewOnly {
            get {
                return this.IsViewOnlyField;
            }
            set {
                if ((this.IsViewOnlyField.Equals(value) != true)) {
                    this.IsViewOnlyField = value;
                    this.RaisePropertyChanged("IsViewOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MainMenuID {
            get {
                return this.MainMenuIDField;
            }
            set {
                if ((this.MainMenuIDField.Equals(value) != true)) {
                    this.MainMenuIDField = value;
                    this.RaisePropertyChanged("MainMenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SubMenuID {
            get {
                return this.SubMenuIDField;
            }
            set {
                if ((this.SubMenuIDField.Equals(value) != true)) {
                    this.SubMenuIDField = value;
                    this.RaisePropertyChanged("SubMenuID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetFacility", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetFacility : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetFacilityItemMap", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetFacilityItemMap : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityItemMapIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityItemMapID {
            get {
                return this.FacilityItemMapIDField;
            }
            set {
                if ((this.FacilityItemMapIDField.Equals(value) != true)) {
                    this.FacilityItemMapIDField = value;
                    this.RaisePropertyChanged("FacilityItemMapID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityName {
            get {
                return this.FacilityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityNameField, value) != true)) {
                    this.FacilityNameField = value;
                    this.RaisePropertyChanged("FacilityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindFacility", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindFacility : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdminEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdminPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdminPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BillXtnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillZipCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMRCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EmployeeCensusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GPAccountCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PatientCensusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TechEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TechPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TechPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TxWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> XtnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipcodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveField, value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdminEmail {
            get {
                return this.AdminEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminEmailField, value) != true)) {
                    this.AdminEmailField = value;
                    this.RaisePropertyChanged("AdminEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdminPerson {
            get {
                return this.AdminPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminPersonField, value) != true)) {
                    this.AdminPersonField = value;
                    this.RaisePropertyChanged("AdminPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdminPhone {
            get {
                return this.AdminPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminPhoneField, value) != true)) {
                    this.AdminPhoneField = value;
                    this.RaisePropertyChanged("AdminPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAddress1 {
            get {
                return this.BillAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.BillAddress1Field, value) != true)) {
                    this.BillAddress1Field = value;
                    this.RaisePropertyChanged("BillAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAddress2 {
            get {
                return this.BillAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.BillAddress2Field, value) != true)) {
                    this.BillAddress2Field = value;
                    this.RaisePropertyChanged("BillAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillCity {
            get {
                return this.BillCityField;
            }
            set {
                if ((object.ReferenceEquals(this.BillCityField, value) != true)) {
                    this.BillCityField = value;
                    this.RaisePropertyChanged("BillCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillFax {
            get {
                return this.BillFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.BillFaxField, value) != true)) {
                    this.BillFaxField = value;
                    this.RaisePropertyChanged("BillFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillPhone {
            get {
                return this.BillPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.BillPhoneField, value) != true)) {
                    this.BillPhoneField = value;
                    this.RaisePropertyChanged("BillPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillState {
            get {
                return this.BillStateField;
            }
            set {
                if ((object.ReferenceEquals(this.BillStateField, value) != true)) {
                    this.BillStateField = value;
                    this.RaisePropertyChanged("BillState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BillXtn {
            get {
                return this.BillXtnField;
            }
            set {
                if ((this.BillXtnField.Equals(value) != true)) {
                    this.BillXtnField = value;
                    this.RaisePropertyChanged("BillXtn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillZipCode {
            get {
                return this.BillZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillZipCodeField, value) != true)) {
                    this.BillZipCodeField = value;
                    this.RaisePropertyChanged("BillZipCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Corporate {
            get {
                return this.CorporateField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateField, value) != true)) {
                    this.CorporateField = value;
                    this.RaisePropertyChanged("Corporate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMRCode {
            get {
                return this.EMRCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EMRCodeField, value) != true)) {
                    this.EMRCodeField = value;
                    this.RaisePropertyChanged("EMRCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EmployeeCensus {
            get {
                return this.EmployeeCensusField;
            }
            set {
                if ((this.EmployeeCensusField.Equals(value) != true)) {
                    this.EmployeeCensusField = value;
                    this.RaisePropertyChanged("EmployeeCensus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GPAccountCode {
            get {
                return this.GPAccountCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GPAccountCodeField, value) != true)) {
                    this.GPAccountCodeField = value;
                    this.RaisePropertyChanged("GPAccountCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PatientCensus {
            get {
                return this.PatientCensusField;
            }
            set {
                if ((this.PatientCensusField.Equals(value) != true)) {
                    this.PatientCensusField = value;
                    this.RaisePropertyChanged("PatientCensus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TechEmail {
            get {
                return this.TechEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.TechEmailField, value) != true)) {
                    this.TechEmailField = value;
                    this.RaisePropertyChanged("TechEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TechPerson {
            get {
                return this.TechPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.TechPersonField, value) != true)) {
                    this.TechPersonField = value;
                    this.RaisePropertyChanged("TechPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TechPhone {
            get {
                return this.TechPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TechPhoneField, value) != true)) {
                    this.TechPhoneField = value;
                    this.RaisePropertyChanged("TechPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TxWeek {
            get {
                return this.TxWeekField;
            }
            set {
                if ((this.TxWeekField.Equals(value) != true)) {
                    this.TxWeekField = value;
                    this.RaisePropertyChanged("TxWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Xtn {
            get {
                return this.XtnField;
            }
            set {
                if ((this.XtnField.Equals(value) != true)) {
                    this.XtnField = value;
                    this.RaisePropertyChanged("Xtn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zipcode {
            get {
                return this.ZipcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipcodeField, value) != true)) {
                    this.ZipcodeField = value;
                    this.RaisePropertyChanged("Zipcode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetItemsbyFacilityID", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetItemsbyFacilityID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ItemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetFacilityShortName", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetFacilityShortName : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetFacilityVendorAccount", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetFacilityVendorAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityVendorAccIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ITField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MachinePartsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RegularSuppliesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ServiceOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAccount {
            get {
                return this.BillAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BillAccountField, value) != true)) {
                    this.BillAccountField = value;
                    this.RaisePropertyChanged("BillAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityVendorAccID {
            get {
                return this.FacilityVendorAccIDField;
            }
            set {
                if ((this.FacilityVendorAccIDField.Equals(value) != true)) {
                    this.FacilityVendorAccIDField = value;
                    this.RaisePropertyChanged("FacilityVendorAccID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IT {
            get {
                return this.ITField;
            }
            set {
                if ((this.ITField.Equals(value) != true)) {
                    this.ITField = value;
                    this.RaisePropertyChanged("IT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> MachineParts {
            get {
                return this.MachinePartsField;
            }
            set {
                if ((this.MachinePartsField.Equals(value) != true)) {
                    this.MachinePartsField = value;
                    this.RaisePropertyChanged("MachineParts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> RegularSupplies {
            get {
                return this.RegularSuppliesField;
            }
            set {
                if ((this.RegularSuppliesField.Equals(value) != true)) {
                    this.RegularSuppliesField = value;
                    this.RaisePropertyChanged("RegularSupplies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ServiceOrder {
            get {
                return this.ServiceOrderField;
            }
            set {
                if ((this.ServiceOrderField.Equals(value) != true)) {
                    this.ServiceOrderField = value;
                    this.RaisePropertyChanged("ServiceOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAccount {
            get {
                return this.ShipAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAccountField, value) != true)) {
                    this.ShipAccountField = value;
                    this.RaisePropertyChanged("ShipAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidateVendorOrderType", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class ValidateVendorOrderType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DaysToNotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DeliveryWindowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderdueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrdernumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VenOrderDueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> DaysToNotify {
            get {
                return this.DaysToNotifyField;
            }
            set {
                if ((this.DaysToNotifyField.Equals(value) != true)) {
                    this.DaysToNotifyField = value;
                    this.RaisePropertyChanged("DaysToNotify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeliveryDate {
            get {
                return this.DeliveryDateField;
            }
            set {
                if ((this.DeliveryDateField.Equals(value) != true)) {
                    this.DeliveryDateField = value;
                    this.RaisePropertyChanged("DeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> DeliveryWindow {
            get {
                return this.DeliveryWindowField;
            }
            set {
                if ((this.DeliveryWindowField.Equals(value) != true)) {
                    this.DeliveryWindowField = value;
                    this.RaisePropertyChanged("DeliveryWindow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderTypeField, value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderdueDate {
            get {
                return this.OrderdueDateField;
            }
            set {
                if ((this.OrderdueDateField.Equals(value) != true)) {
                    this.OrderdueDateField = value;
                    this.RaisePropertyChanged("OrderdueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Ordernumber {
            get {
                return this.OrdernumberField;
            }
            set {
                if ((this.OrdernumberField.Equals(value) != true)) {
                    this.OrdernumberField = value;
                    this.RaisePropertyChanged("Ordernumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VenOrderDueID {
            get {
                return this.VenOrderDueIDField;
            }
            set {
                if ((this.VenOrderDueIDField.Equals(value) != true)) {
                    this.VenOrderDueIDField = value;
                    this.RaisePropertyChanged("VenOrderDueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BindVendorOrderDue", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class BindVendorOrderDue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DaysToNotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderdueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VenOrderDueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> DaysToNotify {
            get {
                return this.DaysToNotifyField;
            }
            set {
                if ((this.DaysToNotifyField.Equals(value) != true)) {
                    this.DaysToNotifyField = value;
                    this.RaisePropertyChanged("DaysToNotify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeliveryDate {
            get {
                return this.DeliveryDateField;
            }
            set {
                if ((this.DeliveryDateField.Equals(value) != true)) {
                    this.DeliveryDateField = value;
                    this.RaisePropertyChanged("DeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderTypeField, value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderdueDate {
            get {
                return this.OrderdueDateField;
            }
            set {
                if ((this.OrderdueDateField.Equals(value) != true)) {
                    this.OrderdueDateField = value;
                    this.RaisePropertyChanged("OrderdueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VenOrderDueID {
            get {
                return this.VenOrderDueIDField;
            }
            set {
                if ((this.VenOrderDueIDField.Equals(value) != true)) {
                    this.VenOrderDueIDField = value;
                    this.RaisePropertyChanged("VenOrderDueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetFacilitySupply", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetFacilitySupply : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CensusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilitySupplyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> FactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsEmpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ParlevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> VendorOrderDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Census {
            get {
                return this.CensusField;
            }
            set {
                if ((this.CensusField.Equals(value) != true)) {
                    this.CensusField = value;
                    this.RaisePropertyChanged("Census");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilitySupplyID {
            get {
                return this.FacilitySupplyIDField;
            }
            set {
                if ((this.FacilitySupplyIDField.Equals(value) != true)) {
                    this.FacilitySupplyIDField = value;
                    this.RaisePropertyChanged("FacilitySupplyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Factor {
            get {
                return this.FactorField;
            }
            set {
                if ((this.FactorField.Equals(value) != true)) {
                    this.FactorField = value;
                    this.RaisePropertyChanged("Factor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsEmp {
            get {
                return this.IsEmpField;
            }
            set {
                if ((this.IsEmpField.Equals(value) != true)) {
                    this.IsEmpField = value;
                    this.RaisePropertyChanged("IsEmp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsPatient {
            get {
                return this.IsPatientField;
            }
            set {
                if ((this.IsPatientField.Equals(value) != true)) {
                    this.IsPatientField = value;
                    this.RaisePropertyChanged("IsPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Parlevel {
            get {
                return this.ParlevelField;
            }
            set {
                if ((this.ParlevelField.Equals(value) != true)) {
                    this.ParlevelField = value;
                    this.RaisePropertyChanged("Parlevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDescription {
            get {
                return this.VendorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDescriptionField, value) != true)) {
                    this.VendorDescriptionField = value;
                    this.RaisePropertyChanged("VendorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> VendorOrderDate {
            get {
                return this.VendorOrderDateField;
            }
            set {
                if ((this.VendorOrderDateField.Equals(value) != true)) {
                    this.VendorOrderDateField = value;
                    this.RaisePropertyChanged("VendorOrderDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetFacilitySupplyGird", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetFacilitySupplyGird : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CensusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilitySupplyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> FactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsEmpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsbothField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsotherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ParlevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> QtyPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorItemCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> VendorOrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorShortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Census {
            get {
                return this.CensusField;
            }
            set {
                if ((this.CensusField.Equals(value) != true)) {
                    this.CensusField = value;
                    this.RaisePropertyChanged("Census");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityShortName {
            get {
                return this.FacilityShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityShortNameField, value) != true)) {
                    this.FacilityShortNameField = value;
                    this.RaisePropertyChanged("FacilityShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilitySupplyID {
            get {
                return this.FacilitySupplyIDField;
            }
            set {
                if ((this.FacilitySupplyIDField.Equals(value) != true)) {
                    this.FacilitySupplyIDField = value;
                    this.RaisePropertyChanged("FacilitySupplyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Factor {
            get {
                return this.FactorField;
            }
            set {
                if ((this.FactorField.Equals(value) != true)) {
                    this.FactorField = value;
                    this.RaisePropertyChanged("Factor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsEmp {
            get {
                return this.IsEmpField;
            }
            set {
                if ((this.IsEmpField.Equals(value) != true)) {
                    this.IsEmpField = value;
                    this.RaisePropertyChanged("IsEmp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsPatient {
            get {
                return this.IsPatientField;
            }
            set {
                if ((this.IsPatientField.Equals(value) != true)) {
                    this.IsPatientField = value;
                    this.RaisePropertyChanged("IsPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Isboth {
            get {
                return this.IsbothField;
            }
            set {
                if ((this.IsbothField.Equals(value) != true)) {
                    this.IsbothField = value;
                    this.RaisePropertyChanged("Isboth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Isother {
            get {
                return this.IsotherField;
            }
            set {
                if ((this.IsotherField.Equals(value) != true)) {
                    this.IsotherField = value;
                    this.RaisePropertyChanged("Isother");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Parlevel {
            get {
                return this.ParlevelField;
            }
            set {
                if ((this.ParlevelField.Equals(value) != true)) {
                    this.ParlevelField = value;
                    this.RaisePropertyChanged("Parlevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> QtyPack {
            get {
                return this.QtyPackField;
            }
            set {
                if ((this.QtyPackField.Equals(value) != true)) {
                    this.QtyPackField = value;
                    this.RaisePropertyChanged("QtyPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorItemCode {
            get {
                return this.VendorItemCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorItemCodeField, value) != true)) {
                    this.VendorItemCodeField = value;
                    this.RaisePropertyChanged("VendorItemCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> VendorOrderDate {
            get {
                return this.VendorOrderDateField;
            }
            set {
                if ((this.VendorOrderDateField.Equals(value) != true)) {
                    this.VendorOrderDateField = value;
                    this.RaisePropertyChanged("VendorOrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorShortName {
            get {
                return this.VendorShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorShortNameField, value) != true)) {
                    this.VendorShortNameField = value;
                    this.RaisePropertyChanged("VendorShortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetEquipmentCategory", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetEquipmentCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentCatDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipmentCategoryIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentCatDescription {
            get {
                return this.EquipmentCatDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentCatDescriptionField, value) != true)) {
                    this.EquipmentCatDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentCatDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipmentCategoryID {
            get {
                return this.EquipmentCategoryIDField;
            }
            set {
                if ((this.EquipmentCategoryIDField.Equals(value) != true)) {
                    this.EquipmentCategoryIDField = value;
                    this.RaisePropertyChanged("EquipmentCategoryID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetEquipementList", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetEquipementList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipementListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipementListID {
            get {
                return this.EquipementListIDField;
            }
            set {
                if ((this.EquipementListIDField.Equals(value) != true)) {
                    this.EquipementListIDField = value;
                    this.RaisePropertyChanged("EquipementListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentListDescription {
            get {
                return this.EquipmentListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListDescriptionField, value) != true)) {
                    this.EquipmentListDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentListDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMachinemasterDetails", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetMachinemasterDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipementListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipementListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipementSubCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GpAccountCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HoursonthemachineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MachineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturedyearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarrantyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipementList {
            get {
                return this.EquipementListField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipementListField, value) != true)) {
                    this.EquipementListField = value;
                    this.RaisePropertyChanged("EquipementList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipementListID {
            get {
                return this.EquipementListIDField;
            }
            set {
                if ((this.EquipementListIDField.Equals(value) != true)) {
                    this.EquipementListIDField = value;
                    this.RaisePropertyChanged("EquipementListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipementSubCategoryID {
            get {
                return this.EquipementSubCategoryIDField;
            }
            set {
                if ((this.EquipementSubCategoryIDField.Equals(value) != true)) {
                    this.EquipementSubCategoryIDField = value;
                    this.RaisePropertyChanged("EquipementSubCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentCategory {
            get {
                return this.EquipmentCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentCategoryField, value) != true)) {
                    this.EquipmentCategoryField = value;
                    this.RaisePropertyChanged("EquipmentCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipmentCategoryID {
            get {
                return this.EquipmentCategoryIDField;
            }
            set {
                if ((this.EquipmentCategoryIDField.Equals(value) != true)) {
                    this.EquipmentCategoryIDField = value;
                    this.RaisePropertyChanged("EquipmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategory {
            get {
                return this.EquipmentSubCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryField, value) != true)) {
                    this.EquipmentSubCategoryField = value;
                    this.RaisePropertyChanged("EquipmentSubCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GpAccountCode {
            get {
                return this.GpAccountCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GpAccountCodeField, value) != true)) {
                    this.GpAccountCodeField = value;
                    this.RaisePropertyChanged("GpAccountCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Hoursonthemachine {
            get {
                return this.HoursonthemachineField;
            }
            set {
                if ((this.HoursonthemachineField.Equals(value) != true)) {
                    this.HoursonthemachineField = value;
                    this.RaisePropertyChanged("Hoursonthemachine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MachineID {
            get {
                return this.MachineIDField;
            }
            set {
                if ((this.MachineIDField.Equals(value) != true)) {
                    this.MachineIDField = value;
                    this.RaisePropertyChanged("MachineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturedyear {
            get {
                return this.ManufacturedyearField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturedyearField, value) != true)) {
                    this.ManufacturedyearField = value;
                    this.RaisePropertyChanged("Manufacturedyear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Warranty {
            get {
                return this.WarrantyField;
            }
            set {
                if ((object.ReferenceEquals(this.WarrantyField, value) != true)) {
                    this.WarrantyField = value;
                    this.RaisePropertyChanged("Warranty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMachineMasterbasedMachineID", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetMachineMasterbasedMachineID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipementListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipementSubcategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipmentCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GpAccountCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HoursonthemachineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MachineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturedyearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarrantyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipementList {
            get {
                return this.EquipementListField;
            }
            set {
                if ((this.EquipementListField.Equals(value) != true)) {
                    this.EquipementListField = value;
                    this.RaisePropertyChanged("EquipementList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipementSubcategory {
            get {
                return this.EquipementSubcategoryField;
            }
            set {
                if ((this.EquipementSubcategoryField.Equals(value) != true)) {
                    this.EquipementSubcategoryField = value;
                    this.RaisePropertyChanged("EquipementSubcategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipmentCategory {
            get {
                return this.EquipmentCategoryField;
            }
            set {
                if ((this.EquipmentCategoryField.Equals(value) != true)) {
                    this.EquipmentCategoryField = value;
                    this.RaisePropertyChanged("EquipmentCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityDescription {
            get {
                return this.FacilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityDescriptionField, value) != true)) {
                    this.FacilityDescriptionField = value;
                    this.RaisePropertyChanged("FacilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GpAccountCode {
            get {
                return this.GpAccountCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GpAccountCodeField, value) != true)) {
                    this.GpAccountCodeField = value;
                    this.RaisePropertyChanged("GpAccountCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Hoursonthemachine {
            get {
                return this.HoursonthemachineField;
            }
            set {
                if ((this.HoursonthemachineField.Equals(value) != true)) {
                    this.HoursonthemachineField = value;
                    this.RaisePropertyChanged("Hoursonthemachine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MachineID {
            get {
                return this.MachineIDField;
            }
            set {
                if ((this.MachineIDField.Equals(value) != true)) {
                    this.MachineIDField = value;
                    this.RaisePropertyChanged("MachineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturedyear {
            get {
                return this.ManufacturedyearField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturedyearField, value) != true)) {
                    this.ManufacturedyearField = value;
                    this.RaisePropertyChanged("Manufacturedyear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Warranty {
            get {
                return this.WarrantyField;
            }
            set {
                if ((object.ReferenceEquals(this.WarrantyField, value) != true)) {
                    this.WarrantyField = value;
                    this.RaisePropertyChanged("Warranty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchMachinemasterdetails", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SearchMachinemasterdetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipementListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSubCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GpAccountCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HoursonthemachineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MachineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturedyearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarrantyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipementList {
            get {
                return this.EquipementListField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipementListField, value) != true)) {
                    this.EquipementListField = value;
                    this.RaisePropertyChanged("EquipementList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentCategory {
            get {
                return this.EquipmentCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentCategoryField, value) != true)) {
                    this.EquipmentCategoryField = value;
                    this.RaisePropertyChanged("EquipmentCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSubCategory {
            get {
                return this.EquipmentSubCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSubCategoryField, value) != true)) {
                    this.EquipmentSubCategoryField = value;
                    this.RaisePropertyChanged("EquipmentSubCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GpAccountCode {
            get {
                return this.GpAccountCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GpAccountCodeField, value) != true)) {
                    this.GpAccountCodeField = value;
                    this.RaisePropertyChanged("GpAccountCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Hoursonthemachine {
            get {
                return this.HoursonthemachineField;
            }
            set {
                if ((this.HoursonthemachineField.Equals(value) != true)) {
                    this.HoursonthemachineField = value;
                    this.RaisePropertyChanged("Hoursonthemachine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MachineID {
            get {
                return this.MachineIDField;
            }
            set {
                if ((this.MachineIDField.Equals(value) != true)) {
                    this.MachineIDField = value;
                    this.RaisePropertyChanged("MachineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturedyear {
            get {
                return this.ManufacturedyearField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturedyearField, value) != true)) {
                    this.ManufacturedyearField = value;
                    this.RaisePropertyChanged("Manufacturedyear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Warranty {
            get {
                return this.WarrantyField;
            }
            set {
                if ((object.ReferenceEquals(this.WarrantyField, value) != true)) {
                    this.WarrantyField = value;
                    this.RaisePropertyChanged("Warranty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckEquipmentlist", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class CheckEquipmentlist : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipementCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipementListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentCatDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipementCategoryID {
            get {
                return this.EquipementCategoryIDField;
            }
            set {
                if ((this.EquipementCategoryIDField.Equals(value) != true)) {
                    this.EquipementCategoryIDField = value;
                    this.RaisePropertyChanged("EquipementCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipementListID {
            get {
                return this.EquipementListIDField;
            }
            set {
                if ((this.EquipementListIDField.Equals(value) != true)) {
                    this.EquipementListIDField = value;
                    this.RaisePropertyChanged("EquipementListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentCatDescription {
            get {
                return this.EquipmentCatDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentCatDescriptionField, value) != true)) {
                    this.EquipmentCatDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentCatDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentListDescription {
            get {
                return this.EquipmentListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListDescriptionField, value) != true)) {
                    this.EquipmentListDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentListDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SavedEquipmentCategory", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SavedEquipmentCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentCatDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long equipmentcategoryIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentCatDescription {
            get {
                return this.EquipmentCatDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentCatDescriptionField, value) != true)) {
                    this.EquipmentCatDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentCatDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long equipmentcategoryID {
            get {
                return this.equipmentcategoryIDField;
            }
            set {
                if ((this.equipmentcategoryIDField.Equals(value) != true)) {
                    this.equipmentcategoryIDField = value;
                    this.RaisePropertyChanged("equipmentcategoryID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SavedEquipmentList", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class SavedEquipmentList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipementListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentListDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipementListID {
            get {
                return this.EquipementListIDField;
            }
            set {
                if ((this.EquipementListIDField.Equals(value) != true)) {
                    this.EquipementListIDField = value;
                    this.RaisePropertyChanged("EquipementListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentListDescription {
            get {
                return this.EquipmentListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentListDescriptionField, value) != true)) {
                    this.EquipmentListDescriptionField = value;
                    this.RaisePropertyChanged("EquipmentListDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetActiveEquipementListvalue", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetActiveEquipementListvalue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipementListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> EquipmentCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipementList {
            get {
                return this.EquipementListField;
            }
            set {
                if ((this.EquipementListField.Equals(value) != true)) {
                    this.EquipementListField = value;
                    this.RaisePropertyChanged("EquipementList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> EquipmentCategory {
            get {
                return this.EquipmentCategoryField;
            }
            set {
                if ((this.EquipmentCategoryField.Equals(value) != true)) {
                    this.EquipmentCategoryField = value;
                    this.RaisePropertyChanged("EquipmentCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetNonsuperAdminMedicalSupplyMaster", Namespace="http://schemas.datacontract.org/2004/07/Inventroy.Service")]
    [System.SerializableAttribute()]
    public partial class GetNonsuperAdminMedicalSupplyMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorporateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorporateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MedicalSuppliesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VendorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Corporate {
            get {
                return this.CorporateField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporateField, value) != true)) {
                    this.CorporateField = value;
                    this.RaisePropertyChanged("Corporate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorporateID {
            get {
                return this.CorporateIDField;
            }
            set {
                if ((this.CorporateIDField.Equals(value) != true)) {
                    this.CorporateIDField = value;
                    this.RaisePropertyChanged("CorporateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Facility {
            get {
                return this.FacilityField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityField, value) != true)) {
                    this.FacilityField = value;
                    this.RaisePropertyChanged("Facility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((this.LastModifiedByField.Equals(value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedOnField, value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicalSuppliesID {
            get {
                return this.MedicalSuppliesIDField;
            }
            set {
                if ((this.MedicalSuppliesIDField.Equals(value) != true)) {
                    this.MedicalSuppliesIDField = value;
                    this.RaisePropertyChanged("MedicalSuppliesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderPeriod {
            get {
                return this.OrderPeriodField;
            }
            set {
                if ((this.OrderPeriodField.Equals(value) != true)) {
                    this.OrderPeriodField = value;
                    this.RaisePropertyChanged("OrderPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((this.OrderTypeField.Equals(value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRNo {
            get {
                return this.PRNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PRNoField, value) != true)) {
                    this.PRNoField = value;
                    this.RaisePropertyChanged("PRNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shipping {
            get {
                return this.ShippingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingField, value) != true)) {
                    this.ShippingField = value;
                    this.RaisePropertyChanged("Shipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeDelivery {
            get {
                return this.TimeDeliveryField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeDeliveryField, value) != true)) {
                    this.TimeDeliveryField = value;
                    this.RaisePropertyChanged("TimeDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vendor {
            get {
                return this.VendorField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorField, value) != true)) {
                    this.VendorField = value;
                    this.RaisePropertyChanged("Vendor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Inventoryserref.IInventoryService")]
    public interface IInventoryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetVendorItemMap", ReplyAction="http://tempuri.org/IInventoryService/GetVendorItemMapResponse")]
        Inventory.Inventoryserref.SearchVendorItemMap[] GetVendorItemMap(Inventory.Inventoryserref.BALItemMap argclsVendorItemMap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetVendorItemMap", ReplyAction="http://tempuri.org/IInventoryService/GetVendorItemMapResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchVendorItemMap[]> GetVendorItemMapAsync(Inventory.Inventoryserref.BALItemMap argclsVendorItemMap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchUserDetails", ReplyAction="http://tempuri.org/IInventoryService/SearchUserDetailsResponse")]
        Inventory.Inventoryserref.SearchUserDetails[] SearchUserDetails(Inventory.Inventoryserref.BALUser argclsUserDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchUserDetails", ReplyAction="http://tempuri.org/IInventoryService/SearchUserDetailsResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchUserDetails[]> SearchUserDetailsAsync(Inventory.Inventoryserref.BALUser argclsUserDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteUserDetails", ReplyAction="http://tempuri.org/IInventoryService/DeleteUserDetailsResponse")]
        string DeleteUserDetails(long UserID, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteUserDetails", ReplyAction="http://tempuri.org/IInventoryService/DeleteUserDetailsResponse")]
        System.Threading.Tasks.Task<string> DeleteUserDetailsAsync(long UserID, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/chkvalidcorporate", ReplyAction="http://tempuri.org/IInventoryService/chkvalidcorporateResponse")]
        Inventory.Inventoryserref.chkvalidcorporate[] chkvalidcorporate(Inventory.Inventoryserref.BALCorporate argcorporate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/chkvalidcorporate", ReplyAction="http://tempuri.org/IInventoryService/chkvalidcorporateResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.chkvalidcorporate[]> chkvalidcorporateAsync(Inventory.Inventoryserref.BALCorporate argcorporate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCategoryByListVendorID", ReplyAction="http://tempuri.org/IInventoryService/GetCategoryByListVendorIDResponse")]
        Inventory.Inventoryserref.GetCategoryByListVendorID[] GetCategoryByListVendorID(string ListVendorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCategoryByListVendorID", ReplyAction="http://tempuri.org/IInventoryService/GetCategoryByListVendorIDResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCategoryByListVendorID[]> GetCategoryByListVendorIDAsync(string ListVendorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchCapitalReceivingSummaryReport", ReplyAction="http://tempuri.org/IInventoryService/SearchCapitalReceivingSummaryReportResponse")]
        Inventory.Inventoryserref.SearchCapitalReceivingSummaryReport[] SearchCapitalReceivingSummaryReport(Inventory.Inventoryserref.BALCapitalReceiving argclsCRMasterReceive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchCapitalReceivingSummaryReport", ReplyAction="http://tempuri.org/IInventoryService/SearchCapitalReceivingSummaryReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchCapitalReceivingSummaryReport[]> SearchCapitalReceivingSummaryReportAsync(Inventory.Inventoryserref.BALCapitalReceiving argclsCRMasterReceive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchITReceivingSummaryReport", ReplyAction="http://tempuri.org/IInventoryService/SearchITReceivingSummaryReportResponse")]
        Inventory.Inventoryserref.SearchITReceivingSummaryReport[] SearchITReceivingSummaryReport(Inventory.Inventoryserref.BALRequestITReceiving argInsITRequestMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchITReceivingSummaryReport", ReplyAction="http://tempuri.org/IInventoryService/SearchITReceivingSummaryReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchITReceivingSummaryReport[]> SearchITReceivingSummaryReportAsync(Inventory.Inventoryserref.BALRequestITReceiving argInsITRequestMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchMachinePartsReceiveSummaryReport", ReplyAction="http://tempuri.org/IInventoryService/SearchMachinePartsReceiveSummaryReportRespon" +
            "se")]
        Inventory.Inventoryserref.SearchMachinePartsReceiveSummaryReport[] SearchMachinePartsReceiveSummaryReport(Inventory.Inventoryserref.BALMachinePartsReceiveOrder argclsMPRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchMachinePartsReceiveSummaryReport", ReplyAction="http://tempuri.org/IInventoryService/SearchMachinePartsReceiveSummaryReportRespon" +
            "se")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchMachinePartsReceiveSummaryReport[]> SearchMachinePartsReceiveSummaryReportAsync(Inventory.Inventoryserref.BALMachinePartsReceiveOrder argclsMPRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchMedicalSuppliesReceivingSummaryReport", ReplyAction="http://tempuri.org/IInventoryService/SearchMedicalSuppliesReceivingSummaryReportR" +
            "esponse")]
        Inventory.Inventoryserref.SearchMedicalSuppliesReceivingSummaryReport[] SearchMedicalSuppliesReceivingSummaryReport(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argclsMedicalSuppliesRec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchMedicalSuppliesReceivingSummaryReport", ReplyAction="http://tempuri.org/IInventoryService/SearchMedicalSuppliesReceivingSummaryReportR" +
            "esponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchMedicalSuppliesReceivingSummaryReport[]> SearchMedicalSuppliesReceivingSummaryReportAsync(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argclsMedicalSuppliesRec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/ValidFaciliityAccountCode", ReplyAction="http://tempuri.org/IInventoryService/ValidFaciliityAccountCodeResponse")]
        Inventory.Inventoryserref.ValidFaciliityAccountCode[] ValidFaciliityAccountCode(string FacilityAccountCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/ValidFaciliityAccountCode", ReplyAction="http://tempuri.org/IInventoryService/ValidFaciliityAccountCodeResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.ValidFaciliityAccountCode[]> ValidFaciliityAccountCodeAsync(string FacilityAccountCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchVendorOrderType", ReplyAction="http://tempuri.org/IInventoryService/SearchVendorOrderTypeResponse")]
        Inventory.Inventoryserref.SearchVendorOrderType[] SearchVendorOrderType(Inventory.Inventoryserref.BALVendorOrderDue argclsvendorOrderDue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchVendorOrderType", ReplyAction="http://tempuri.org/IInventoryService/SearchVendorOrderTypeResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchVendorOrderType[]> SearchVendorOrderTypeAsync(Inventory.Inventoryserref.BALVendorOrderDue argclsvendorOrderDue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetVendorOrderDue", ReplyAction="http://tempuri.org/IInventoryService/GetVendorOrderDueResponse")]
        Inventory.Inventoryserref.GetVendorOrderDue[] GetVendorOrderDue(Inventory.Inventoryserref.BALVendorOrderDue argclsvendorOrderDue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetVendorOrderDue", ReplyAction="http://tempuri.org/IInventoryService/GetVendorOrderDueResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetVendorOrderDue[]> GetVendorOrderDueAsync(Inventory.Inventoryserref.BALVendorOrderDue argclsvendorOrderDue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/CheckVendorOrderDue", ReplyAction="http://tempuri.org/IInventoryService/CheckVendorOrderDueResponse")]
        Inventory.Inventoryserref.CheckVendorOrderDue[] CheckVendorOrderDue(long CorporateID, long FacilityID, long VendorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/CheckVendorOrderDue", ReplyAction="http://tempuri.org/IInventoryService/CheckVendorOrderDueResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.CheckVendorOrderDue[]> CheckVendorOrderDueAsync(long CorporateID, long FacilityID, long VendorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetItem", ReplyAction="http://tempuri.org/IInventoryService/GetItemResponse")]
        Inventory.Inventoryserref.GetItem[] GetItem();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetItem", ReplyAction="http://tempuri.org/IInventoryService/GetItemResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetItem[]> GetItemAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetVendor", ReplyAction="http://tempuri.org/IInventoryService/GetVendorResponse")]
        Inventory.Inventoryserref.GetVendor[] GetVendor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetVendor", ReplyAction="http://tempuri.org/IInventoryService/GetVendorResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetVendor[]> GetVendorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMonthlyUsageReport", ReplyAction="http://tempuri.org/IInventoryService/GetMonthlyUsageReportResponse")]
        System.Data.DataSet GetMonthlyUsageReport(Inventory.Inventoryserref.BALReport argreport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMonthlyUsageReport", ReplyAction="http://tempuri.org/IInventoryService/GetMonthlyUsageReportResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMonthlyUsageReportAsync(Inventory.Inventoryserref.BALReport argreport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMonthlyPurchaseReport", ReplyAction="http://tempuri.org/IInventoryService/GetMonthlyPurchaseReportResponse")]
        System.Data.DataSet GetMonthlyPurchaseReport(Inventory.Inventoryserref.BALReport argreport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMonthlyPurchaseReport", ReplyAction="http://tempuri.org/IInventoryService/GetMonthlyPurchaseReportResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMonthlyPurchaseReportAsync(Inventory.Inventoryserref.BALReport argreport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMonthlyEndingReport", ReplyAction="http://tempuri.org/IInventoryService/GetMonthlyEndingReportResponse")]
        System.Data.DataSet GetMonthlyEndingReport(Inventory.Inventoryserref.BALReport argreport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMonthlyEndingReport", ReplyAction="http://tempuri.org/IInventoryService/GetMonthlyEndingReportResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMonthlyEndingReportAsync(Inventory.Inventoryserref.BALReport argreport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCumUsageReport", ReplyAction="http://tempuri.org/IInventoryService/GetCumUsageReportResponse")]
        System.Data.DataSet GetCumUsageReport(Inventory.Inventoryserref.BALReport argreport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCumUsageReport", ReplyAction="http://tempuri.org/IInventoryService/GetCumUsageReportResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCumUsageReportAsync(Inventory.Inventoryserref.BALReport argreport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCumulativeUsageReportBySingleItem", ReplyAction="http://tempuri.org/IInventoryService/GetCumulativeUsageReportBySingleItemResponse" +
            "")]
        System.Data.DataSet GetCumulativeUsageReportBySingleItem(Inventory.Inventoryserref.BALReport argreport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCumulativeUsageReportBySingleItem", ReplyAction="http://tempuri.org/IInventoryService/GetCumulativeUsageReportBySingleItemResponse" +
            "")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCumulativeUsageReportBySingleItemAsync(Inventory.Inventoryserref.BALReport argreport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMonthlyInventoryReport", ReplyAction="http://tempuri.org/IInventoryService/GetMonthlyInventoryReportResponse")]
        System.Data.DataSet GetMonthlyInventoryReport(Inventory.Inventoryserref.BALReport argreport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMonthlyInventoryReport", ReplyAction="http://tempuri.org/IInventoryService/GetMonthlyInventoryReportResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMonthlyInventoryReportAsync(Inventory.Inventoryserref.BALReport argreport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCostPertxReport", ReplyAction="http://tempuri.org/IInventoryService/GetCostPertxReportResponse")]
        System.Data.DataSet GetCostPertxReport(Inventory.Inventoryserref.BALReport argreport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCostPertxReport", ReplyAction="http://tempuri.org/IInventoryService/GetCostPertxReportResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCostPertxReportAsync(Inventory.Inventoryserref.BALReport argreport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMonthlyDrugReport", ReplyAction="http://tempuri.org/IInventoryService/GetMonthlyDrugReportResponse")]
        System.Data.DataSet GetMonthlyDrugReport(Inventory.Inventoryserref.BALReport argreport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMonthlyDrugReport", ReplyAction="http://tempuri.org/IInventoryService/GetMonthlyDrugReportResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMonthlyDrugReportAsync(Inventory.Inventoryserref.BALReport argreport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteVendorOrderDue", ReplyAction="http://tempuri.org/IInventoryService/DeleteVendorOrderDueResponse")]
        string DeleteVendorOrderDue(Inventory.Inventoryserref.BALVendorOrderDue argvendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteVendorOrderDue", ReplyAction="http://tempuri.org/IInventoryService/DeleteVendorOrderDueResponse")]
        System.Threading.Tasks.Task<string> DeleteVendorOrderDueAsync(Inventory.Inventoryserref.BALVendorOrderDue argvendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindPermissionforUser", ReplyAction="http://tempuri.org/IInventoryService/BindPermissionforUserResponse")]
        Inventory.Inventoryserref.BindPermissionforUser[] BindPermissionforUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindPermissionforUser", ReplyAction="http://tempuri.org/IInventoryService/BindPermissionforUserResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindPermissionforUser[]> BindPermissionforUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetUserCredentials", ReplyAction="http://tempuri.org/IInventoryService/GetUserCredentialsResponse")]
        System.Data.DataSet GetUserCredentials(Inventory.Inventoryserref.BALUser arguser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetUserCredentials", ReplyAction="http://tempuri.org/IInventoryService/GetUserCredentialsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUserCredentialsAsync(Inventory.Inventoryserref.BALUser arguser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/ActivityTracker", ReplyAction="http://tempuri.org/IInventoryService/ActivityTrackerResponse")]
        string ActivityTracker(Inventory.Inventoryserref.BALActivityTracking argactivitytrack);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/ActivityTracker", ReplyAction="http://tempuri.org/IInventoryService/ActivityTrackerResponse")]
        System.Threading.Tasks.Task<string> ActivityTrackerAsync(Inventory.Inventoryserref.BALActivityTracking argactivitytrack);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindITReceivingDetailsReport", ReplyAction="http://tempuri.org/IInventoryService/BindITReceivingDetailsReportResponse")]
        Inventory.Inventoryserref.BindITReceivingDetailsReport[] BindITReceivingDetailsReport(long ITRequestMasterID, long ITReceivingMasterID, long LoggedInBy, string Filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindITReceivingDetailsReport", ReplyAction="http://tempuri.org/IInventoryService/BindITReceivingDetailsReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindITReceivingDetailsReport[]> BindITReceivingDetailsReportAsync(long ITRequestMasterID, long ITReceivingMasterID, long LoggedInBy, string Filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindITReceivingDetailsSubReport", ReplyAction="http://tempuri.org/IInventoryService/BindITReceivingDetailsSubReportResponse")]
        Inventory.Inventoryserref.BindITReceivingDetailsSubReport[] BindITReceivingDetailsSubReport(long ITRequestMasterID, long LoggedInBy, string Filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindITReceivingDetailsSubReport", ReplyAction="http://tempuri.org/IInventoryService/BindITReceivingDetailsSubReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindITReceivingDetailsSubReport[]> BindITReceivingDetailsSubReportAsync(long ITRequestMasterID, long LoggedInBy, string Filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindITRONo", ReplyAction="http://tempuri.org/IInventoryService/BindITRONoResponse")]
        Inventory.Inventoryserref.Getitronovalue[] BindITRONo(long ITRequestMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindITRONo", ReplyAction="http://tempuri.org/IInventoryService/BindITRONoResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.Getitronovalue[]> BindITRONoAsync(long ITRequestMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SynITReceivingorder", ReplyAction="http://tempuri.org/IInventoryService/SynITReceivingorderResponse")]
        string SynITReceivingorder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SynITReceivingorder", ReplyAction="http://tempuri.org/IInventoryService/SynITReceivingorderResponse")]
        System.Threading.Tasks.Task<string> SynITReceivingorderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchITReceiving", ReplyAction="http://tempuri.org/IInventoryService/SearchITReceivingResponse")]
        Inventory.Inventoryserref.SearchITReceiving[] SearchITReceiving(Inventory.Inventoryserref.BALRequestITReceiving argInsITRequestMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchITReceiving", ReplyAction="http://tempuri.org/IInventoryService/SearchITReceivingResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchITReceiving[]> SearchITReceivingAsync(Inventory.Inventoryserref.BALRequestITReceiving argInsITRequestMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindITNNOvalues", ReplyAction="http://tempuri.org/IInventoryService/BindITNNOvaluesResponse")]
        Inventory.Inventoryserref.BindITNNOvalues[] BindITNNOvalues(long ITReceivingMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindITNNOvalues", ReplyAction="http://tempuri.org/IInventoryService/BindITNNOvaluesResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindITNNOvalues[]> BindITNNOvaluesAsync(long ITReceivingMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertITReceivingMaster", ReplyAction="http://tempuri.org/IInventoryService/InsertITReceivingMasterResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCorporate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCapitalReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALRequestITReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMachinePartsReceiveOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALActivityTracking))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALServiceRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALEndingInventory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALTransferOut))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALTransferIn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMedicalSuppliesRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFacilityVendorAccount))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALVendor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALPGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALUom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMachinemaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCapital))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMedicalSupplyRequestPo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALRequestITPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMachinePartsOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCapitalPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMPRMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALRequestIT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALGPBill))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFaItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFacilitySupply))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorItemMap[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchUserDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchUserDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.chkvalidcorporate[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.chkvalidcorporate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListVendorID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListVendorID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceivingSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceivingSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRDetailsbyMPRMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRDetailsbyMPRMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceiveSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceiveSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceivingSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceivingSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidFaciliityAccountCode[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidFaciliityAccountCode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorOrderType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorOrderType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckVendorOrderDue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermissionforUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermissionforUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Getitronovalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Getitronovalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceiving[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITNNOvalues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITNNOvalues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingsummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingsummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateITRecevingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateITRecevingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateCapitalRecevingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateCapitalRecevingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCpoDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCpoDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCPROMasterReview[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCPROMasterReview))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingsummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingsummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestetailsbyServiceRequestMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestetailsbyServiceRequestMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestReceivingOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestReceivingOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceReceiveOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceReceiveOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityByListCorporateID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityByListCorporateID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorByFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorByFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchEndingInventory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchEndingInventory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetReceivedQtyInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetReceivedQtyInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferINQtyInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferINQtyInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferOutQtyInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferOutQtyInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.EndingInventoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.EndingInventoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCatagoryByFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCatagoryByFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOut[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOut))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferNo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferNo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEmailNotificationforTransfer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEmailNotificationforTransfer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFromEmailforTransfer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFromEmailforTransfer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferIn[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferIn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferInHistory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferInHistory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOutHistory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOutHistory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferInHistoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferInHistoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutHistoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutHistoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyDetail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCorporateMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCorporateMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleForFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleForFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRolesForFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRolesForFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityVendorAccountReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityVendorAccountReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMasterReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMasterReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorItemMapReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorItemMapReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindUserSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindUserSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferInReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferInReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETVendorUniqueName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETVendorUniqueName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUOMName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUOMName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorItemMappingPage[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorItemMappingPage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validgpbillcode[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validgpbillcode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validuseremail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validuseremail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPermissionReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPermissionReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDueReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDueReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySuppliesMapReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySuppliesMapReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDescName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDescName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUomReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUomReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderdueRemainderReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderdueRemainderReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchFacilityVendorAcct[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchFacilityVendorAcct))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentSubCategoryforCapital[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentSubCategoryforCapital))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementListforCapital[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementListforCapital))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidCapitalEquipment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidCapitalEquipment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRMultipleIDs[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRMultipleIDs))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequestPo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequestPo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSROrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSROrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyPoReportDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyPoReportDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSuperAdminDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSuperAdminDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipement[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipement))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementSubCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementSubCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementSubCategoryvalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementSubCategoryvalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentSubCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentSubCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementSubCategoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementSubCategoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserApprovePermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserApprovePermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMultiUserApprove[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMultiUserApprove))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETITRequestPODetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETITRequestPODetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchRequestITPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchRequestITPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITDetailsfromPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITDetailsfromPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITROrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITROrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITRequestPOReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITRequestPOReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRwdlsafterordergeneration[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRwdlsafterordergeneration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPODetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPODetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPOGenerateDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPOGenerateDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSROrderContentPOReports[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSROrderContentPOReports))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPoReportDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPoReportDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestActionByMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestActionByMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrderDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrderDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMultiRolesPermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMultiRolesPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMasterOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMasterOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMasterOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMasterOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPOrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPOrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePOReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePOReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinePartsOrderMPONo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinePartsOrderMPONo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCROrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCROrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalPOReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalPOReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalOrderCPONo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalOrderCPONo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceive[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceive))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPOValues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPOValues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPROValues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPROValues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceivingDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceivingDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartReceivingDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartReceivingDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceiveSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceiveSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMachinePartsReceivingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMachinePartsReceivingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceiving[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyReceivingDetail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyReceivingDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMSRReceivingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMSRReceivingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRReceivingsummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRReceivingsummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidMachineEquipment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidMachineEquipment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetmedicalsupplyReviewReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetmedicalsupplyReviewReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalsuppliesItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalsuppliesItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLookUpList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLookUpList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetOrderPeriod[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetOrderPeriod))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequest[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymasterandDetail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymasterandDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.AddMedicalsupplyitem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.AddMedicalsupplyitem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedShippingValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedShippingValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedTimeDeliveryValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedTimeDeliveryValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateShippingValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateShippingValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateTimeDeliveryValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateTimeDeliveryValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindServiceRequestReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindServiceRequestReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckServicelist[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckServicelist))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceAttachment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceAttachment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveServiceListvalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveServiceListvalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceTempAttachment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceTempAttachment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRequestITMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRequestITMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminRequestITMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminRequestITMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITRequest[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITRequestDetailsbyMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITRequestDetailsbyMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementsubcategoryFORIT[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementsubcategoryFORIT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementListFORIT[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementListFORIT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSerialNo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSerialNo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITPartsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITPartsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidITEquipment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidITEquipment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalItemRequestReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalItemRequestReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalItemRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalItemRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLoginDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLoginDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserInformation[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserInformation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetvendorDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetvendorDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindExistuser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindExistuser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleandFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleandFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetPermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpMainMenu[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpMainMenu))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpSubMenu[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpSubMenu))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetState[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetState))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.IsUserExist[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.IsUserExist))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchItemCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchItemCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlLoadValues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlLoadValues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMap[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMapping[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMapping))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDRD[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDRD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetDrpItemsByCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetDrpItemsByCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlCurrency[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlCurrency))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUom[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCorporateFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCorporateFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UserFacilityRole[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UserFacilityRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetGPBilling[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetGPBilling))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPagePermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPagePermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityItemMap[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemsbyFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemsbyFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityShortName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityShortName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityVendorAccount[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityVendorAccount))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateVendorOrderType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateVendorOrderType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorOrderDue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupply[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupply))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupplyGird[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupplyGird))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinemasterDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinemasterDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterbasedMachineID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterbasedMachineID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinemasterdetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinemasterdetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckEquipmentlist[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckEquipmentlist))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementListvalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementListvalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminMedicalSupplyMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminMedicalSupplyMaster))]
        object[] InsertITReceivingMaster(Inventory.Inventoryserref.BALRequestITReceiving argITrecving);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertITReceivingMaster", ReplyAction="http://tempuri.org/IInventoryService/InsertITReceivingMasterResponse")]
        System.Threading.Tasks.Task<object[]> InsertITReceivingMasterAsync(Inventory.Inventoryserref.BALRequestITReceiving argITrecving);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertITReceivingDetails", ReplyAction="http://tempuri.org/IInventoryService/InsertITReceivingDetailsResponse")]
        string InsertITReceivingDetails(Inventory.Inventoryserref.BALRequestITReceiving argITrecving);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertITReceivingDetails", ReplyAction="http://tempuri.org/IInventoryService/InsertITReceivingDetailsResponse")]
        System.Threading.Tasks.Task<string> InsertITReceivingDetailsAsync(Inventory.Inventoryserref.BALRequestITReceiving argITrecving);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindITReceivingsummaryReport", ReplyAction="http://tempuri.org/IInventoryService/BindITReceivingsummaryReportResponse")]
        Inventory.Inventoryserref.BindITReceivingsummaryReport[] BindITReceivingsummaryReport(string ITNNo, long LoggedinBy, string Filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindITReceivingsummaryReport", ReplyAction="http://tempuri.org/IInventoryService/BindITReceivingsummaryReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindITReceivingsummaryReport[]> BindITReceivingsummaryReportAsync(string ITNNo, long LoggedinBy, string Filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateITReceivingDetails", ReplyAction="http://tempuri.org/IInventoryService/UpdateITReceivingDetailsResponse")]
        string UpdateITReceivingDetails(Inventory.Inventoryserref.BALRequestITReceiving argclsItDetailsReceive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateITReceivingDetails", ReplyAction="http://tempuri.org/IInventoryService/UpdateITReceivingDetailsResponse")]
        System.Threading.Tasks.Task<string> UpdateITReceivingDetailsAsync(Inventory.Inventoryserref.BALRequestITReceiving argclsItDetailsReceive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateITReceivingMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateITReceivingMasterResponse")]
        Inventory.Inventoryserref.UpdateITRecevingMaster[] UpdateITReceivingMaster(Inventory.Inventoryserref.BALRequestITReceiving argclsITMasterReceive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateITReceivingMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateITReceivingMasterResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.UpdateITRecevingMaster[]> UpdateITReceivingMasterAsync(Inventory.Inventoryserref.BALRequestITReceiving argclsITMasterReceive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchCapitalReceivingMaster", ReplyAction="http://tempuri.org/IInventoryService/SearchCapitalReceivingMasterResponse")]
        Inventory.Inventoryserref.SearchCapitalReceivingMaster[] SearchCapitalReceivingMaster(Inventory.Inventoryserref.BALCapitalReceiving argclsCRMasterReceive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchCapitalReceivingMaster", ReplyAction="http://tempuri.org/IInventoryService/SearchCapitalReceivingMasterResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchCapitalReceivingMaster[]> SearchCapitalReceivingMasterAsync(Inventory.Inventoryserref.BALCapitalReceiving argclsCRMasterReceive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateCapitalReceivingMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateCapitalReceivingMasterResponse")]
        Inventory.Inventoryserref.UpdateCapitalRecevingMaster[] UpdateCapitalReceivingMaster(Inventory.Inventoryserref.BALCapitalReceiving argclsCRMasterReceive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateCapitalReceivingMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateCapitalReceivingMasterResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.UpdateCapitalRecevingMaster[]> UpdateCapitalReceivingMasterAsync(Inventory.Inventoryserref.BALCapitalReceiving argclsCRMasterReceive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateCapitalReceivingDetails", ReplyAction="http://tempuri.org/IInventoryService/UpdateCapitalReceivingDetailsResponse")]
        string UpdateCapitalReceivingDetails(Inventory.Inventoryserref.BALCapitalReceiving argclsCRMasterReceive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateCapitalReceivingDetails", ReplyAction="http://tempuri.org/IInventoryService/UpdateCapitalReceivingDetailsResponse")]
        System.Threading.Tasks.Task<string> UpdateCapitalReceivingDetailsAsync(Inventory.Inventoryserref.BALCapitalReceiving argclsCRMasterReceive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SyncCapitalReceivingorder", ReplyAction="http://tempuri.org/IInventoryService/SyncCapitalReceivingorderResponse")]
        string SyncCapitalReceivingorder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SyncCapitalReceivingorder", ReplyAction="http://tempuri.org/IInventoryService/SyncCapitalReceivingorderResponse")]
        System.Threading.Tasks.Task<string> SyncCapitalReceivingorderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCpoDetails", ReplyAction="http://tempuri.org/IInventoryService/GetCpoDetailsResponse")]
        Inventory.Inventoryserref.GetCpoDetails[] GetCpoDetails(long CapitalReceivingMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCpoDetails", ReplyAction="http://tempuri.org/IInventoryService/GetCpoDetailsResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCpoDetails[]> GetCpoDetailsAsync(long CapitalReceivingMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCPROMasterReview", ReplyAction="http://tempuri.org/IInventoryService/GetCPROMasterReviewResponse")]
        Inventory.Inventoryserref.GetCPROMasterReview[] GetCPROMasterReview(long CapitalReceivingMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCPROMasterReview", ReplyAction="http://tempuri.org/IInventoryService/GetCPROMasterReviewResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCPROMasterReview[]> GetCPROMasterReviewAsync(long CapitalReceivingMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindCapitalDetailsReport", ReplyAction="http://tempuri.org/IInventoryService/BindCapitalDetailsReportResponse")]
        Inventory.Inventoryserref.BindCapitalDetailsReport[] BindCapitalDetailsReport(long CapitalItemMasterID, long CapitaltemReceivingMasterID, long LoggedInBy, string Filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindCapitalDetailsReport", ReplyAction="http://tempuri.org/IInventoryService/BindCapitalDetailsReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindCapitalDetailsReport[]> BindCapitalDetailsReportAsync(long CapitalItemMasterID, long CapitaltemReceivingMasterID, long LoggedInBy, string Filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindCapitalReceivingDetailsSubReport", ReplyAction="http://tempuri.org/IInventoryService/BindCapitalReceivingDetailsSubReportResponse" +
            "")]
        Inventory.Inventoryserref.BindCapitalReceivingDetailsSubReport[] BindCapitalReceivingDetailsSubReport(long CapitalItemMasterID, long LoggedInBy, string Filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindCapitalReceivingDetailsSubReport", ReplyAction="http://tempuri.org/IInventoryService/BindCapitalReceivingDetailsSubReportResponse" +
            "")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindCapitalReceivingDetailsSubReport[]> BindCapitalReceivingDetailsSubReportAsync(long CapitalItemMasterID, long LoggedInBy, string Filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindCapitalReceivingsummaryReport", ReplyAction="http://tempuri.org/IInventoryService/BindCapitalReceivingsummaryReportResponse")]
        Inventory.Inventoryserref.BindCapitalReceivingsummaryReport[] BindCapitalReceivingsummaryReport(long CapitalOrderID, long LoggedinBy, string Filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindCapitalReceivingsummaryReport", ReplyAction="http://tempuri.org/IInventoryService/BindCapitalReceivingsummaryReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindCapitalReceivingsummaryReport[]> BindCapitalReceivingsummaryReportAsync(long CapitalOrderID, long LoggedinBy, string Filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchServiceRequestReceivingOrder", ReplyAction="http://tempuri.org/IInventoryService/SearchServiceRequestReceivingOrderResponse")]
        Inventory.Inventoryserref.SearchServiceRequestReceivingOrder[] SearchServiceRequestReceivingOrder(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchServiceRequestReceivingOrder", ReplyAction="http://tempuri.org/IInventoryService/SearchServiceRequestReceivingOrderResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchServiceRequestReceivingOrder[]> SearchServiceRequestReceivingOrderAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateServcieRecevingOrder", ReplyAction="http://tempuri.org/IInventoryService/UpdateServcieRecevingOrderResponse")]
        string UpdateServcieRecevingOrder(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateServcieRecevingOrder", ReplyAction="http://tempuri.org/IInventoryService/UpdateServcieRecevingOrderResponse")]
        System.Threading.Tasks.Task<string> UpdateServcieRecevingOrderAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateServcieRecevinginvoice", ReplyAction="http://tempuri.org/IInventoryService/UpdateServcieRecevinginvoiceResponse")]
        string UpdateServcieRecevinginvoice(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateServcieRecevinginvoice", ReplyAction="http://tempuri.org/IInventoryService/UpdateServcieRecevinginvoiceResponse")]
        System.Threading.Tasks.Task<string> UpdateServcieRecevinginvoiceAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SyncServiceReceivingorder", ReplyAction="http://tempuri.org/IInventoryService/SyncServiceReceivingorderResponse")]
        string SyncServiceReceivingorder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SyncServiceReceivingorder", ReplyAction="http://tempuri.org/IInventoryService/SyncServiceReceivingorderResponse")]
        System.Threading.Tasks.Task<string> SyncServiceReceivingorderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetServiceReceiveOrder", ReplyAction="http://tempuri.org/IInventoryService/GetServiceReceiveOrderResponse")]
        Inventory.Inventoryserref.GetServiceReceiveOrder[] GetServiceReceiveOrder(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetServiceReceiveOrder", ReplyAction="http://tempuri.org/IInventoryService/GetServiceReceiveOrderResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetServiceReceiveOrder[]> GetServiceReceiveOrderAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetFacilityByListCorporateID", ReplyAction="http://tempuri.org/IInventoryService/GetFacilityByListCorporateIDResponse")]
        Inventory.Inventoryserref.GetFacilityByListCorporateID[] GetFacilityByListCorporateID(string ListCorporateID, long UserID, long RoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetFacilityByListCorporateID", ReplyAction="http://tempuri.org/IInventoryService/GetFacilityByListCorporateIDResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetFacilityByListCorporateID[]> GetFacilityByListCorporateIDAsync(string ListCorporateID, long UserID, long RoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetVendorByFacilityID", ReplyAction="http://tempuri.org/IInventoryService/GetVendorByFacilityIDResponse")]
        Inventory.Inventoryserref.GetVendorByFacilityID[] GetVendorByFacilityID(string ListVendorID, long LoggedInBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetVendorByFacilityID", ReplyAction="http://tempuri.org/IInventoryService/GetVendorByFacilityIDResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetVendorByFacilityID[]> GetVendorByFacilityIDAsync(string ListVendorID, long LoggedInBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchEndingInventory", ReplyAction="http://tempuri.org/IInventoryService/SearchEndingInventoryResponse")]
        Inventory.Inventoryserref.SearchEndingInventory[] SearchEndingInventory(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchEndingInventory", ReplyAction="http://tempuri.org/IInventoryService/SearchEndingInventoryResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchEndingInventory[]> SearchEndingInventoryAsync(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SyncEndingInventory", ReplyAction="http://tempuri.org/IInventoryService/SyncEndingInventoryResponse")]
        string SyncEndingInventory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SyncEndingInventory", ReplyAction="http://tempuri.org/IInventoryService/SyncEndingInventoryResponse")]
        System.Threading.Tasks.Task<string> SyncEndingInventoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertEndingInventory", ReplyAction="http://tempuri.org/IInventoryService/InsertEndingInventoryResponse")]
        string InsertEndingInventory(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertEndingInventory", ReplyAction="http://tempuri.org/IInventoryService/InsertEndingInventoryResponse")]
        System.Threading.Tasks.Task<string> InsertEndingInventoryAsync(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateEndingInventory", ReplyAction="http://tempuri.org/IInventoryService/UpdateEndingInventoryResponse")]
        string UpdateEndingInventory(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateEndingInventory", ReplyAction="http://tempuri.org/IInventoryService/UpdateEndingInventoryResponse")]
        System.Threading.Tasks.Task<string> UpdateEndingInventoryAsync(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetReceivedQtyInfo", ReplyAction="http://tempuri.org/IInventoryService/GetReceivedQtyInfoResponse")]
        Inventory.Inventoryserref.GetReceivedQtyInfo[] GetReceivedQtyInfo(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetReceivedQtyInfo", ReplyAction="http://tempuri.org/IInventoryService/GetReceivedQtyInfoResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetReceivedQtyInfo[]> GetReceivedQtyInfoAsync(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetTransferINQtyInfo", ReplyAction="http://tempuri.org/IInventoryService/GetTransferINQtyInfoResponse")]
        Inventory.Inventoryserref.GetTransferINQtyInfo[] GetTransferINQtyInfo(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetTransferINQtyInfo", ReplyAction="http://tempuri.org/IInventoryService/GetTransferINQtyInfoResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetTransferINQtyInfo[]> GetTransferINQtyInfoAsync(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetTransferOutQtyInfo", ReplyAction="http://tempuri.org/IInventoryService/GetTransferOutQtyInfoResponse")]
        Inventory.Inventoryserref.GetTransferOutQtyInfo[] GetTransferOutQtyInfo(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetTransferOutQtyInfo", ReplyAction="http://tempuri.org/IInventoryService/GetTransferOutQtyInfoResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetTransferOutQtyInfo[]> GetTransferOutQtyInfoAsync(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/EndingInventoryReport", ReplyAction="http://tempuri.org/IInventoryService/EndingInventoryReportResponse")]
        Inventory.Inventoryserref.EndingInventoryReport[] EndingInventoryReport(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/EndingInventoryReport", ReplyAction="http://tempuri.org/IInventoryService/EndingInventoryReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.EndingInventoryReport[]> EndingInventoryReportAsync(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCatagoryByFacilityID", ReplyAction="http://tempuri.org/IInventoryService/GetCatagoryByFacilityIDResponse")]
        Inventory.Inventoryserref.GetCatagoryByFacilityID[] GetCatagoryByFacilityID(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCatagoryByFacilityID", ReplyAction="http://tempuri.org/IInventoryService/GetCatagoryByFacilityIDResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCatagoryByFacilityID[]> GetCatagoryByFacilityIDAsync(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchTransferOut", ReplyAction="http://tempuri.org/IInventoryService/SearchTransferOutResponse")]
        Inventory.Inventoryserref.SearchTransferOut[] SearchTransferOut(Inventory.Inventoryserref.BALTransferOut argclsEndinginven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchTransferOut", ReplyAction="http://tempuri.org/IInventoryService/SearchTransferOutResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchTransferOut[]> SearchTransferOutAsync(Inventory.Inventoryserref.BALTransferOut argclsEndinginven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertTransferDetails", ReplyAction="http://tempuri.org/IInventoryService/InsertTransferDetailsResponse")]
        string InsertTransferDetails(Inventory.Inventoryserref.BALTransferOut argInsTransfer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertTransferDetails", ReplyAction="http://tempuri.org/IInventoryService/InsertTransferDetailsResponse")]
        System.Threading.Tasks.Task<string> InsertTransferDetailsAsync(Inventory.Inventoryserref.BALTransferOut argInsTransfer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetTransferNo", ReplyAction="http://tempuri.org/IInventoryService/GetTransferNoResponse")]
        Inventory.Inventoryserref.GetTransferNo[] GetTransferNo(long FacilityIDFrom, long FacilityIDTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetTransferNo", ReplyAction="http://tempuri.org/IInventoryService/GetTransferNoResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetTransferNo[]> GetTransferNoAsync(long FacilityIDFrom, long FacilityIDTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetEmailNotificationforTransfer", ReplyAction="http://tempuri.org/IInventoryService/GetEmailNotificationforTransferResponse")]
        Inventory.Inventoryserref.GetEmailNotificationforTransfer[] GetEmailNotificationforTransfer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetEmailNotificationforTransfer", ReplyAction="http://tempuri.org/IInventoryService/GetEmailNotificationforTransferResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetEmailNotificationforTransfer[]> GetEmailNotificationforTransferAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetFromEmailforTransfer", ReplyAction="http://tempuri.org/IInventoryService/GetFromEmailforTransferResponse")]
        Inventory.Inventoryserref.GetFromEmailforTransfer[] GetFromEmailforTransfer(string TransferNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetFromEmailforTransfer", ReplyAction="http://tempuri.org/IInventoryService/GetFromEmailforTransferResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetFromEmailforTransfer[]> GetFromEmailforTransferAsync(string TransferNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchTransferIn", ReplyAction="http://tempuri.org/IInventoryService/SearchTransferInResponse")]
        Inventory.Inventoryserref.SearchTransferIn[] SearchTransferIn(Inventory.Inventoryserref.BALTransferIn argclsTransferIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchTransferIn", ReplyAction="http://tempuri.org/IInventoryService/SearchTransferInResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchTransferIn[]> SearchTransferInAsync(Inventory.Inventoryserref.BALTransferIn argclsTransferIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertTransferIn", ReplyAction="http://tempuri.org/IInventoryService/InsertTransferInResponse")]
        string InsertTransferIn(Inventory.Inventoryserref.BALTransferIn argclstransferIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertTransferIn", ReplyAction="http://tempuri.org/IInventoryService/InsertTransferInResponse")]
        System.Threading.Tasks.Task<string> InsertTransferInAsync(Inventory.Inventoryserref.BALTransferIn argclstransferIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchTransferInHistory", ReplyAction="http://tempuri.org/IInventoryService/SearchTransferInHistoryResponse")]
        Inventory.Inventoryserref.SearchTransferInHistory[] SearchTransferInHistory(Inventory.Inventoryserref.BALTransferIn argclsTransferIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchTransferInHistory", ReplyAction="http://tempuri.org/IInventoryService/SearchTransferInHistoryResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchTransferInHistory[]> SearchTransferInHistoryAsync(Inventory.Inventoryserref.BALTransferIn argclsTransferIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchTransferOutHistory", ReplyAction="http://tempuri.org/IInventoryService/SearchTransferOutHistoryResponse")]
        Inventory.Inventoryserref.SearchTransferOutHistory[] SearchTransferOutHistory(Inventory.Inventoryserref.BALTransferOut argclsTransferOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchTransferOutHistory", ReplyAction="http://tempuri.org/IInventoryService/SearchTransferOutHistoryResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchTransferOutHistory[]> SearchTransferOutHistoryAsync(Inventory.Inventoryserref.BALTransferOut argclsTransferOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetTransferInHistoryReport", ReplyAction="http://tempuri.org/IInventoryService/GetTransferInHistoryReportResponse")]
        Inventory.Inventoryserref.GetTransferInHistoryReport[] GetTransferInHistoryReport(string TransferINID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetTransferInHistoryReport", ReplyAction="http://tempuri.org/IInventoryService/GetTransferInHistoryReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetTransferInHistoryReport[]> GetTransferInHistoryReportAsync(string TransferINID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateTransferDetails", ReplyAction="http://tempuri.org/IInventoryService/UpdateTransferDetailsResponse")]
        string UpdateTransferDetails(Inventory.Inventoryserref.BALTransferOut argclsTRDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateTransferDetails", ReplyAction="http://tempuri.org/IInventoryService/UpdateTransferDetailsResponse")]
        System.Threading.Tasks.Task<string> UpdateTransferDetailsAsync(Inventory.Inventoryserref.BALTransferOut argclsTRDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindTransferOutHistoryReport", ReplyAction="http://tempuri.org/IInventoryService/BindTransferOutHistoryReportResponse")]
        Inventory.Inventoryserref.BindTransferOutHistoryReport[] BindTransferOutHistoryReport(string TransferOutID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindTransferOutHistoryReport", ReplyAction="http://tempuri.org/IInventoryService/BindTransferOutHistoryReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindTransferOutHistoryReport[]> BindTransferOutHistoryReportAsync(string TransferOutID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCategoryByListFacilityID", ReplyAction="http://tempuri.org/IInventoryService/GetCategoryByListFacilityIDResponse")]
        Inventory.Inventoryserref.GetCategoryByListFacilityID[] GetCategoryByListFacilityID(string FacilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCategoryByListFacilityID", ReplyAction="http://tempuri.org/IInventoryService/GetCategoryByListFacilityIDResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCategoryByListFacilityID[]> GetCategoryByListFacilityIDAsync(string FacilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/ValidateMedicalSuppliesItem", ReplyAction="http://tempuri.org/IInventoryService/ValidateMedicalSuppliesItemResponse")]
        Inventory.Inventoryserref.ValidateMedicalSuppliesItem[] ValidateMedicalSuppliesItem(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsMedicalSup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/ValidateMedicalSuppliesItem", ReplyAction="http://tempuri.org/IInventoryService/ValidateMedicalSuppliesItemResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.ValidateMedicalSuppliesItem[]> ValidateMedicalSuppliesItemAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsMedicalSup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindCorporateMaster", ReplyAction="http://tempuri.org/IInventoryService/BindCorporateMasterResponse")]
        Inventory.Inventoryserref.BindCorporateMaster[] BindCorporateMaster();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindCorporateMaster", ReplyAction="http://tempuri.org/IInventoryService/BindCorporateMasterResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindCorporateMaster[]> BindCorporateMasterAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertCorporateMaster", ReplyAction="http://tempuri.org/IInventoryService/InsertCorporateMasterResponse")]
        string InsertCorporateMaster(Inventory.Inventoryserref.BALCorporate argclsCorporate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertCorporateMaster", ReplyAction="http://tempuri.org/IInventoryService/InsertCorporateMasterResponse")]
        System.Threading.Tasks.Task<string> InsertCorporateMasterAsync(Inventory.Inventoryserref.BALCorporate argclsCorporate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateCorporateMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateCorporateMasterResponse")]
        string UpdateCorporateMaster(Inventory.Inventoryserref.BALCorporate argclsCorporate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateCorporateMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateCorporateMasterResponse")]
        System.Threading.Tasks.Task<string> UpdateCorporateMasterAsync(Inventory.Inventoryserref.BALCorporate argclsCorporate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchCorporateMaster", ReplyAction="http://tempuri.org/IInventoryService/SearchCorporateMasterResponse")]
        Inventory.Inventoryserref.SearchCorporateMaster[] SearchCorporateMaster(Inventory.Inventoryserref.BALCorporate argclsCorporate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchCorporateMaster", ReplyAction="http://tempuri.org/IInventoryService/SearchCorporateMasterResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchCorporateMaster[]> SearchCorporateMasterAsync(Inventory.Inventoryserref.BALCorporate argclsCorporate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteCorporateDetails", ReplyAction="http://tempuri.org/IInventoryService/DeleteCorporateDetailsResponse")]
        string DeleteCorporateDetails(long CorporateID, bool IsActive, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteCorporateDetails", ReplyAction="http://tempuri.org/IInventoryService/DeleteCorporateDetailsResponse")]
        System.Threading.Tasks.Task<string> DeleteCorporateDetailsAsync(long CorporateID, bool IsActive, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindFacilityReport", ReplyAction="http://tempuri.org/IInventoryService/BindFacilityReportResponse")]
        Inventory.Inventoryserref.BindFacilityReport[] BindFacilityReport(Inventory.Inventoryserref.BALFacility arguFacility);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindFacilityReport", ReplyAction="http://tempuri.org/IInventoryService/BindFacilityReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindFacilityReport[]> BindFacilityReportAsync(Inventory.Inventoryserref.BALFacility arguFacility);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindFacilityDetailsReport", ReplyAction="http://tempuri.org/IInventoryService/BindFacilityDetailsReportResponse")]
        Inventory.Inventoryserref.BindFacilityDetailsReport[] BindFacilityDetailsReport(Inventory.Inventoryserref.BALFacility arguFacility);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindFacilityDetailsReport", ReplyAction="http://tempuri.org/IInventoryService/BindFacilityDetailsReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindFacilityDetailsReport[]> BindFacilityDetailsReportAsync(Inventory.Inventoryserref.BALFacility arguFacility);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetUserRoleForFacility", ReplyAction="http://tempuri.org/IInventoryService/GetUserRoleForFacilityResponse")]
        Inventory.Inventoryserref.GetUserRoleForFacility[] GetUserRoleForFacility(long FacilityID, string ListRoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetUserRoleForFacility", ReplyAction="http://tempuri.org/IInventoryService/GetUserRoleForFacilityResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetUserRoleForFacility[]> GetUserRoleForFacilityAsync(long FacilityID, string ListRoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindRolesForFacility", ReplyAction="http://tempuri.org/IInventoryService/BindRolesForFacilityResponse")]
        Inventory.Inventoryserref.BindRolesForFacility[] BindRolesForFacility(long FacilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindRolesForFacility", ReplyAction="http://tempuri.org/IInventoryService/BindRolesForFacilityResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindRolesForFacility[]> BindRolesForFacilityAsync(long FacilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindFacilityVendorAccountReport", ReplyAction="http://tempuri.org/IInventoryService/BindFacilityVendorAccountReportResponse")]
        Inventory.Inventoryserref.BindFacilityVendorAccountReport[] BindFacilityVendorAccountReport(Inventory.Inventoryserref.BALFacilityVendorAccount argclsFacilityVendorAcct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindFacilityVendorAccountReport", ReplyAction="http://tempuri.org/IInventoryService/BindFacilityVendorAccountReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindFacilityVendorAccountReport[]> BindFacilityVendorAccountReportAsync(Inventory.Inventoryserref.BALFacilityVendorAccount argclsFacilityVendorAcct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindCorporateMasterReport", ReplyAction="http://tempuri.org/IInventoryService/BindCorporateMasterReportResponse")]
        Inventory.Inventoryserref.BindCorporateMasterReport[] BindCorporateMasterReport(Inventory.Inventoryserref.BALCorporate arguCorporate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindCorporateMasterReport", ReplyAction="http://tempuri.org/IInventoryService/BindCorporateMasterReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindCorporateMasterReport[]> BindCorporateMasterReportAsync(Inventory.Inventoryserref.BALCorporate arguCorporate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindVendorItemMapReport", ReplyAction="http://tempuri.org/IInventoryService/BindVendorItemMapReportResponse")]
        Inventory.Inventoryserref.BindVendorItemMapReport[] BindVendorItemMapReport(Inventory.Inventoryserref.BALItemMap argclsVendorItemMap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindVendorItemMapReport", ReplyAction="http://tempuri.org/IInventoryService/BindVendorItemMapReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindVendorItemMapReport[]> BindVendorItemMapReportAsync(Inventory.Inventoryserref.BALItemMap argclsVendorItemMap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindUserSummaryReport", ReplyAction="http://tempuri.org/IInventoryService/BindUserSummaryReportResponse")]
        Inventory.Inventoryserref.BindUserSummaryReport[] BindUserSummaryReport(long UserID, long LoggedinBy, string Filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindUserSummaryReport", ReplyAction="http://tempuri.org/IInventoryService/BindUserSummaryReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindUserSummaryReport[]> BindUserSummaryReportAsync(long UserID, long LoggedinBy, string Filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindTransferOutReport", ReplyAction="http://tempuri.org/IInventoryService/BindTransferOutReportResponse")]
        Inventory.Inventoryserref.BindTransferOutReport[] BindTransferOutReport(long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindTransferOutReport", ReplyAction="http://tempuri.org/IInventoryService/BindTransferOutReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindTransferOutReport[]> BindTransferOutReportAsync(long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindTransferInReport", ReplyAction="http://tempuri.org/IInventoryService/BindTransferInReportResponse")]
        Inventory.Inventoryserref.BindTransferInReport[] BindTransferInReport(long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindTransferInReport", ReplyAction="http://tempuri.org/IInventoryService/BindTransferInReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindTransferInReport[]> BindTransferInReportAsync(long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetVendorReport", ReplyAction="http://tempuri.org/IInventoryService/GetVendorReportResponse")]
        Inventory.Inventoryserref.GetVendorReport[] GetVendorReport(Inventory.Inventoryserref.BALVendor ardvendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetVendorReport", ReplyAction="http://tempuri.org/IInventoryService/GetVendorReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetVendorReport[]> GetVendorReportAsync(Inventory.Inventoryserref.BALVendor ardvendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GETVendorUniqueName", ReplyAction="http://tempuri.org/IInventoryService/GETVendorUniqueNameResponse")]
        Inventory.Inventoryserref.GETVendorUniqueName[] GETVendorUniqueName(string VendorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GETVendorUniqueName", ReplyAction="http://tempuri.org/IInventoryService/GETVendorUniqueNameResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GETVendorUniqueName[]> GETVendorUniqueNameAsync(string VendorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetUOMName", ReplyAction="http://tempuri.org/IInventoryService/GetUOMNameResponse")]
        Inventory.Inventoryserref.GetUOMName[] GetUOMName(string VendorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetUOMName", ReplyAction="http://tempuri.org/IInventoryService/GetUOMNameResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetUOMName[]> GetUOMNameAsync(string VendorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetVendorItemMappingPage", ReplyAction="http://tempuri.org/IInventoryService/GetVendorItemMappingPageResponse")]
        Inventory.Inventoryserref.GetVendorItemMappingPage[] GetVendorItemMappingPage();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetVendorItemMappingPage", ReplyAction="http://tempuri.org/IInventoryService/GetVendorItemMappingPageResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetVendorItemMappingPage[]> GetVendorItemMappingPageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetVendorDetailsReport", ReplyAction="http://tempuri.org/IInventoryService/GetVendorDetailsReportResponse")]
        Inventory.Inventoryserref.GetVendorDetailsReport[] GetVendorDetailsReport(Inventory.Inventoryserref.BALVendor argvendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetVendorDetailsReport", ReplyAction="http://tempuri.org/IInventoryService/GetVendorDetailsReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetVendorDetailsReport[]> GetVendorDetailsReportAsync(Inventory.Inventoryserref.BALVendor argvendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/Validgpbillcode", ReplyAction="http://tempuri.org/IInventoryService/ValidgpbillcodeResponse")]
        Inventory.Inventoryserref.Validgpbillcode[] Validgpbillcode(string GpBillingCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/Validgpbillcode", ReplyAction="http://tempuri.org/IInventoryService/ValidgpbillcodeResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.Validgpbillcode[]> ValidgpbillcodeAsync(string GpBillingCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/Validuseremail", ReplyAction="http://tempuri.org/IInventoryService/ValiduseremailResponse")]
        Inventory.Inventoryserref.Validuseremail[] Validuseremail(string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/Validuseremail", ReplyAction="http://tempuri.org/IInventoryService/ValiduseremailResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.Validuseremail[]> ValiduseremailAsync(string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetUserPermissionReport", ReplyAction="http://tempuri.org/IInventoryService/GetUserPermissionReportResponse")]
        Inventory.Inventoryserref.GetUserPermissionReport[] GetUserPermissionReport(string MainMenuID, string SubMenuID, string SearchFilter, long LoggedInBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetUserPermissionReport", ReplyAction="http://tempuri.org/IInventoryService/GetUserPermissionReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetUserPermissionReport[]> GetUserPermissionReportAsync(string MainMenuID, string SubMenuID, string SearchFilter, long LoggedInBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetVendorOrderDueReport", ReplyAction="http://tempuri.org/IInventoryService/GetVendorOrderDueReportResponse")]
        Inventory.Inventoryserref.GetVendorOrderDueReport[] GetVendorOrderDueReport(Inventory.Inventoryserref.BALVendorOrderDue argvendorder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetVendorOrderDueReport", ReplyAction="http://tempuri.org/IInventoryService/GetVendorOrderDueReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetVendorOrderDueReport[]> GetVendorOrderDueReportAsync(Inventory.Inventoryserref.BALVendorOrderDue argvendorder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetFacilitySuppliesMapReport", ReplyAction="http://tempuri.org/IInventoryService/GetFacilitySuppliesMapReportResponse")]
        Inventory.Inventoryserref.GetFacilitySuppliesMapReport[] GetFacilitySuppliesMapReport(long CorporateID, long FacilityID, string VendorID, string CategoryID, long Parlevel, string SearchFilter, long LoggedInBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetFacilitySuppliesMapReport", ReplyAction="http://tempuri.org/IInventoryService/GetFacilitySuppliesMapReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetFacilitySuppliesMapReport[]> GetFacilitySuppliesMapReportAsync(long CorporateID, long FacilityID, string VendorID, string CategoryID, long Parlevel, string SearchFilter, long LoggedInBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetItemDescName", ReplyAction="http://tempuri.org/IInventoryService/GetItemDescNameResponse")]
        Inventory.Inventoryserref.GetItemDescName[] GetItemDescName(string ItemDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetItemDescName", ReplyAction="http://tempuri.org/IInventoryService/GetItemDescNameResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetItemDescName[]> GetItemDescNameAsync(string ItemDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCategoryReport", ReplyAction="http://tempuri.org/IInventoryService/GetCategoryReportResponse")]
        Inventory.Inventoryserref.GetCategoryReport[] GetCategoryReport(Inventory.Inventoryserref.BALPGroup argitemCat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCategoryReport", ReplyAction="http://tempuri.org/IInventoryService/GetCategoryReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCategoryReport[]> GetCategoryReportAsync(Inventory.Inventoryserref.BALPGroup argitemCat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetUomReport", ReplyAction="http://tempuri.org/IInventoryService/GetUomReportResponse")]
        Inventory.Inventoryserref.GetUomReport[] GetUomReport(Inventory.Inventoryserref.BALUom arguom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetUomReport", ReplyAction="http://tempuri.org/IInventoryService/GetUomReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetUomReport[]> GetUomReportAsync(Inventory.Inventoryserref.BALUom arguom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetItemSummaryReport", ReplyAction="http://tempuri.org/IInventoryService/GetItemSummaryReportResponse")]
        Inventory.Inventoryserref.GetItemSummaryReport[] GetItemSummaryReport(Inventory.Inventoryserref.BALItem argitem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetItemSummaryReport", ReplyAction="http://tempuri.org/IInventoryService/GetItemSummaryReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetItemSummaryReport[]> GetItemSummaryReportAsync(Inventory.Inventoryserref.BALItem argitem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetItemDetailsReport", ReplyAction="http://tempuri.org/IInventoryService/GetItemDetailsReportResponse")]
        Inventory.Inventoryserref.GetItemDetailsReport[] GetItemDetailsReport(Inventory.Inventoryserref.BALItem argitem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetItemDetailsReport", ReplyAction="http://tempuri.org/IInventoryService/GetItemDetailsReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetItemDetailsReport[]> GetItemDetailsReportAsync(Inventory.Inventoryserref.BALItem argitem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMachineMasterReport", ReplyAction="http://tempuri.org/IInventoryService/GetMachineMasterReportResponse")]
        Inventory.Inventoryserref.GetMachineMasterReport[] GetMachineMasterReport(Inventory.Inventoryserref.BALMachinemaster argmach);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMachineMasterReport", ReplyAction="http://tempuri.org/IInventoryService/GetMachineMasterReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMachineMasterReport[]> GetMachineMasterReportAsync(Inventory.Inventoryserref.BALMachinemaster argmach);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMachineMasterDetailsReport", ReplyAction="http://tempuri.org/IInventoryService/GetMachineMasterDetailsReportResponse")]
        Inventory.Inventoryserref.GetMachineMasterDetailsReport[] GetMachineMasterDetailsReport(Inventory.Inventoryserref.BALMachinemaster argmachine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMachineMasterDetailsReport", ReplyAction="http://tempuri.org/IInventoryService/GetMachineMasterDetailsReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMachineMasterDetailsReport[]> GetMachineMasterDetailsReportAsync(Inventory.Inventoryserref.BALMachinemaster argmachine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/ValidateMedicalSuppliesOrder", ReplyAction="http://tempuri.org/IInventoryService/ValidateMedicalSuppliesOrderResponse")]
        Inventory.Inventoryserref.ValidateMedicalSuppliesOrder[] ValidateMedicalSuppliesOrder(long PMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/ValidateMedicalSuppliesOrder", ReplyAction="http://tempuri.org/IInventoryService/ValidateMedicalSuppliesOrderResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.ValidateMedicalSuppliesOrder[]> ValidateMedicalSuppliesOrderAsync(long PMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetVendorOrderdueRemainderReport", ReplyAction="http://tempuri.org/IInventoryService/GetVendorOrderdueRemainderReportResponse")]
        Inventory.Inventoryserref.GetVendorOrderdueRemainderReport[] GetVendorOrderdueRemainderReport(Inventory.Inventoryserref.BALVendorOrderDue argclsVendorOrderDue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetVendorOrderdueRemainderReport", ReplyAction="http://tempuri.org/IInventoryService/GetVendorOrderdueRemainderReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetVendorOrderdueRemainderReport[]> GetVendorOrderdueRemainderReportAsync(Inventory.Inventoryserref.BALVendorOrderDue argclsVendorOrderDue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetFacilityVendorAcct", ReplyAction="http://tempuri.org/IInventoryService/GetFacilityVendorAcctResponse")]
        Inventory.Inventoryserref.SearchFacilityVendorAcct[] GetFacilityVendorAcct(Inventory.Inventoryserref.BALFacilityVendorAccount argclsFacilityVendorAcct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetFacilityVendorAcct", ReplyAction="http://tempuri.org/IInventoryService/GetFacilityVendorAcctResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchFacilityVendorAcct[]> GetFacilityVendorAcctAsync(Inventory.Inventoryserref.BALFacilityVendorAccount argclsFacilityVendorAcct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertCapitalItemDetails", ReplyAction="http://tempuri.org/IInventoryService/InsertCapitalItemDetailsResponse")]
        string InsertCapitalItemDetails(Inventory.Inventoryserref.BALCapital argInsCRDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertCapitalItemDetails", ReplyAction="http://tempuri.org/IInventoryService/InsertCapitalItemDetailsResponse")]
        System.Threading.Tasks.Task<string> InsertCapitalItemDetailsAsync(Inventory.Inventoryserref.BALCapital argInsCRDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateCapitalIemMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateCapitalIemMasterResponse")]
        string UpdateCapitalIemMaster(Inventory.Inventoryserref.BALCapital argupdMPRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateCapitalIemMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateCapitalIemMasterResponse")]
        System.Threading.Tasks.Task<string> UpdateCapitalIemMasterAsync(Inventory.Inventoryserref.BALCapital argupdMPRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateCapitalItemDetails", ReplyAction="http://tempuri.org/IInventoryService/UpdateCapitalItemDetailsResponse")]
        string UpdateCapitalItemDetails(Inventory.Inventoryserref.BALCapital argUpdCRDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateCapitalItemDetails", ReplyAction="http://tempuri.org/IInventoryService/UpdateCapitalItemDetailsResponse")]
        System.Threading.Tasks.Task<string> UpdateCapitalItemDetailsAsync(Inventory.Inventoryserref.BALCapital argUpdCRDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteCapitalItemMaster", ReplyAction="http://tempuri.org/IInventoryService/DeleteCapitalItemMasterResponse")]
        string DeleteCapitalItemMaster(long argCRMasterID, bool IsActive, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteCapitalItemMaster", ReplyAction="http://tempuri.org/IInventoryService/DeleteCapitalItemMasterResponse")]
        System.Threading.Tasks.Task<string> DeleteCapitalItemMasterAsync(long argCRMasterID, bool IsActive, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteCapitalItemDetails", ReplyAction="http://tempuri.org/IInventoryService/DeleteCapitalItemDetailsResponse")]
        string DeleteCapitalItemDetails(long argCRDetailsID, bool IsActive, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteCapitalItemDetails", ReplyAction="http://tempuri.org/IInventoryService/DeleteCapitalItemDetailsResponse")]
        System.Threading.Tasks.Task<string> DeleteCapitalItemDetailsAsync(long argCRDetailsID, bool IsActive, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetEquipmentSubCategoryforCapital", ReplyAction="http://tempuri.org/IInventoryService/GetEquipmentSubCategoryforCapitalResponse")]
        Inventory.Inventoryserref.GetEquipmentSubCategoryforCapital[] GetEquipmentSubCategoryforCapital(long CorporateID, string Mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetEquipmentSubCategoryforCapital", ReplyAction="http://tempuri.org/IInventoryService/GetEquipmentSubCategoryforCapitalResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetEquipmentSubCategoryforCapital[]> GetEquipmentSubCategoryforCapitalAsync(long CorporateID, string Mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetEquipementListforCapital", ReplyAction="http://tempuri.org/IInventoryService/GetEquipementListforCapitalResponse")]
        Inventory.Inventoryserref.GetEquipementListforCapital[] GetEquipementListforCapital(long EquimentSubCategoryID, string Mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetEquipementListforCapital", ReplyAction="http://tempuri.org/IInventoryService/GetEquipementListforCapitalResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetEquipementListforCapital[]> GetEquipementListforCapitalAsync(long EquimentSubCategoryID, string Mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/ValidCapitalEquipment", ReplyAction="http://tempuri.org/IInventoryService/ValidCapitalEquipmentResponse")]
        Inventory.Inventoryserref.ValidCapitalEquipment[] ValidCapitalEquipment(long EquipmentSubCategoryID, long EquipmentList, long FacilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/ValidCapitalEquipment", ReplyAction="http://tempuri.org/IInventoryService/ValidCapitalEquipmentResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.ValidCapitalEquipment[]> ValidCapitalEquipmentAsync(long EquipmentSubCategoryID, long EquipmentList, long FacilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMSRMultipleIDs", ReplyAction="http://tempuri.org/IInventoryService/GetMSRMultipleIDsResponse")]
        Inventory.Inventoryserref.GetMSRMultipleIDs[] GetMSRMultipleIDs(string PRMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMSRMultipleIDs", ReplyAction="http://tempuri.org/IInventoryService/GetMSRMultipleIDsResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMSRMultipleIDs[]> GetMSRMultipleIDsAsync(string PRMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchMedicalSupplyRequestPo", ReplyAction="http://tempuri.org/IInventoryService/SearchMedicalSupplyRequestPoResponse")]
        Inventory.Inventoryserref.SearchMedicalSupplyRequestPo[] SearchMedicalSupplyRequestPo(Inventory.Inventoryserref.BALMedicalSupplyRequestPo argclsMedicalSuppliesReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchMedicalSupplyRequestPo", ReplyAction="http://tempuri.org/IInventoryService/SearchMedicalSupplyRequestPoResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchMedicalSupplyRequestPo[]> SearchMedicalSupplyRequestPoAsync(Inventory.Inventoryserref.BALMedicalSupplyRequestPo argclsMedicalSuppliesReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertMedicalsupplyPO", ReplyAction="http://tempuri.org/IInventoryService/InsertMedicalsupplyPOResponse")]
        string InsertMedicalsupplyPO(Inventory.Inventoryserref.BALMedicalSupplyRequestPo argclsMSRPODetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertMedicalsupplyPO", ReplyAction="http://tempuri.org/IInventoryService/InsertMedicalsupplyPOResponse")]
        System.Threading.Tasks.Task<string> InsertMedicalsupplyPOAsync(Inventory.Inventoryserref.BALMedicalSupplyRequestPo argclsMSRPODetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMSROrderContentPO", ReplyAction="http://tempuri.org/IInventoryService/GetMSROrderContentPOResponse")]
        Inventory.Inventoryserref.GetMSROrderContentPO[] GetMSROrderContentPO(long PRmasterID, long LoggedInBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMSROrderContentPO", ReplyAction="http://tempuri.org/IInventoryService/GetMSROrderContentPOResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMSROrderContentPO[]> GetMSROrderContentPOAsync(long PRmasterID, long LoggedInBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMedicalSupplyPoReportDetails", ReplyAction="http://tempuri.org/IInventoryService/GetMedicalSupplyPoReportDetailsResponse")]
        Inventory.Inventoryserref.GetMedicalSupplyPoReportDetails[] GetMedicalSupplyPoReportDetails(string MedicalSupplyMasterID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMedicalSupplyPoReportDetails", ReplyAction="http://tempuri.org/IInventoryService/GetMedicalSupplyPoReportDetailsResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMedicalSupplyPoReportDetails[]> GetMedicalSupplyPoReportDetailsAsync(string MedicalSupplyMasterID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMSRPoOrderContent", ReplyAction="http://tempuri.org/IInventoryService/UpdateMSRPoOrderContentResponse")]
        string UpdateMSRPoOrderContent(Inventory.Inventoryserref.BALMedicalSupplyRequestPo argclsmsrpo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMSRPoOrderContent", ReplyAction="http://tempuri.org/IInventoryService/UpdateMSRPoOrderContentResponse")]
        System.Threading.Tasks.Task<string> UpdateMSRPoOrderContentAsync(Inventory.Inventoryserref.BALMedicalSupplyRequestPo argclsmsrpo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMSRPoStatus", ReplyAction="http://tempuri.org/IInventoryService/UpdateMSRPoStatusResponse")]
        string UpdateMSRPoStatus(Inventory.Inventoryserref.BALMedicalSupplyRequestPo argclsmsrpo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMSRPoStatus", ReplyAction="http://tempuri.org/IInventoryService/UpdateMSRPoStatusResponse")]
        System.Threading.Tasks.Task<string> UpdateMSRPoStatusAsync(Inventory.Inventoryserref.BALMedicalSupplyRequestPo argclsmsrpo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetSuperAdminDetails", ReplyAction="http://tempuri.org/IInventoryService/GetSuperAdminDetailsResponse")]
        Inventory.Inventoryserref.GetSuperAdminDetails[] GetSuperAdminDetails(long CorporateID, long FacilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetSuperAdminDetails", ReplyAction="http://tempuri.org/IInventoryService/GetSuperAdminDetailsResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetSuperAdminDetails[]> GetSuperAdminDetailsAsync(long CorporateID, long FacilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindEquipement", ReplyAction="http://tempuri.org/IInventoryService/BindEquipementResponse")]
        Inventory.Inventoryserref.BindEquipement[] BindEquipement(Inventory.Inventoryserref.BALCorporate argEquipment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindEquipement", ReplyAction="http://tempuri.org/IInventoryService/BindEquipementResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindEquipement[]> BindEquipementAsync(Inventory.Inventoryserref.BALCorporate argEquipment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertEquipmentSubCategory", ReplyAction="http://tempuri.org/IInventoryService/InsertEquipmentSubCategoryResponse")]
        string InsertEquipmentSubCategory(Inventory.Inventoryserref.BALMachinemaster argEquipmentSubCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertEquipmentSubCategory", ReplyAction="http://tempuri.org/IInventoryService/InsertEquipmentSubCategoryResponse")]
        System.Threading.Tasks.Task<string> InsertEquipmentSubCategoryAsync(Inventory.Inventoryserref.BALMachinemaster argEquipmentSubCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateEquipmentSubCategory", ReplyAction="http://tempuri.org/IInventoryService/UpdateEquipmentSubCategoryResponse")]
        string UpdateEquipmentSubCategory(Inventory.Inventoryserref.BALMachinemaster argEquipmentSubCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateEquipmentSubCategory", ReplyAction="http://tempuri.org/IInventoryService/UpdateEquipmentSubCategoryResponse")]
        System.Threading.Tasks.Task<string> UpdateEquipmentSubCategoryAsync(Inventory.Inventoryserref.BALMachinemaster argEquipmentSubCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteEquipSubCategoryMaster", ReplyAction="http://tempuri.org/IInventoryService/DeleteEquipSubCategoryMasterResponse")]
        string DeleteEquipSubCategoryMaster(Inventory.Inventoryserref.BALMachinemaster argEquipmentSubCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteEquipSubCategoryMaster", ReplyAction="http://tempuri.org/IInventoryService/DeleteEquipSubCategoryMasterResponse")]
        System.Threading.Tasks.Task<string> DeleteEquipSubCategoryMasterAsync(Inventory.Inventoryserref.BALMachinemaster argEquipmentSubCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetEquipementSubCategory", ReplyAction="http://tempuri.org/IInventoryService/GetEquipementSubCategoryResponse")]
        Inventory.Inventoryserref.GetEquipementSubCategory[] GetEquipementSubCategory(long EquipCategoryID, string Mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetEquipementSubCategory", ReplyAction="http://tempuri.org/IInventoryService/GetEquipementSubCategoryResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetEquipementSubCategory[]> GetEquipementSubCategoryAsync(long EquipCategoryID, string Mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetActiveEquipementSubCategoryvalue", ReplyAction="http://tempuri.org/IInventoryService/GetActiveEquipementSubCategoryvalueResponse")]
        Inventory.Inventoryserref.GetActiveEquipementSubCategoryvalue[] GetActiveEquipementSubCategoryvalue(long EquipSubCatID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetActiveEquipementSubCategoryvalue", ReplyAction="http://tempuri.org/IInventoryService/GetActiveEquipementSubCategoryvalueResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetActiveEquipementSubCategoryvalue[]> GetActiveEquipementSubCategoryvalueAsync(long EquipSubCatID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SavedEquipmentSubCategory", ReplyAction="http://tempuri.org/IInventoryService/SavedEquipmentSubCategoryResponse")]
        Inventory.Inventoryserref.SavedEquipmentSubCategory[] SavedEquipmentSubCategory(long EquipSubCatID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SavedEquipmentSubCategory", ReplyAction="http://tempuri.org/IInventoryService/SavedEquipmentSubCategoryResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SavedEquipmentSubCategory[]> SavedEquipmentSubCategoryAsync(long EquipSubCatID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindEquipementSubCategoryReport", ReplyAction="http://tempuri.org/IInventoryService/BindEquipementSubCategoryReportResponse")]
        Inventory.Inventoryserref.BindEquipementSubCategoryReport[] BindEquipementSubCategoryReport(string SearchFilter, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindEquipementSubCategoryReport", ReplyAction="http://tempuri.org/IInventoryService/BindEquipementSubCategoryReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindEquipementSubCategoryReport[]> BindEquipementSubCategoryReportAsync(string SearchFilter, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetUserApprovePermission", ReplyAction="http://tempuri.org/IInventoryService/GetUserApprovePermissionResponse")]
        Inventory.Inventoryserref.GetUserApprovePermission[] GetUserApprovePermission(long MainmenuID, long SubmenuID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetUserApprovePermission", ReplyAction="http://tempuri.org/IInventoryService/GetUserApprovePermissionResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetUserApprovePermission[]> GetUserApprovePermissionAsync(long MainmenuID, long SubmenuID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMultiUserApprove", ReplyAction="http://tempuri.org/IInventoryService/GetMultiUserApproveResponse")]
        Inventory.Inventoryserref.GetMultiUserApprove[] GetMultiUserApprove(long PermissionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMultiUserApprove", ReplyAction="http://tempuri.org/IInventoryService/GetMultiUserApproveResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMultiUserApprove[]> GetMultiUserApproveAsync(long PermissionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertUserApprovePermission", ReplyAction="http://tempuri.org/IInventoryService/InsertUserApprovePermissionResponse")]
        string InsertUserApprovePermission(Inventory.Inventoryserref.BALUser argUserApprovePermission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertUserApprovePermission", ReplyAction="http://tempuri.org/IInventoryService/InsertUserApprovePermissionResponse")]
        System.Threading.Tasks.Task<string> InsertUserApprovePermissionAsync(Inventory.Inventoryserref.BALUser argUserApprovePermission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateUserApprovePermission", ReplyAction="http://tempuri.org/IInventoryService/UpdateUserApprovePermissionResponse")]
        string UpdateUserApprovePermission(Inventory.Inventoryserref.BALUser argUserApprovePermission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateUserApprovePermission", ReplyAction="http://tempuri.org/IInventoryService/UpdateUserApprovePermissionResponse")]
        System.Threading.Tasks.Task<string> UpdateUserApprovePermissionAsync(Inventory.Inventoryserref.BALUser argUserApprovePermission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GETITRequestPODetails", ReplyAction="http://tempuri.org/IInventoryService/GETITRequestPODetailsResponse")]
        Inventory.Inventoryserref.GETITRequestPODetails[] GETITRequestPODetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GETITRequestPODetails", ReplyAction="http://tempuri.org/IInventoryService/GETITRequestPODetailsResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GETITRequestPODetails[]> GETITRequestPODetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchRequestITPO", ReplyAction="http://tempuri.org/IInventoryService/SearchRequestITPOResponse")]
        Inventory.Inventoryserref.SearchRequestITPO[] SearchRequestITPO(Inventory.Inventoryserref.BALRequestITPO argInsITRequestMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchRequestITPO", ReplyAction="http://tempuri.org/IInventoryService/SearchRequestITPOResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchRequestITPO[]> SearchRequestITPOAsync(Inventory.Inventoryserref.BALRequestITPO argInsITRequestMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindRequestITDetailsfromPO", ReplyAction="http://tempuri.org/IInventoryService/BindRequestITDetailsfromPOResponse")]
        Inventory.Inventoryserref.BindRequestITDetailsfromPO[] BindRequestITDetailsfromPO(string ITRNO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindRequestITDetailsfromPO", ReplyAction="http://tempuri.org/IInventoryService/BindRequestITDetailsfromPOResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindRequestITDetailsfromPO[]> BindRequestITDetailsfromPOAsync(string ITRNO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertrequestPO", ReplyAction="http://tempuri.org/IInventoryService/InsertrequestPOResponse")]
        string InsertrequestPO(Inventory.Inventoryserref.BALRequestITPO argclsITPOMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertrequestPO", ReplyAction="http://tempuri.org/IInventoryService/InsertrequestPOResponse")]
        System.Threading.Tasks.Task<string> InsertrequestPOAsync(Inventory.Inventoryserref.BALRequestITPO argclsITPOMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetITROrderContentPO", ReplyAction="http://tempuri.org/IInventoryService/GetITROrderContentPOResponse")]
        Inventory.Inventoryserref.GetITROrderContentPO[] GetITROrderContentPO(long RequestITMasterID, long LoggedInBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetITROrderContentPO", ReplyAction="http://tempuri.org/IInventoryService/GetITROrderContentPOResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetITROrderContentPO[]> GetITROrderContentPOAsync(long RequestITMasterID, long LoggedInBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindITRequestPOReport", ReplyAction="http://tempuri.org/IInventoryService/BindITRequestPOReportResponse")]
        Inventory.Inventoryserref.BindITRequestPOReport[] BindITRequestPOReport(string RequestITMasterID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindITRequestPOReport", ReplyAction="http://tempuri.org/IInventoryService/BindITRequestPOReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindITRequestPOReport[]> BindITRequestPOReportAsync(string RequestITMasterID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateITRequestPO", ReplyAction="http://tempuri.org/IInventoryService/UpdateITRequestPOResponse")]
        string UpdateITRequestPO(Inventory.Inventoryserref.BALRequestITPO argclsITPOMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateITRequestPO", ReplyAction="http://tempuri.org/IInventoryService/UpdateITRequestPOResponse")]
        System.Threading.Tasks.Task<string> UpdateITRequestPOAsync(Inventory.Inventoryserref.BALRequestITPO argclsITPOMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetRwdlsafterordergeneration", ReplyAction="http://tempuri.org/IInventoryService/GetRwdlsafterordergenerationResponse")]
        Inventory.Inventoryserref.GetRwdlsafterordergeneration[] GetRwdlsafterordergeneration(string RequestITMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetRwdlsafterordergeneration", ReplyAction="http://tempuri.org/IInventoryService/GetRwdlsafterordergenerationResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetRwdlsafterordergeneration[]> GetRwdlsafterordergenerationAsync(string RequestITMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetServiceRequestPODetails", ReplyAction="http://tempuri.org/IInventoryService/GetServiceRequestPODetailsResponse")]
        Inventory.Inventoryserref.GetServiceRequestPODetails[] GetServiceRequestPODetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetServiceRequestPODetails", ReplyAction="http://tempuri.org/IInventoryService/GetServiceRequestPODetailsResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetServiceRequestPODetails[]> GetServiceRequestPODetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchServiceRequestPO", ReplyAction="http://tempuri.org/IInventoryService/SearchServiceRequestPOResponse")]
        Inventory.Inventoryserref.SearchServiceRequestPO[] SearchServiceRequestPO(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchServiceRequestPO", ReplyAction="http://tempuri.org/IInventoryService/SearchServiceRequestPOResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchServiceRequestPO[]> SearchServiceRequestPOAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateServiceRequestDetailsAfterAction", ReplyAction="http://tempuri.org/IInventoryService/UpdateServiceRequestDetailsAfterActionRespon" +
            "se")]
        string UpdateServiceRequestDetailsAfterAction(Inventory.Inventoryserref.BALServiceRequest argclsSRPODetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateServiceRequestDetailsAfterAction", ReplyAction="http://tempuri.org/IInventoryService/UpdateServiceRequestDetailsAfterActionRespon" +
            "se")]
        System.Threading.Tasks.Task<string> UpdateServiceRequestDetailsAfterActionAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRPODetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetServiceRequestPOGenerateDetails", ReplyAction="http://tempuri.org/IInventoryService/GetServiceRequestPOGenerateDetailsResponse")]
        Inventory.Inventoryserref.GetServiceRequestPOGenerateDetails[] GetServiceRequestPOGenerateDetails(string ListServiceRequestID, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetServiceRequestPOGenerateDetails", ReplyAction="http://tempuri.org/IInventoryService/GetServiceRequestPOGenerateDetailsResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetServiceRequestPOGenerateDetails[]> GetServiceRequestPOGenerateDetailsAsync(string ListServiceRequestID, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetSROrderContentPOReports", ReplyAction="http://tempuri.org/IInventoryService/GetSROrderContentPOReportsResponse")]
        Inventory.Inventoryserref.GetSROrderContentPOReports[] GetSROrderContentPOReports(long ServiceRequestID, long ServiceRequestDetailsID, long LoggedInBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetSROrderContentPOReports", ReplyAction="http://tempuri.org/IInventoryService/GetSROrderContentPOReportsResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetSROrderContentPOReports[]> GetSROrderContentPOReportsAsync(long ServiceRequestID, long ServiceRequestDetailsID, long LoggedInBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetServiceRequestPoReportDetails", ReplyAction="http://tempuri.org/IInventoryService/GetServiceRequestPoReportDetailsResponse")]
        Inventory.Inventoryserref.GetServiceRequestPoReportDetails[] GetServiceRequestPoReportDetails(string ServiceRequestMasterID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetServiceRequestPoReportDetails", ReplyAction="http://tempuri.org/IInventoryService/GetServiceRequestPoReportDetailsResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetServiceRequestPoReportDetails[]> GetServiceRequestPoReportDetailsAsync(string ServiceRequestMasterID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertServcieRequestGenerateOrder", ReplyAction="http://tempuri.org/IInventoryService/InsertServcieRequestGenerateOrderResponse")]
        string InsertServcieRequestGenerateOrder(Inventory.Inventoryserref.BALServiceRequest argclsSRPODetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertServcieRequestGenerateOrder", ReplyAction="http://tempuri.org/IInventoryService/InsertServcieRequestGenerateOrderResponse")]
        System.Threading.Tasks.Task<string> InsertServcieRequestGenerateOrderAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRPODetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertServiceRequestApproveAction", ReplyAction="http://tempuri.org/IInventoryService/InsertServiceRequestApproveActionResponse")]
        string InsertServiceRequestApproveAction(Inventory.Inventoryserref.BALServiceRequest argclsSRPODetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertServiceRequestApproveAction", ReplyAction="http://tempuri.org/IInventoryService/InsertServiceRequestApproveActionResponse")]
        System.Threading.Tasks.Task<string> InsertServiceRequestApproveActionAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRPODetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetServiceRequestActionByMasterID", ReplyAction="http://tempuri.org/IInventoryService/GetServiceRequestActionByMasterIDResponse")]
        Inventory.Inventoryserref.GetServiceRequestActionByMasterID[] GetServiceRequestActionByMasterID(long ServiceRequestMasterID, long ServiceRequestDetailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetServiceRequestActionByMasterID", ReplyAction="http://tempuri.org/IInventoryService/GetServiceRequestActionByMasterIDResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetServiceRequestActionByMasterID[]> GetServiceRequestActionByMasterIDAsync(long ServiceRequestMasterID, long ServiceRequestDetailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateServiceRequestApproveAction", ReplyAction="http://tempuri.org/IInventoryService/UpdateServiceRequestApproveActionResponse")]
        string UpdateServiceRequestApproveAction(Inventory.Inventoryserref.BALServiceRequest argclsSRPODetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateServiceRequestApproveAction", ReplyAction="http://tempuri.org/IInventoryService/UpdateServiceRequestApproveActionResponse")]
        System.Threading.Tasks.Task<string> UpdateServiceRequestApproveActionAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRPODetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchServiceRequestPurchaseOrder", ReplyAction="http://tempuri.org/IInventoryService/SearchServiceRequestPurchaseOrderResponse")]
        Inventory.Inventoryserref.SearchServiceRequestPurchaseOrder[] SearchServiceRequestPurchaseOrder(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchServiceRequestPurchaseOrder", ReplyAction="http://tempuri.org/IInventoryService/SearchServiceRequestPurchaseOrderResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchServiceRequestPurchaseOrder[]> SearchServiceRequestPurchaseOrderAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchServiceRequestPurchaseOrderDetails", ReplyAction="http://tempuri.org/IInventoryService/SearchServiceRequestPurchaseOrderDetailsResp" +
            "onse")]
        Inventory.Inventoryserref.SearchServiceRequestPurchaseOrderDetails[] SearchServiceRequestPurchaseOrderDetails(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchServiceRequestPurchaseOrderDetails", ReplyAction="http://tempuri.org/IInventoryService/SearchServiceRequestPurchaseOrderDetailsResp" +
            "onse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchServiceRequestPurchaseOrderDetails[]> SearchServiceRequestPurchaseOrderDetailsAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateServcieRequestGenerateOrder", ReplyAction="http://tempuri.org/IInventoryService/UpdateServcieRequestGenerateOrderResponse")]
        string UpdateServcieRequestGenerateOrder(Inventory.Inventoryserref.BALServiceRequest argclsSRPODetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateServcieRequestGenerateOrder", ReplyAction="http://tempuri.org/IInventoryService/UpdateServcieRequestGenerateOrderResponse")]
        System.Threading.Tasks.Task<string> UpdateServcieRequestGenerateOrderAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRPODetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMultiRolesPermission", ReplyAction="http://tempuri.org/IInventoryService/BindMultiRolesPermissionResponse")]
        Inventory.Inventoryserref.BindMultiRolesPermission[] BindMultiRolesPermission(string ListUserID, long PermissionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMultiRolesPermission", ReplyAction="http://tempuri.org/IInventoryService/BindMultiRolesPermissionResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMultiRolesPermission[]> BindMultiRolesPermissionAsync(string ListUserID, long PermissionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertMultiPermissionApprove", ReplyAction="http://tempuri.org/IInventoryService/InsertMultiPermissionApproveResponse")]
        string InsertMultiPermissionApprove(Inventory.Inventoryserref.BALUser argUserApprovePermission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertMultiPermissionApprove", ReplyAction="http://tempuri.org/IInventoryService/InsertMultiPermissionApproveResponse")]
        System.Threading.Tasks.Task<string> InsertMultiPermissionApproveAsync(Inventory.Inventoryserref.BALUser argUserApprovePermission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMultiPermissionApprove", ReplyAction="http://tempuri.org/IInventoryService/UpdateMultiPermissionApproveResponse")]
        string UpdateMultiPermissionApprove(Inventory.Inventoryserref.BALUser argUserApprovePermission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMultiPermissionApprove", ReplyAction="http://tempuri.org/IInventoryService/UpdateMultiPermissionApproveResponse")]
        System.Threading.Tasks.Task<string> UpdateMultiPermissionApproveAsync(Inventory.Inventoryserref.BALUser argUserApprovePermission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMPRMasterOrder", ReplyAction="http://tempuri.org/IInventoryService/GetMPRMasterOrderResponse")]
        Inventory.Inventoryserref.GetMPRMasterOrder[] GetMPRMasterOrder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMPRMasterOrder", ReplyAction="http://tempuri.org/IInventoryService/GetMPRMasterOrderResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMPRMasterOrder[]> GetMPRMasterOrderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchMPRMasterOrder", ReplyAction="http://tempuri.org/IInventoryService/SearchMPRMasterOrderResponse")]
        Inventory.Inventoryserref.SearchMPRMasterOrder[] SearchMPRMasterOrder(Inventory.Inventoryserref.BALMachinePartsOrder argclsMPRMasterOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchMPRMasterOrder", ReplyAction="http://tempuri.org/IInventoryService/SearchMPRMasterOrderResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchMPRMasterOrder[]> SearchMPRMasterOrderAsync(Inventory.Inventoryserref.BALMachinePartsOrder argclsMPRMasterOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertMachinePO", ReplyAction="http://tempuri.org/IInventoryService/InsertMachinePOResponse")]
        string InsertMachinePO(Inventory.Inventoryserref.BALMachinePartsOrder argclsMPRPODetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertMachinePO", ReplyAction="http://tempuri.org/IInventoryService/InsertMachinePOResponse")]
        System.Threading.Tasks.Task<string> InsertMachinePOAsync(Inventory.Inventoryserref.BALMachinePartsOrder argclsMPRPODetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMPOrderContentPO", ReplyAction="http://tempuri.org/IInventoryService/GetMPOrderContentPOResponse")]
        Inventory.Inventoryserref.GetMPOrderContentPO[] GetMPOrderContentPO(long MPRMasterID, long LoggedInBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMPOrderContentPO", ReplyAction="http://tempuri.org/IInventoryService/GetMPOrderContentPOResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMPOrderContentPO[]> GetMPOrderContentPOAsync(long MPRMasterID, long LoggedInBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMachinePOReport", ReplyAction="http://tempuri.org/IInventoryService/BindMachinePOReportResponse")]
        Inventory.Inventoryserref.BindMachinePOReport[] BindMachinePOReport(string MPRMasterID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMachinePOReport", ReplyAction="http://tempuri.org/IInventoryService/BindMachinePOReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMachinePOReport[]> BindMachinePOReportAsync(string MPRMasterID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMachinePO", ReplyAction="http://tempuri.org/IInventoryService/UpdateMachinePOResponse")]
        string UpdateMachinePO(Inventory.Inventoryserref.BALMachinePartsOrder argclsmaPo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMachinePO", ReplyAction="http://tempuri.org/IInventoryService/UpdateMachinePOResponse")]
        System.Threading.Tasks.Task<string> UpdateMachinePOAsync(Inventory.Inventoryserref.BALMachinePartsOrder argclsmaPo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMPRPoStatus", ReplyAction="http://tempuri.org/IInventoryService/UpdateMPRPoStatusResponse")]
        string UpdateMPRPoStatus(Inventory.Inventoryserref.BALMachinePartsOrder argclsmsrpo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMPRPoStatus", ReplyAction="http://tempuri.org/IInventoryService/UpdateMPRPoStatusResponse")]
        System.Threading.Tasks.Task<string> UpdateMPRPoStatusAsync(Inventory.Inventoryserref.BALMachinePartsOrder argclsmsrpo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertMachineApprove", ReplyAction="http://tempuri.org/IInventoryService/InsertMachineApproveResponse")]
        string InsertMachineApprove(Inventory.Inventoryserref.BALMachinePartsOrder argclsmsrpo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertMachineApprove", ReplyAction="http://tempuri.org/IInventoryService/InsertMachineApproveResponse")]
        System.Threading.Tasks.Task<string> InsertMachineApproveAsync(Inventory.Inventoryserref.BALMachinePartsOrder argclsmsrpo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMachinePartsOrderMPONo", ReplyAction="http://tempuri.org/IInventoryService/GetMachinePartsOrderMPONoResponse")]
        Inventory.Inventoryserref.GetMachinePartsOrderMPONo[] GetMachinePartsOrderMPONo(string MPRMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMachinePartsOrderMPONo", ReplyAction="http://tempuri.org/IInventoryService/GetMachinePartsOrderMPONoResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMachinePartsOrderMPONo[]> GetMachinePartsOrderMPONoAsync(string MPRMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchCapitalPO", ReplyAction="http://tempuri.org/IInventoryService/SearchCapitalPOResponse")]
        Inventory.Inventoryserref.SearchCapitalPO[] SearchCapitalPO(Inventory.Inventoryserref.BALCapitalPO argInsCRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchCapitalPO", ReplyAction="http://tempuri.org/IInventoryService/SearchCapitalPOResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchCapitalPO[]> SearchCapitalPOAsync(Inventory.Inventoryserref.BALCapitalPO argInsCRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertCapitalPO", ReplyAction="http://tempuri.org/IInventoryService/InsertCapitalPOResponse")]
        string InsertCapitalPO(Inventory.Inventoryserref.BALCapitalPO argclsCRPODetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertCapitalPO", ReplyAction="http://tempuri.org/IInventoryService/InsertCapitalPOResponse")]
        System.Threading.Tasks.Task<string> InsertCapitalPOAsync(Inventory.Inventoryserref.BALCapitalPO argclsCRPODetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCROrderContentPO", ReplyAction="http://tempuri.org/IInventoryService/GetCROrderContentPOResponse")]
        Inventory.Inventoryserref.GetCROrderContentPO[] GetCROrderContentPO(Inventory.Inventoryserref.BALCapitalPO argclsCRPO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCROrderContentPO", ReplyAction="http://tempuri.org/IInventoryService/GetCROrderContentPOResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCROrderContentPO[]> GetCROrderContentPOAsync(Inventory.Inventoryserref.BALCapitalPO argclsCRPO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCapitalPOReport", ReplyAction="http://tempuri.org/IInventoryService/GetCapitalPOReportResponse")]
        Inventory.Inventoryserref.GetCapitalPOReport[] GetCapitalPOReport(string CapitalItemMasterID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCapitalPOReport", ReplyAction="http://tempuri.org/IInventoryService/GetCapitalPOReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCapitalPOReport[]> GetCapitalPOReportAsync(string CapitalItemMasterID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateCRPOOrderContent", ReplyAction="http://tempuri.org/IInventoryService/UpdateCRPOOrderContentResponse")]
        string UpdateCRPOOrderContent(Inventory.Inventoryserref.BALCapitalPO argclsmsrpo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateCRPOOrderContent", ReplyAction="http://tempuri.org/IInventoryService/UpdateCRPOOrderContentResponse")]
        System.Threading.Tasks.Task<string> UpdateCRPOOrderContentAsync(Inventory.Inventoryserref.BALCapitalPO argclsmsrpo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertCapitalApprove", ReplyAction="http://tempuri.org/IInventoryService/InsertCapitalApproveResponse")]
        string InsertCapitalApprove(Inventory.Inventoryserref.BALCapitalPO argclsCRAODetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertCapitalApprove", ReplyAction="http://tempuri.org/IInventoryService/InsertCapitalApproveResponse")]
        System.Threading.Tasks.Task<string> InsertCapitalApproveAsync(Inventory.Inventoryserref.BALCapitalPO argclsCRAODetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCapitalOrderCPONo", ReplyAction="http://tempuri.org/IInventoryService/GetCapitalOrderCPONoResponse")]
        Inventory.Inventoryserref.GetCapitalOrderCPONo[] GetCapitalOrderCPONo(string CapitalItemMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCapitalOrderCPONo", ReplyAction="http://tempuri.org/IInventoryService/GetCapitalOrderCPONoResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCapitalOrderCPONo[]> GetCapitalOrderCPONoAsync(string CapitalItemMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchMachinePartsReceive", ReplyAction="http://tempuri.org/IInventoryService/SearchMachinePartsReceiveResponse")]
        Inventory.Inventoryserref.SearchMachinePartsReceive[] SearchMachinePartsReceive(Inventory.Inventoryserref.BALMachinePartsReceiveOrder argclsMPRMasterReceive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchMachinePartsReceive", ReplyAction="http://tempuri.org/IInventoryService/SearchMachinePartsReceiveResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchMachinePartsReceive[]> SearchMachinePartsReceiveAsync(Inventory.Inventoryserref.BALMachinePartsReceiveOrder argclsMPRMasterReceive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GETMPOValues", ReplyAction="http://tempuri.org/IInventoryService/GETMPOValuesResponse")]
        Inventory.Inventoryserref.GETMPOValues[] GETMPOValues(long MachinePartsReceiveMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GETMPOValues", ReplyAction="http://tempuri.org/IInventoryService/GETMPOValuesResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GETMPOValues[]> GETMPOValuesAsync(long MachinePartsReceiveMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GETMPROValues", ReplyAction="http://tempuri.org/IInventoryService/GETMPROValuesResponse")]
        Inventory.Inventoryserref.GETMPROValues[] GETMPROValues(long MachinePartsReceiveMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GETMPROValues", ReplyAction="http://tempuri.org/IInventoryService/GETMPROValuesResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GETMPROValues[]> GETMPROValuesAsync(long MachinePartsReceiveMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SyncMachinePartsReceivingorder", ReplyAction="http://tempuri.org/IInventoryService/SyncMachinePartsReceivingorderResponse")]
        string SyncMachinePartsReceivingorder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SyncMachinePartsReceivingorder", ReplyAction="http://tempuri.org/IInventoryService/SyncMachinePartsReceivingorderResponse")]
        System.Threading.Tasks.Task<string> SyncMachinePartsReceivingorderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMachineReceivingDetailsReport", ReplyAction="http://tempuri.org/IInventoryService/BindMachineReceivingDetailsReportResponse")]
        Inventory.Inventoryserref.BindMachineReceivingDetailsReport[] BindMachineReceivingDetailsReport(long MachinrPartsRequestOrderID, long MachinrPartsReceivingMasterID, long LoggedInBy, string Filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMachineReceivingDetailsReport", ReplyAction="http://tempuri.org/IInventoryService/BindMachineReceivingDetailsReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMachineReceivingDetailsReport[]> BindMachineReceivingDetailsReportAsync(long MachinrPartsRequestOrderID, long MachinrPartsReceivingMasterID, long LoggedInBy, string Filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMachinePartReceivingDetailsSubReport", ReplyAction="http://tempuri.org/IInventoryService/BindMachinePartReceivingDetailsSubReportResp" +
            "onse")]
        Inventory.Inventoryserref.BindMachinePartReceivingDetailsSubReport[] BindMachinePartReceivingDetailsSubReport(long MPRequestMasterID, long LockedBy, string Filters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMachinePartReceivingDetailsSubReport", ReplyAction="http://tempuri.org/IInventoryService/BindMachinePartReceivingDetailsSubReportResp" +
            "onse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMachinePartReceivingDetailsSubReport[]> BindMachinePartReceivingDetailsSubReportAsync(long MPRequestMasterID, long LockedBy, string Filters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMachineReceiveSummaryReport", ReplyAction="http://tempuri.org/IInventoryService/BindMachineReceiveSummaryReportResponse")]
        Inventory.Inventoryserref.BindMachineReceiveSummaryReport[] BindMachineReceiveSummaryReport(long MachinePartsRequestOrderID, long LockedBy, string Filters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMachineReceiveSummaryReport", ReplyAction="http://tempuri.org/IInventoryService/BindMachineReceiveSummaryReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMachineReceiveSummaryReport[]> BindMachineReceiveSummaryReportAsync(long MachinePartsRequestOrderID, long LockedBy, string Filters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMachinePartsReceivingMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateMachinePartsReceivingMasterResponse")]
        Inventory.Inventoryserref.UpdateMachinePartsReceivingMaster[] UpdateMachinePartsReceivingMaster(Inventory.Inventoryserref.BALMachinePartsReceiveOrder argclsMPRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMachinePartsReceivingMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateMachinePartsReceivingMasterResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.UpdateMachinePartsReceivingMaster[]> UpdateMachinePartsReceivingMasterAsync(Inventory.Inventoryserref.BALMachinePartsReceiveOrder argclsMPRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMachinePartsReceivingDetails", ReplyAction="http://tempuri.org/IInventoryService/UpdateMachinePartsReceivingDetailsResponse")]
        string UpdateMachinePartsReceivingDetails(Inventory.Inventoryserref.BALMachinePartsReceiveOrder argclsMPRDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMachinePartsReceivingDetails", ReplyAction="http://tempuri.org/IInventoryService/UpdateMachinePartsReceivingDetailsResponse")]
        System.Threading.Tasks.Task<string> UpdateMachinePartsReceivingDetailsAsync(Inventory.Inventoryserref.BALMachinePartsReceiveOrder argclsMPRDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchMedicalSuppliesReceiving", ReplyAction="http://tempuri.org/IInventoryService/SearchMedicalSuppliesReceivingResponse")]
        Inventory.Inventoryserref.SearchMedicalSuppliesReceiving[] SearchMedicalSuppliesReceiving(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argclsMedicalSuppliesRec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchMedicalSuppliesReceiving", ReplyAction="http://tempuri.org/IInventoryService/SearchMedicalSuppliesReceivingResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchMedicalSuppliesReceiving[]> SearchMedicalSuppliesReceivingAsync(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argclsMedicalSuppliesRec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMedicalsupplyReceivingDetail", ReplyAction="http://tempuri.org/IInventoryService/BindMedicalsupplyReceivingDetailResponse")]
        Inventory.Inventoryserref.BindMedicalsupplyReceivingDetail[] BindMedicalsupplyReceivingDetail(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argclsMedicalSuppliesRec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMedicalsupplyReceivingDetail", ReplyAction="http://tempuri.org/IInventoryService/BindMedicalsupplyReceivingDetailResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMedicalsupplyReceivingDetail[]> BindMedicalsupplyReceivingDetailAsync(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argclsMedicalSuppliesRec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SyncMedicalSuppliesReceivingorder", ReplyAction="http://tempuri.org/IInventoryService/SyncMedicalSuppliesReceivingorderResponse")]
        string SyncMedicalSuppliesReceivingorder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SyncMedicalSuppliesReceivingorder", ReplyAction="http://tempuri.org/IInventoryService/SyncMedicalSuppliesReceivingorderResponse")]
        System.Threading.Tasks.Task<string> SyncMedicalSuppliesReceivingorderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMSRReceivingMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateMSRReceivingMasterResponse")]
        Inventory.Inventoryserref.UpdateMSRReceivingMaster[] UpdateMSRReceivingMaster(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argclsMedicalSuppliesRec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMSRReceivingMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateMSRReceivingMasterResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.UpdateMSRReceivingMaster[]> UpdateMSRReceivingMasterAsync(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argclsMedicalSuppliesRec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMSRReceivingDetails", ReplyAction="http://tempuri.org/IInventoryService/UpdateMSRReceivingDetailsResponse")]
        string UpdateMSRReceivingDetails(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argclsMedicalSuppliesRec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMSRReceivingDetails", ReplyAction="http://tempuri.org/IInventoryService/UpdateMSRReceivingDetailsResponse")]
        System.Threading.Tasks.Task<string> UpdateMSRReceivingDetailsAsync(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argclsMedicalSuppliesRec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMSRReceivingsummaryReport", ReplyAction="http://tempuri.org/IInventoryService/GetMSRReceivingsummaryReportResponse")]
        Inventory.Inventoryserref.GetMSRReceivingsummaryReport[] GetMSRReceivingsummaryReport(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argmsr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMSRReceivingsummaryReport", ReplyAction="http://tempuri.org/IInventoryService/GetMSRReceivingsummaryReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMSRReceivingsummaryReport[]> GetMSRReceivingsummaryReportAsync(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argmsr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMedicalSupplyDetailsReport", ReplyAction="http://tempuri.org/IInventoryService/BindMedicalSupplyDetailsReportResponse")]
        Inventory.Inventoryserref.BindMedicalSupplyDetailsReport[] BindMedicalSupplyDetailsReport(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argmsr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMedicalSupplyDetailsReport", ReplyAction="http://tempuri.org/IInventoryService/BindMedicalSupplyDetailsReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMedicalSupplyDetailsReport[]> BindMedicalSupplyDetailsReportAsync(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argmsr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMedicalSupplyDetailsSubReport", ReplyAction="http://tempuri.org/IInventoryService/BindMedicalSupplyDetailsSubReportResponse")]
        Inventory.Inventoryserref.BindMedicalSupplyDetailsSubReport[] BindMedicalSupplyDetailsSubReport(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argmsr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMedicalSupplyDetailsSubReport", ReplyAction="http://tempuri.org/IInventoryService/BindMedicalSupplyDetailsSubReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMedicalSupplyDetailsSubReport[]> BindMedicalSupplyDetailsSubReportAsync(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argmsr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMachinePartsReport", ReplyAction="http://tempuri.org/IInventoryService/BindMachinePartsReportResponse")]
        Inventory.Inventoryserref.BindMachinePartsReport[] BindMachinePartsReport(string MPRMasterID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMachinePartsReport", ReplyAction="http://tempuri.org/IInventoryService/BindMachinePartsReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMachinePartsReport[]> BindMachinePartsReportAsync(string MPRMasterID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMPRMaster", ReplyAction="http://tempuri.org/IInventoryService/GetMPRMasterResponse")]
        Inventory.Inventoryserref.GetMPRMaster[] GetMPRMaster();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMPRMaster", ReplyAction="http://tempuri.org/IInventoryService/GetMPRMasterResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMPRMaster[]> GetMPRMasterAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMPRDetailsbyMPRMasterID", ReplyAction="http://tempuri.org/IInventoryService/GetMPRDetailsbyMPRMasterIDResponse")]
        Inventory.Inventoryserref.GetMPRDetailsbyMPRMasterID[] GetMPRDetailsbyMPRMasterID(long MPRMasterID, long LockedBy, long LockTimeOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMPRDetailsbyMPRMasterID", ReplyAction="http://tempuri.org/IInventoryService/GetMPRDetailsbyMPRMasterIDResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMPRDetailsbyMPRMasterID[]> GetMPRDetailsbyMPRMasterIDAsync(long MPRMasterID, long LockedBy, long LockTimeOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetList", ReplyAction="http://tempuri.org/IInventoryService/GetListResponse")]
        Inventory.Inventoryserref.GetList[] GetList(string ScreenName, string ListName, string Mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetList", ReplyAction="http://tempuri.org/IInventoryService/GetListResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetList[]> GetListAsync(string ScreenName, string ListName, string Mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchMPRMaster", ReplyAction="http://tempuri.org/IInventoryService/SearchMPRMasterResponse")]
        Inventory.Inventoryserref.SearchMPRMaster[] SearchMPRMaster(Inventory.Inventoryserref.BALMPRMaster argclsMPRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchMPRMaster", ReplyAction="http://tempuri.org/IInventoryService/SearchMPRMasterResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchMPRMaster[]> SearchMPRMasterAsync(Inventory.Inventoryserref.BALMPRMaster argclsMPRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertMPRMaster", ReplyAction="http://tempuri.org/IInventoryService/InsertMPRMasterResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCorporate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCapitalReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALRequestITReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMachinePartsReceiveOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALActivityTracking))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALServiceRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALEndingInventory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALTransferOut))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALTransferIn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMedicalSuppliesRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFacilityVendorAccount))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALVendor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALPGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALUom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMachinemaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCapital))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMedicalSupplyRequestPo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALRequestITPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMachinePartsOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCapitalPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMPRMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALRequestIT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALGPBill))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFaItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFacilitySupply))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorItemMap[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchUserDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchUserDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.chkvalidcorporate[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.chkvalidcorporate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListVendorID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListVendorID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceivingSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceivingSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRDetailsbyMPRMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRDetailsbyMPRMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceiveSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceiveSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceivingSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceivingSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidFaciliityAccountCode[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidFaciliityAccountCode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorOrderType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorOrderType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckVendorOrderDue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermissionforUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermissionforUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Getitronovalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Getitronovalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceiving[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITNNOvalues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITNNOvalues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingsummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingsummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateITRecevingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateITRecevingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateCapitalRecevingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateCapitalRecevingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCpoDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCpoDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCPROMasterReview[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCPROMasterReview))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingsummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingsummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestetailsbyServiceRequestMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestetailsbyServiceRequestMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestReceivingOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestReceivingOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceReceiveOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceReceiveOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityByListCorporateID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityByListCorporateID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorByFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorByFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchEndingInventory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchEndingInventory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetReceivedQtyInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetReceivedQtyInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferINQtyInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferINQtyInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferOutQtyInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferOutQtyInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.EndingInventoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.EndingInventoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCatagoryByFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCatagoryByFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOut[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOut))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferNo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferNo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEmailNotificationforTransfer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEmailNotificationforTransfer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFromEmailforTransfer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFromEmailforTransfer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferIn[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferIn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferInHistory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferInHistory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOutHistory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOutHistory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferInHistoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferInHistoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutHistoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutHistoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyDetail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCorporateMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCorporateMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleForFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleForFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRolesForFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRolesForFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityVendorAccountReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityVendorAccountReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMasterReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMasterReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorItemMapReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorItemMapReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindUserSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindUserSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferInReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferInReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETVendorUniqueName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETVendorUniqueName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUOMName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUOMName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorItemMappingPage[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorItemMappingPage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validgpbillcode[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validgpbillcode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validuseremail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validuseremail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPermissionReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPermissionReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDueReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDueReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySuppliesMapReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySuppliesMapReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDescName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDescName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUomReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUomReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderdueRemainderReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderdueRemainderReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchFacilityVendorAcct[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchFacilityVendorAcct))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentSubCategoryforCapital[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentSubCategoryforCapital))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementListforCapital[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementListforCapital))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidCapitalEquipment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidCapitalEquipment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRMultipleIDs[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRMultipleIDs))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequestPo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequestPo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSROrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSROrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyPoReportDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyPoReportDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSuperAdminDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSuperAdminDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipement[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipement))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementSubCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementSubCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementSubCategoryvalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementSubCategoryvalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentSubCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentSubCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementSubCategoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementSubCategoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserApprovePermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserApprovePermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMultiUserApprove[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMultiUserApprove))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETITRequestPODetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETITRequestPODetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchRequestITPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchRequestITPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITDetailsfromPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITDetailsfromPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITROrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITROrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITRequestPOReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITRequestPOReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRwdlsafterordergeneration[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRwdlsafterordergeneration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPODetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPODetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPOGenerateDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPOGenerateDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSROrderContentPOReports[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSROrderContentPOReports))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPoReportDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPoReportDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestActionByMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestActionByMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrderDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrderDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMultiRolesPermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMultiRolesPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMasterOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMasterOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMasterOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMasterOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPOrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPOrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePOReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePOReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinePartsOrderMPONo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinePartsOrderMPONo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCROrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCROrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalPOReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalPOReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalOrderCPONo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalOrderCPONo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceive[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceive))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPOValues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPOValues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPROValues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPROValues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceivingDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceivingDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartReceivingDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartReceivingDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceiveSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceiveSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMachinePartsReceivingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMachinePartsReceivingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceiving[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyReceivingDetail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyReceivingDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMSRReceivingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMSRReceivingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRReceivingsummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRReceivingsummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidMachineEquipment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidMachineEquipment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetmedicalsupplyReviewReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetmedicalsupplyReviewReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalsuppliesItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalsuppliesItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLookUpList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLookUpList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetOrderPeriod[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetOrderPeriod))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequest[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymasterandDetail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymasterandDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.AddMedicalsupplyitem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.AddMedicalsupplyitem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedShippingValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedShippingValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedTimeDeliveryValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedTimeDeliveryValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateShippingValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateShippingValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateTimeDeliveryValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateTimeDeliveryValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindServiceRequestReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindServiceRequestReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckServicelist[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckServicelist))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceAttachment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceAttachment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveServiceListvalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveServiceListvalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceTempAttachment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceTempAttachment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRequestITMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRequestITMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminRequestITMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminRequestITMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITRequest[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITRequestDetailsbyMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITRequestDetailsbyMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementsubcategoryFORIT[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementsubcategoryFORIT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementListFORIT[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementListFORIT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSerialNo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSerialNo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITPartsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITPartsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidITEquipment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidITEquipment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalItemRequestReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalItemRequestReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalItemRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalItemRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLoginDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLoginDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserInformation[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserInformation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetvendorDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetvendorDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindExistuser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindExistuser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleandFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleandFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetPermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpMainMenu[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpMainMenu))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpSubMenu[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpSubMenu))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetState[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetState))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.IsUserExist[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.IsUserExist))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchItemCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchItemCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlLoadValues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlLoadValues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMap[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMapping[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMapping))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDRD[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDRD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetDrpItemsByCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetDrpItemsByCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlCurrency[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlCurrency))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUom[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCorporateFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCorporateFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UserFacilityRole[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UserFacilityRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetGPBilling[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetGPBilling))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPagePermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPagePermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityItemMap[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemsbyFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemsbyFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityShortName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityShortName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityVendorAccount[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityVendorAccount))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateVendorOrderType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateVendorOrderType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorOrderDue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupply[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupply))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupplyGird[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupplyGird))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinemasterDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinemasterDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterbasedMachineID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterbasedMachineID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinemasterdetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinemasterdetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckEquipmentlist[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckEquipmentlist))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementListvalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementListvalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminMedicalSupplyMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminMedicalSupplyMaster))]
        object[] InsertMPRMaster(Inventory.Inventoryserref.BALMPRMaster argInsMPRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertMPRMaster", ReplyAction="http://tempuri.org/IInventoryService/InsertMPRMasterResponse")]
        System.Threading.Tasks.Task<object[]> InsertMPRMasterAsync(Inventory.Inventoryserref.BALMPRMaster argInsMPRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertMPRDetails", ReplyAction="http://tempuri.org/IInventoryService/InsertMPRDetailsResponse")]
        string InsertMPRDetails(Inventory.Inventoryserref.BALMPRMaster argInsMPRDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertMPRDetails", ReplyAction="http://tempuri.org/IInventoryService/InsertMPRDetailsResponse")]
        System.Threading.Tasks.Task<string> InsertMPRDetailsAsync(Inventory.Inventoryserref.BALMPRMaster argInsMPRDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMPRMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateMPRMasterResponse")]
        string UpdateMPRMaster(Inventory.Inventoryserref.BALMPRMaster argupdMPRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMPRMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateMPRMasterResponse")]
        System.Threading.Tasks.Task<string> UpdateMPRMasterAsync(Inventory.Inventoryserref.BALMPRMaster argupdMPRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMPRDetails", ReplyAction="http://tempuri.org/IInventoryService/UpdateMPRDetailsResponse")]
        string UpdateMPRDetails(Inventory.Inventoryserref.BALMPRMaster argUpdMPRDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMPRDetails", ReplyAction="http://tempuri.org/IInventoryService/UpdateMPRDetailsResponse")]
        System.Threading.Tasks.Task<string> UpdateMPRDetailsAsync(Inventory.Inventoryserref.BALMPRMaster argUpdMPRDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteMPRDetails", ReplyAction="http://tempuri.org/IInventoryService/DeleteMPRDetailsResponse")]
        string DeleteMPRDetails(long argMPRDetailsID, bool IsActive, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteMPRDetails", ReplyAction="http://tempuri.org/IInventoryService/DeleteMPRDetailsResponse")]
        System.Threading.Tasks.Task<string> DeleteMPRDetailsAsync(long argMPRDetailsID, bool IsActive, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/ValidMachineEquipment", ReplyAction="http://tempuri.org/IInventoryService/ValidMachineEquipmentResponse")]
        Inventory.Inventoryserref.ValidMachineEquipment[] ValidMachineEquipment(long EquipmentCategory, long EquipementSubcategory, long EquipmentList, long FacilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/ValidMachineEquipment", ReplyAction="http://tempuri.org/IInventoryService/ValidMachineEquipmentResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.ValidMachineEquipment[]> ValidMachineEquipmentAsync(long EquipmentCategory, long EquipementSubcategory, long EquipmentList, long FacilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetmedicalsupplyReviewReport", ReplyAction="http://tempuri.org/IInventoryService/GetmedicalsupplyReviewReportResponse")]
        Inventory.Inventoryserref.GetmedicalsupplyReviewReport[] GetmedicalsupplyReviewReport(string MedicalSupplyMasterID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetmedicalsupplyReviewReport", ReplyAction="http://tempuri.org/IInventoryService/GetmedicalsupplyReviewReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetmedicalsupplyReviewReport[]> GetmedicalsupplyReviewReportAsync(string MedicalSupplyMasterID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMedicalsuppliesItem", ReplyAction="http://tempuri.org/IInventoryService/GetMedicalsuppliesItemResponse")]
        Inventory.Inventoryserref.GetMedicalsuppliesItem[] GetMedicalsuppliesItem(long CorporateID, long FacilityID, long VendorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMedicalsuppliesItem", ReplyAction="http://tempuri.org/IInventoryService/GetMedicalsuppliesItemResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMedicalsuppliesItem[]> GetMedicalsuppliesItemAsync(long CorporateID, long FacilityID, long VendorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertShipping", ReplyAction="http://tempuri.org/IInventoryService/InsertShippingResponse")]
        string InsertShipping(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertShipping", ReplyAction="http://tempuri.org/IInventoryService/InsertShippingResponse")]
        System.Threading.Tasks.Task<string> InsertShippingAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateShipping", ReplyAction="http://tempuri.org/IInventoryService/UpdateShippingResponse")]
        string UpdateShipping(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateShipping", ReplyAction="http://tempuri.org/IInventoryService/UpdateShippingResponse")]
        System.Threading.Tasks.Task<string> UpdateShippingAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteShipping", ReplyAction="http://tempuri.org/IInventoryService/DeleteShippingResponse")]
        string DeleteShipping(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteShipping", ReplyAction="http://tempuri.org/IInventoryService/DeleteShippingResponse")]
        System.Threading.Tasks.Task<string> DeleteShippingAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertTimeDelivery", ReplyAction="http://tempuri.org/IInventoryService/InsertTimeDeliveryResponse")]
        string InsertTimeDelivery(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertTimeDelivery", ReplyAction="http://tempuri.org/IInventoryService/InsertTimeDeliveryResponse")]
        System.Threading.Tasks.Task<string> InsertTimeDeliveryAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateTimeDelivery", ReplyAction="http://tempuri.org/IInventoryService/UpdateTimeDeliveryResponse")]
        string UpdateTimeDelivery(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateTimeDelivery", ReplyAction="http://tempuri.org/IInventoryService/UpdateTimeDeliveryResponse")]
        System.Threading.Tasks.Task<string> UpdateTimeDeliveryAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteTimeDelivery", ReplyAction="http://tempuri.org/IInventoryService/DeleteTimeDeliveryResponse")]
        string DeleteTimeDelivery(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteTimeDelivery", ReplyAction="http://tempuri.org/IInventoryService/DeleteTimeDeliveryResponse")]
        System.Threading.Tasks.Task<string> DeleteTimeDeliveryAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetLookUpList", ReplyAction="http://tempuri.org/IInventoryService/GetLookUpListResponse")]
        Inventory.Inventoryserref.GetLookUpList[] GetLookUpList(long LookUpID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetLookUpList", ReplyAction="http://tempuri.org/IInventoryService/GetLookUpListResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetLookUpList[]> GetLookUpListAsync(long LookUpID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetOrderPeriod", ReplyAction="http://tempuri.org/IInventoryService/GetOrderPeriodResponse")]
        Inventory.Inventoryserref.GetOrderPeriod[] GetOrderPeriod(long CorporateID, long FacilityID, long VendorID, int Ordertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetOrderPeriod", ReplyAction="http://tempuri.org/IInventoryService/GetOrderPeriodResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetOrderPeriod[]> GetOrderPeriodAsync(long CorporateID, long FacilityID, long VendorID, int Ordertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertMedicalsupplyMaster", ReplyAction="http://tempuri.org/IInventoryService/InsertMedicalsupplyMasterResponse")]
        long InsertMedicalsupplyMaster(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertMedicalsupplyMaster", ReplyAction="http://tempuri.org/IInventoryService/InsertMedicalsupplyMasterResponse")]
        System.Threading.Tasks.Task<long> InsertMedicalsupplyMasterAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertMedicalSuppliesDetail", ReplyAction="http://tempuri.org/IInventoryService/InsertMedicalSuppliesDetailResponse")]
        string InsertMedicalSuppliesDetail(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertMedicalSuppliesDetail", ReplyAction="http://tempuri.org/IInventoryService/InsertMedicalSuppliesDetailResponse")]
        System.Threading.Tasks.Task<string> InsertMedicalSuppliesDetailAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMedicalSupplyRequestMaster", ReplyAction="http://tempuri.org/IInventoryService/GetMedicalSupplyRequestMasterResponse")]
        Inventory.Inventoryserref.GetMedicalSupplyRequestMaster[] GetMedicalSupplyRequestMaster();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMedicalSupplyRequestMaster", ReplyAction="http://tempuri.org/IInventoryService/GetMedicalSupplyRequestMasterResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMedicalSupplyRequestMaster[]> GetMedicalSupplyRequestMasterAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchMedicalSupplyRequest", ReplyAction="http://tempuri.org/IInventoryService/SearchMedicalSupplyRequestResponse")]
        Inventory.Inventoryserref.SearchMedicalSupplyRequest[] SearchMedicalSupplyRequest(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsMedicalSuppliesReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchMedicalSupplyRequest", ReplyAction="http://tempuri.org/IInventoryService/SearchMedicalSupplyRequestResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchMedicalSupplyRequest[]> SearchMedicalSupplyRequestAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsMedicalSuppliesReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMedicalsupplymasterandDetail", ReplyAction="http://tempuri.org/IInventoryService/BindMedicalsupplymasterandDetailResponse")]
        Inventory.Inventoryserref.BindMedicalsupplymasterandDetail[] BindMedicalsupplymasterandDetail(long MedicalSupplyMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMedicalsupplymasterandDetail", ReplyAction="http://tempuri.org/IInventoryService/BindMedicalsupplymasterandDetailResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMedicalsupplymasterandDetail[]> BindMedicalsupplymasterandDetailAsync(long MedicalSupplyMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMedicalsupplymaster", ReplyAction="http://tempuri.org/IInventoryService/BindMedicalsupplymasterResponse")]
        Inventory.Inventoryserref.BindMedicalsupplymaster[] BindMedicalsupplymaster(long MedicalSupplyMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMedicalsupplymaster", ReplyAction="http://tempuri.org/IInventoryService/BindMedicalsupplymasterResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMedicalsupplymaster[]> BindMedicalsupplymasterAsync(long MedicalSupplyMasterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMedicalsupplyDetail", ReplyAction="http://tempuri.org/IInventoryService/BindMedicalsupplyDetailResponse")]
        Inventory.Inventoryserref.BindMedicalsupplyDetail[] BindMedicalsupplyDetail(long MedicalSupplyMasterID, long LockedBy, long LockTimeOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindMedicalsupplyDetail", ReplyAction="http://tempuri.org/IInventoryService/BindMedicalsupplyDetailResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMedicalsupplyDetail[]> BindMedicalsupplyDetailAsync(long MedicalSupplyMasterID, long LockedBy, long LockTimeOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMedicalsupplyMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateMedicalsupplyMasterResponse")]
        string UpdateMedicalsupplyMaster(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMedicalsupplyMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateMedicalsupplyMasterResponse")]
        System.Threading.Tasks.Task<string> UpdateMedicalsupplyMasterAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMedicalSupplyDetails", ReplyAction="http://tempuri.org/IInventoryService/UpdateMedicalSupplyDetailsResponse")]
        string UpdateMedicalSupplyDetails(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMedicalSupplyDetails", ReplyAction="http://tempuri.org/IInventoryService/UpdateMedicalSupplyDetailsResponse")]
        System.Threading.Tasks.Task<string> UpdateMedicalSupplyDetailsAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteMedicalSuppliesDetails", ReplyAction="http://tempuri.org/IInventoryService/DeleteMedicalSuppliesDetailsResponse")]
        string DeleteMedicalSuppliesDetails(long argMSRID, long UpdatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteMedicalSuppliesDetails", ReplyAction="http://tempuri.org/IInventoryService/DeleteMedicalSuppliesDetailsResponse")]
        System.Threading.Tasks.Task<string> DeleteMedicalSuppliesDetailsAsync(long argMSRID, long UpdatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/AddMedicalsupplyitem", ReplyAction="http://tempuri.org/IInventoryService/AddMedicalsupplyitemResponse")]
        Inventory.Inventoryserref.AddMedicalsupplyitem[] AddMedicalsupplyitem(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/AddMedicalsupplyitem", ReplyAction="http://tempuri.org/IInventoryService/AddMedicalsupplyitemResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.AddMedicalsupplyitem[]> AddMedicalsupplyitemAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SavedShippingValue", ReplyAction="http://tempuri.org/IInventoryService/SavedShippingValueResponse")]
        Inventory.Inventoryserref.SavedShippingValue[] SavedShippingValue();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SavedShippingValue", ReplyAction="http://tempuri.org/IInventoryService/SavedShippingValueResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SavedShippingValue[]> SavedShippingValueAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SavedTimeDeliveryValue", ReplyAction="http://tempuri.org/IInventoryService/SavedTimeDeliveryValueResponse")]
        Inventory.Inventoryserref.SavedTimeDeliveryValue[] SavedTimeDeliveryValue();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SavedTimeDeliveryValue", ReplyAction="http://tempuri.org/IInventoryService/SavedTimeDeliveryValueResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SavedTimeDeliveryValue[]> SavedTimeDeliveryValueAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/FindDuplicateShippingValue", ReplyAction="http://tempuri.org/IInventoryService/FindDuplicateShippingValueResponse")]
        Inventory.Inventoryserref.FindDuplicateShippingValue[] FindDuplicateShippingValue(string ShippingValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/FindDuplicateShippingValue", ReplyAction="http://tempuri.org/IInventoryService/FindDuplicateShippingValueResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.FindDuplicateShippingValue[]> FindDuplicateShippingValueAsync(string ShippingValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/FindDuplicateTimeDeliveryValue", ReplyAction="http://tempuri.org/IInventoryService/FindDuplicateTimeDeliveryValueResponse")]
        Inventory.Inventoryserref.FindDuplicateTimeDeliveryValue[] FindDuplicateTimeDeliveryValue(string TimeDeliveryValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/FindDuplicateTimeDeliveryValue", ReplyAction="http://tempuri.org/IInventoryService/FindDuplicateTimeDeliveryValueResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.FindDuplicateTimeDeliveryValue[]> FindDuplicateTimeDeliveryValueAsync(string TimeDeliveryValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindServiceRequestReport", ReplyAction="http://tempuri.org/IInventoryService/BindServiceRequestReportResponse")]
        Inventory.Inventoryserref.BindServiceRequestReport[] BindServiceRequestReport(string ServiceRequestMasterID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindServiceRequestReport", ReplyAction="http://tempuri.org/IInventoryService/BindServiceRequestReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindServiceRequestReport[]> BindServiceRequestReportAsync(string ServiceRequestMasterID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetServiceRequestMaster", ReplyAction="http://tempuri.org/IInventoryService/GetServiceRequestMasterResponse")]
        Inventory.Inventoryserref.GetServiceRequestMaster[] GetServiceRequestMaster();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetServiceRequestMaster", ReplyAction="http://tempuri.org/IInventoryService/GetServiceRequestMasterResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetServiceRequestMaster[]> GetServiceRequestMasterAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetServiceRequestetailsbyServiceRequestMaste" +
            "rID", ReplyAction="http://tempuri.org/IInventoryService/GetServiceRequestetailsbyServiceRequestMaste" +
            "rIDResponse")]
        Inventory.Inventoryserref.GetServiceRequestetailsbyServiceRequestMasterID[] GetServiceRequestetailsbyServiceRequestMasterID(long SRMasterID, long LockedBy, long LockTimeOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetServiceRequestetailsbyServiceRequestMaste" +
            "rID", ReplyAction="http://tempuri.org/IInventoryService/GetServiceRequestetailsbyServiceRequestMaste" +
            "rIDResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetServiceRequestetailsbyServiceRequestMasterID[]> GetServiceRequestetailsbyServiceRequestMasterIDAsync(long SRMasterID, long LockedBy, long LockTimeOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetServiceCategory", ReplyAction="http://tempuri.org/IInventoryService/GetServiceCategoryResponse")]
        Inventory.Inventoryserref.GetServiceCategory[] GetServiceCategory(long CorporateID, string Mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetServiceCategory", ReplyAction="http://tempuri.org/IInventoryService/GetServiceCategoryResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetServiceCategory[]> GetServiceCategoryAsync(long CorporateID, string Mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetServiceList", ReplyAction="http://tempuri.org/IInventoryService/GetServiceListResponse")]
        Inventory.Inventoryserref.GetServiceList[] GetServiceList(long ServiceCategoryID, string Mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetServiceList", ReplyAction="http://tempuri.org/IInventoryService/GetServiceListResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetServiceList[]> GetServiceListAsync(long ServiceCategoryID, string Mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchServiceRequestMaster", ReplyAction="http://tempuri.org/IInventoryService/SearchServiceRequestMasterResponse")]
        Inventory.Inventoryserref.SearchServiceRequestMaster[] SearchServiceRequestMaster(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchServiceRequestMaster", ReplyAction="http://tempuri.org/IInventoryService/SearchServiceRequestMasterResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchServiceRequestMaster[]> SearchServiceRequestMasterAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertServiceRequestMaster", ReplyAction="http://tempuri.org/IInventoryService/InsertServiceRequestMasterResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCorporate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCapitalReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALRequestITReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMachinePartsReceiveOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALActivityTracking))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALServiceRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALEndingInventory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALTransferOut))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALTransferIn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMedicalSuppliesRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFacilityVendorAccount))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALVendor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALPGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALUom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMachinemaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCapital))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMedicalSupplyRequestPo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALRequestITPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMachinePartsOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCapitalPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMPRMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALRequestIT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALGPBill))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFaItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFacilitySupply))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorItemMap[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchUserDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchUserDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.chkvalidcorporate[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.chkvalidcorporate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListVendorID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListVendorID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceivingSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceivingSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRDetailsbyMPRMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRDetailsbyMPRMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceiveSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceiveSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceivingSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceivingSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidFaciliityAccountCode[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidFaciliityAccountCode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorOrderType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorOrderType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckVendorOrderDue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermissionforUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermissionforUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Getitronovalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Getitronovalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceiving[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITNNOvalues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITNNOvalues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingsummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingsummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateITRecevingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateITRecevingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateCapitalRecevingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateCapitalRecevingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCpoDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCpoDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCPROMasterReview[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCPROMasterReview))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingsummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingsummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestetailsbyServiceRequestMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestetailsbyServiceRequestMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestReceivingOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestReceivingOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceReceiveOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceReceiveOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityByListCorporateID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityByListCorporateID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorByFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorByFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchEndingInventory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchEndingInventory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetReceivedQtyInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetReceivedQtyInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferINQtyInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferINQtyInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferOutQtyInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferOutQtyInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.EndingInventoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.EndingInventoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCatagoryByFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCatagoryByFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOut[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOut))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferNo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferNo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEmailNotificationforTransfer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEmailNotificationforTransfer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFromEmailforTransfer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFromEmailforTransfer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferIn[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferIn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferInHistory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferInHistory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOutHistory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOutHistory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferInHistoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferInHistoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutHistoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutHistoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyDetail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCorporateMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCorporateMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleForFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleForFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRolesForFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRolesForFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityVendorAccountReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityVendorAccountReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMasterReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMasterReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorItemMapReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorItemMapReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindUserSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindUserSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferInReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferInReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETVendorUniqueName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETVendorUniqueName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUOMName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUOMName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorItemMappingPage[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorItemMappingPage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validgpbillcode[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validgpbillcode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validuseremail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validuseremail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPermissionReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPermissionReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDueReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDueReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySuppliesMapReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySuppliesMapReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDescName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDescName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUomReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUomReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderdueRemainderReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderdueRemainderReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchFacilityVendorAcct[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchFacilityVendorAcct))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentSubCategoryforCapital[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentSubCategoryforCapital))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementListforCapital[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementListforCapital))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidCapitalEquipment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidCapitalEquipment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRMultipleIDs[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRMultipleIDs))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequestPo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequestPo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSROrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSROrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyPoReportDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyPoReportDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSuperAdminDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSuperAdminDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipement[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipement))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementSubCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementSubCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementSubCategoryvalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementSubCategoryvalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentSubCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentSubCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementSubCategoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementSubCategoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserApprovePermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserApprovePermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMultiUserApprove[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMultiUserApprove))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETITRequestPODetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETITRequestPODetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchRequestITPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchRequestITPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITDetailsfromPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITDetailsfromPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITROrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITROrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITRequestPOReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITRequestPOReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRwdlsafterordergeneration[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRwdlsafterordergeneration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPODetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPODetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPOGenerateDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPOGenerateDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSROrderContentPOReports[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSROrderContentPOReports))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPoReportDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPoReportDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestActionByMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestActionByMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrderDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrderDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMultiRolesPermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMultiRolesPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMasterOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMasterOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMasterOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMasterOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPOrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPOrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePOReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePOReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinePartsOrderMPONo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinePartsOrderMPONo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCROrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCROrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalPOReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalPOReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalOrderCPONo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalOrderCPONo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceive[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceive))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPOValues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPOValues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPROValues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPROValues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceivingDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceivingDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartReceivingDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartReceivingDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceiveSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceiveSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMachinePartsReceivingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMachinePartsReceivingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceiving[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyReceivingDetail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyReceivingDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMSRReceivingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMSRReceivingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRReceivingsummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRReceivingsummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidMachineEquipment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidMachineEquipment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetmedicalsupplyReviewReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetmedicalsupplyReviewReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalsuppliesItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalsuppliesItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLookUpList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLookUpList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetOrderPeriod[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetOrderPeriod))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequest[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymasterandDetail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymasterandDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.AddMedicalsupplyitem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.AddMedicalsupplyitem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedShippingValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedShippingValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedTimeDeliveryValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedTimeDeliveryValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateShippingValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateShippingValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateTimeDeliveryValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateTimeDeliveryValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindServiceRequestReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindServiceRequestReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckServicelist[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckServicelist))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceAttachment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceAttachment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveServiceListvalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveServiceListvalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceTempAttachment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceTempAttachment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRequestITMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRequestITMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminRequestITMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminRequestITMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITRequest[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITRequestDetailsbyMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITRequestDetailsbyMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementsubcategoryFORIT[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementsubcategoryFORIT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementListFORIT[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementListFORIT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSerialNo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSerialNo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITPartsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITPartsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidITEquipment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidITEquipment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalItemRequestReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalItemRequestReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalItemRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalItemRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLoginDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLoginDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserInformation[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserInformation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetvendorDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetvendorDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindExistuser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindExistuser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleandFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleandFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetPermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpMainMenu[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpMainMenu))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpSubMenu[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpSubMenu))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetState[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetState))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.IsUserExist[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.IsUserExist))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchItemCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchItemCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlLoadValues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlLoadValues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMap[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMapping[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMapping))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDRD[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDRD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetDrpItemsByCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetDrpItemsByCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlCurrency[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlCurrency))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUom[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCorporateFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCorporateFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UserFacilityRole[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UserFacilityRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetGPBilling[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetGPBilling))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPagePermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPagePermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityItemMap[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemsbyFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemsbyFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityShortName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityShortName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityVendorAccount[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityVendorAccount))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateVendorOrderType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateVendorOrderType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorOrderDue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupply[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupply))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupplyGird[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupplyGird))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinemasterDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinemasterDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterbasedMachineID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterbasedMachineID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinemasterdetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinemasterdetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckEquipmentlist[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckEquipmentlist))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementListvalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementListvalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminMedicalSupplyMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminMedicalSupplyMaster))]
        object[] InsertServiceRequestMaster(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertServiceRequestMaster", ReplyAction="http://tempuri.org/IInventoryService/InsertServiceRequestMasterResponse")]
        System.Threading.Tasks.Task<object[]> InsertServiceRequestMasterAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertServcieRequestDetails", ReplyAction="http://tempuri.org/IInventoryService/InsertServcieRequestDetailsResponse")]
        string InsertServcieRequestDetails(Inventory.Inventoryserref.BALServiceRequest argclsSRDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertServcieRequestDetails", ReplyAction="http://tempuri.org/IInventoryService/InsertServcieRequestDetailsResponse")]
        System.Threading.Tasks.Task<string> InsertServcieRequestDetailsAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateServiceRequestMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateServiceRequestMasterResponse")]
        string UpdateServiceRequestMaster(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateServiceRequestMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateServiceRequestMasterResponse")]
        System.Threading.Tasks.Task<string> UpdateServiceRequestMasterAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateServiceRequestDetails", ReplyAction="http://tempuri.org/IInventoryService/UpdateServiceRequestDetailsResponse")]
        string UpdateServiceRequestDetails(Inventory.Inventoryserref.BALServiceRequest argclsSRDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateServiceRequestDetails", ReplyAction="http://tempuri.org/IInventoryService/UpdateServiceRequestDetailsResponse")]
        System.Threading.Tasks.Task<string> UpdateServiceRequestDetailsAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteServiceRequestDetails", ReplyAction="http://tempuri.org/IInventoryService/DeleteServiceRequestDetailsResponse")]
        string DeleteServiceRequestDetails(long argMPRDetailsID, bool IsActive, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteServiceRequestDetails", ReplyAction="http://tempuri.org/IInventoryService/DeleteServiceRequestDetailsResponse")]
        System.Threading.Tasks.Task<string> DeleteServiceRequestDetailsAsync(long argMPRDetailsID, bool IsActive, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertServiceCategoryMaster", ReplyAction="http://tempuri.org/IInventoryService/InsertServiceCategoryMasterResponse")]
        string InsertServiceCategoryMaster(Inventory.Inventoryserref.BALServiceRequest argclsServiceCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertServiceCategoryMaster", ReplyAction="http://tempuri.org/IInventoryService/InsertServiceCategoryMasterResponse")]
        System.Threading.Tasks.Task<string> InsertServiceCategoryMasterAsync(Inventory.Inventoryserref.BALServiceRequest argclsServiceCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateServiceCategoryMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateServiceCategoryMasterResponse")]
        string UpdateServiceCategoryMaster(Inventory.Inventoryserref.BALServiceRequest argclsServiceCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateServiceCategoryMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateServiceCategoryMasterResponse")]
        System.Threading.Tasks.Task<string> UpdateServiceCategoryMasterAsync(Inventory.Inventoryserref.BALServiceRequest argclsServiceCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteServiceCategoryMaster", ReplyAction="http://tempuri.org/IInventoryService/DeleteServiceCategoryMasterResponse")]
        string DeleteServiceCategoryMaster(long argCategoryID, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteServiceCategoryMaster", ReplyAction="http://tempuri.org/IInventoryService/DeleteServiceCategoryMasterResponse")]
        System.Threading.Tasks.Task<string> DeleteServiceCategoryMasterAsync(long argCategoryID, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertServiceListMaster", ReplyAction="http://tempuri.org/IInventoryService/InsertServiceListMasterResponse")]
        string InsertServiceListMaster(Inventory.Inventoryserref.BALServiceRequest argclsServiceList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertServiceListMaster", ReplyAction="http://tempuri.org/IInventoryService/InsertServiceListMasterResponse")]
        System.Threading.Tasks.Task<string> InsertServiceListMasterAsync(Inventory.Inventoryserref.BALServiceRequest argclsServiceList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateServiceListMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateServiceListMasterResponse")]
        string UpdateServiceListMaster(Inventory.Inventoryserref.BALServiceRequest argclsServiceList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateServiceListMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateServiceListMasterResponse")]
        System.Threading.Tasks.Task<string> UpdateServiceListMasterAsync(Inventory.Inventoryserref.BALServiceRequest argclsServiceList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteServiceListMaster", ReplyAction="http://tempuri.org/IInventoryService/DeleteServiceListMasterResponse")]
        string DeleteServiceListMaster(long argListID, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteServiceListMaster", ReplyAction="http://tempuri.org/IInventoryService/DeleteServiceListMasterResponse")]
        System.Threading.Tasks.Task<string> DeleteServiceListMasterAsync(long argListID, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCheckServicelist", ReplyAction="http://tempuri.org/IInventoryService/GetCheckServicelistResponse")]
        Inventory.Inventoryserref.CheckServicelist[] GetCheckServicelist(long ServiceCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCheckServicelist", ReplyAction="http://tempuri.org/IInventoryService/GetCheckServicelistResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.CheckServicelist[]> GetCheckServicelistAsync(long ServiceCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SavedServiceCategory", ReplyAction="http://tempuri.org/IInventoryService/SavedServiceCategoryResponse")]
        Inventory.Inventoryserref.SavedServiceCategory[] SavedServiceCategory(long CorporateID, long ServiceCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SavedServiceCategory", ReplyAction="http://tempuri.org/IInventoryService/SavedServiceCategoryResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SavedServiceCategory[]> SavedServiceCategoryAsync(long CorporateID, long ServiceCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SavedServiceList", ReplyAction="http://tempuri.org/IInventoryService/SavedServiceListResponse")]
        Inventory.Inventoryserref.SavedServiceList[] SavedServiceList(long ServiceListID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SavedServiceList", ReplyAction="http://tempuri.org/IInventoryService/SavedServiceListResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SavedServiceList[]> SavedServiceListAsync(long ServiceListID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetServiceAttachment", ReplyAction="http://tempuri.org/IInventoryService/GetServiceAttachmentResponse")]
        Inventory.Inventoryserref.GetServiceAttachment[] GetServiceAttachment(long ServiceUploadID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetServiceAttachment", ReplyAction="http://tempuri.org/IInventoryService/GetServiceAttachmentResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetServiceAttachment[]> GetServiceAttachmentAsync(long ServiceUploadID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertServiceAttachment", ReplyAction="http://tempuri.org/IInventoryService/InsertServiceAttachmentResponse")]
        string InsertServiceAttachment(Inventory.Inventoryserref.BALServiceRequest argclsServiceList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertServiceAttachment", ReplyAction="http://tempuri.org/IInventoryService/InsertServiceAttachmentResponse")]
        System.Threading.Tasks.Task<string> InsertServiceAttachmentAsync(Inventory.Inventoryserref.BALServiceRequest argclsServiceList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateServiceAttachment", ReplyAction="http://tempuri.org/IInventoryService/UpdateServiceAttachmentResponse")]
        string UpdateServiceAttachment(Inventory.Inventoryserref.BALServiceRequest argclsServiceList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateServiceAttachment", ReplyAction="http://tempuri.org/IInventoryService/UpdateServiceAttachmentResponse")]
        System.Threading.Tasks.Task<string> UpdateServiceAttachmentAsync(Inventory.Inventoryserref.BALServiceRequest argclsServiceList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetActiveServiceListvalue", ReplyAction="http://tempuri.org/IInventoryService/GetActiveServiceListvalueResponse")]
        Inventory.Inventoryserref.GetActiveServiceListvalue[] GetActiveServiceListvalue(long ServicelistID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetActiveServiceListvalue", ReplyAction="http://tempuri.org/IInventoryService/GetActiveServiceListvalueResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetActiveServiceListvalue[]> GetActiveServiceListvalueAsync(long ServicelistID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteServiceAttachment", ReplyAction="http://tempuri.org/IInventoryService/DeleteServiceAttachmentResponse")]
        string DeleteServiceAttachment(long argListID, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteServiceAttachment", ReplyAction="http://tempuri.org/IInventoryService/DeleteServiceAttachmentResponse")]
        System.Threading.Tasks.Task<string> DeleteServiceAttachmentAsync(long argListID, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertSRTempAttch", ReplyAction="http://tempuri.org/IInventoryService/InsertSRTempAttchResponse")]
        string InsertSRTempAttch(Inventory.Inventoryserref.BALServiceRequest argclsServiceList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertSRTempAttch", ReplyAction="http://tempuri.org/IInventoryService/InsertSRTempAttchResponse")]
        System.Threading.Tasks.Task<string> InsertSRTempAttchAsync(Inventory.Inventoryserref.BALServiceRequest argclsServiceList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteSRTempAttch", ReplyAction="http://tempuri.org/IInventoryService/DeleteSRTempAttchResponse")]
        string DeleteSRTempAttch(int SIno, string Mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteSRTempAttch", ReplyAction="http://tempuri.org/IInventoryService/DeleteSRTempAttchResponse")]
        System.Threading.Tasks.Task<string> DeleteSRTempAttchAsync(int SIno, string Mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetServiceTempAttachment", ReplyAction="http://tempuri.org/IInventoryService/GetServiceTempAttachmentResponse")]
        Inventory.Inventoryserref.GetServiceTempAttachment[] GetServiceTempAttachment(int SiNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetServiceTempAttachment", ReplyAction="http://tempuri.org/IInventoryService/GetServiceTempAttachmentResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetServiceTempAttachment[]> GetServiceTempAttachmentAsync(int SiNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/TruncateSRTempAttch", ReplyAction="http://tempuri.org/IInventoryService/TruncateSRTempAttchResponse")]
        string TruncateSRTempAttch();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/TruncateSRTempAttch", ReplyAction="http://tempuri.org/IInventoryService/TruncateSRTempAttchResponse")]
        System.Threading.Tasks.Task<string> TruncateSRTempAttchAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/AutoUpdateLockedOut", ReplyAction="http://tempuri.org/IInventoryService/AutoUpdateLockedOutResponse")]
        string AutoUpdateLockedOut(long MasterID, long LockedOutBy, string ScreenName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/AutoUpdateLockedOut", ReplyAction="http://tempuri.org/IInventoryService/AutoUpdateLockedOutResponse")]
        System.Threading.Tasks.Task<string> AutoUpdateLockedOutAsync(long MasterID, long LockedOutBy, string ScreenName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertITRequestMaster", ReplyAction="http://tempuri.org/IInventoryService/InsertITRequestMasterResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCorporate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCapitalReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALRequestITReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMachinePartsReceiveOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALActivityTracking))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALServiceRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALEndingInventory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALTransferOut))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALTransferIn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMedicalSuppliesRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFacilityVendorAccount))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALVendor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALPGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALUom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMachinemaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCapital))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMedicalSupplyRequestPo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALRequestITPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMachinePartsOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCapitalPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMPRMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALRequestIT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALGPBill))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFaItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFacilitySupply))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorItemMap[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchUserDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchUserDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.chkvalidcorporate[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.chkvalidcorporate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListVendorID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListVendorID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceivingSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceivingSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRDetailsbyMPRMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRDetailsbyMPRMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceiveSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceiveSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceivingSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceivingSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidFaciliityAccountCode[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidFaciliityAccountCode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorOrderType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorOrderType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckVendorOrderDue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermissionforUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermissionforUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Getitronovalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Getitronovalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceiving[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITNNOvalues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITNNOvalues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingsummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingsummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateITRecevingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateITRecevingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateCapitalRecevingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateCapitalRecevingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCpoDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCpoDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCPROMasterReview[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCPROMasterReview))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingsummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingsummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestetailsbyServiceRequestMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestetailsbyServiceRequestMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestReceivingOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestReceivingOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceReceiveOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceReceiveOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityByListCorporateID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityByListCorporateID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorByFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorByFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchEndingInventory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchEndingInventory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetReceivedQtyInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetReceivedQtyInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferINQtyInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferINQtyInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferOutQtyInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferOutQtyInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.EndingInventoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.EndingInventoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCatagoryByFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCatagoryByFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOut[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOut))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferNo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferNo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEmailNotificationforTransfer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEmailNotificationforTransfer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFromEmailforTransfer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFromEmailforTransfer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferIn[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferIn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferInHistory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferInHistory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOutHistory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOutHistory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferInHistoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferInHistoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutHistoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutHistoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyDetail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCorporateMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCorporateMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleForFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleForFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRolesForFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRolesForFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityVendorAccountReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityVendorAccountReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMasterReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMasterReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorItemMapReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorItemMapReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindUserSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindUserSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferInReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferInReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETVendorUniqueName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETVendorUniqueName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUOMName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUOMName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorItemMappingPage[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorItemMappingPage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validgpbillcode[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validgpbillcode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validuseremail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validuseremail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPermissionReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPermissionReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDueReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDueReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySuppliesMapReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySuppliesMapReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDescName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDescName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUomReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUomReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderdueRemainderReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderdueRemainderReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchFacilityVendorAcct[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchFacilityVendorAcct))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentSubCategoryforCapital[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentSubCategoryforCapital))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementListforCapital[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementListforCapital))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidCapitalEquipment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidCapitalEquipment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRMultipleIDs[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRMultipleIDs))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequestPo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequestPo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSROrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSROrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyPoReportDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyPoReportDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSuperAdminDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSuperAdminDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipement[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipement))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementSubCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementSubCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementSubCategoryvalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementSubCategoryvalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentSubCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentSubCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementSubCategoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementSubCategoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserApprovePermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserApprovePermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMultiUserApprove[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMultiUserApprove))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETITRequestPODetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETITRequestPODetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchRequestITPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchRequestITPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITDetailsfromPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITDetailsfromPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITROrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITROrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITRequestPOReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITRequestPOReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRwdlsafterordergeneration[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRwdlsafterordergeneration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPODetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPODetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPOGenerateDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPOGenerateDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSROrderContentPOReports[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSROrderContentPOReports))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPoReportDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPoReportDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestActionByMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestActionByMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrderDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrderDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMultiRolesPermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMultiRolesPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMasterOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMasterOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMasterOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMasterOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPOrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPOrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePOReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePOReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinePartsOrderMPONo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinePartsOrderMPONo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCROrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCROrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalPOReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalPOReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalOrderCPONo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalOrderCPONo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceive[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceive))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPOValues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPOValues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPROValues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPROValues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceivingDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceivingDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartReceivingDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartReceivingDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceiveSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceiveSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMachinePartsReceivingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMachinePartsReceivingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceiving[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyReceivingDetail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyReceivingDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMSRReceivingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMSRReceivingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRReceivingsummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRReceivingsummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidMachineEquipment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidMachineEquipment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetmedicalsupplyReviewReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetmedicalsupplyReviewReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalsuppliesItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalsuppliesItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLookUpList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLookUpList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetOrderPeriod[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetOrderPeriod))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequest[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymasterandDetail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymasterandDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.AddMedicalsupplyitem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.AddMedicalsupplyitem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedShippingValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedShippingValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedTimeDeliveryValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedTimeDeliveryValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateShippingValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateShippingValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateTimeDeliveryValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateTimeDeliveryValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindServiceRequestReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindServiceRequestReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckServicelist[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckServicelist))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceAttachment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceAttachment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveServiceListvalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveServiceListvalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceTempAttachment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceTempAttachment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRequestITMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRequestITMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminRequestITMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminRequestITMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITRequest[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITRequestDetailsbyMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITRequestDetailsbyMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementsubcategoryFORIT[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementsubcategoryFORIT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementListFORIT[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementListFORIT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSerialNo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSerialNo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITPartsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITPartsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidITEquipment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidITEquipment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalItemRequestReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalItemRequestReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalItemRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalItemRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLoginDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLoginDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserInformation[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserInformation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetvendorDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetvendorDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindExistuser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindExistuser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleandFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleandFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetPermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpMainMenu[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpMainMenu))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpSubMenu[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpSubMenu))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetState[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetState))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.IsUserExist[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.IsUserExist))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchItemCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchItemCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlLoadValues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlLoadValues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMap[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMapping[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMapping))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDRD[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDRD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetDrpItemsByCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetDrpItemsByCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlCurrency[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlCurrency))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUom[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCorporateFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCorporateFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UserFacilityRole[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UserFacilityRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetGPBilling[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetGPBilling))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPagePermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPagePermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityItemMap[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemsbyFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemsbyFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityShortName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityShortName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityVendorAccount[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityVendorAccount))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateVendorOrderType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateVendorOrderType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorOrderDue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupply[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupply))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupplyGird[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupplyGird))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinemasterDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinemasterDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterbasedMachineID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterbasedMachineID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinemasterdetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinemasterdetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckEquipmentlist[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckEquipmentlist))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementListvalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementListvalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminMedicalSupplyMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminMedicalSupplyMaster))]
        object[] InsertITRequestMaster(Inventory.Inventoryserref.BALRequestIT argInsITRequestMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertITRequestMaster", ReplyAction="http://tempuri.org/IInventoryService/InsertITRequestMasterResponse")]
        System.Threading.Tasks.Task<object[]> InsertITRequestMasterAsync(Inventory.Inventoryserref.BALRequestIT argInsITRequestMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertITRequestDetails", ReplyAction="http://tempuri.org/IInventoryService/InsertITRequestDetailsResponse")]
        string InsertITRequestDetails(Inventory.Inventoryserref.BALRequestIT argInsITRequestMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertITRequestDetails", ReplyAction="http://tempuri.org/IInventoryService/InsertITRequestDetailsResponse")]
        System.Threading.Tasks.Task<string> InsertITRequestDetailsAsync(Inventory.Inventoryserref.BALRequestIT argInsITRequestMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetRequestITMaster", ReplyAction="http://tempuri.org/IInventoryService/GetRequestITMasterResponse")]
        Inventory.Inventoryserref.GetRequestITMaster[] GetRequestITMaster();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetRequestITMaster", ReplyAction="http://tempuri.org/IInventoryService/GetRequestITMasterResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetRequestITMaster[]> GetRequestITMasterAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetNonsuperAdminRequestITMaster", ReplyAction="http://tempuri.org/IInventoryService/GetNonsuperAdminRequestITMasterResponse")]
        Inventory.Inventoryserref.GetNonsuperAdminRequestITMaster[] GetNonsuperAdminRequestITMaster(long CorporateID, long FacilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetNonsuperAdminRequestITMaster", ReplyAction="http://tempuri.org/IInventoryService/GetNonsuperAdminRequestITMasterResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetNonsuperAdminRequestITMaster[]> GetNonsuperAdminRequestITMasterAsync(long CorporateID, long FacilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchITRequest", ReplyAction="http://tempuri.org/IInventoryService/SearchITRequestResponse")]
        Inventory.Inventoryserref.SearchITRequest[] SearchITRequest(Inventory.Inventoryserref.BALRequestIT argInsITRequestMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchITRequest", ReplyAction="http://tempuri.org/IInventoryService/SearchITRequestResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchITRequest[]> SearchITRequestAsync(Inventory.Inventoryserref.BALRequestIT argInsITRequestMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetITRequestDetailsbyMasterID", ReplyAction="http://tempuri.org/IInventoryService/GetITRequestDetailsbyMasterIDResponse")]
        Inventory.Inventoryserref.GetITRequestDetailsbyMasterID[] GetITRequestDetailsbyMasterID(long MPRMasterID, long LockedBy, long LockTimeOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetITRequestDetailsbyMasterID", ReplyAction="http://tempuri.org/IInventoryService/GetITRequestDetailsbyMasterIDResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetITRequestDetailsbyMasterID[]> GetITRequestDetailsbyMasterIDAsync(long MPRMasterID, long LockedBy, long LockTimeOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateITRequestMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateITRequestMasterResponse")]
        string UpdateITRequestMaster(Inventory.Inventoryserref.BALRequestIT argInsITRequestMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateITRequestMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateITRequestMasterResponse")]
        System.Threading.Tasks.Task<string> UpdateITRequestMasterAsync(Inventory.Inventoryserref.BALRequestIT argInsITRequestMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateITRequestDetails", ReplyAction="http://tempuri.org/IInventoryService/UpdateITRequestDetailsResponse")]
        string UpdateITRequestDetails(Inventory.Inventoryserref.BALRequestIT argInsITRequestMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateITRequestDetails", ReplyAction="http://tempuri.org/IInventoryService/UpdateITRequestDetailsResponse")]
        System.Threading.Tasks.Task<string> UpdateITRequestDetailsAsync(Inventory.Inventoryserref.BALRequestIT argInsITRequestMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindEquipementsubcategory", ReplyAction="http://tempuri.org/IInventoryService/BindEquipementsubcategoryResponse")]
        Inventory.Inventoryserref.BindEquipementsubcategoryFORIT[] BindEquipementsubcategory(long CorporateID, string Mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindEquipementsubcategory", ReplyAction="http://tempuri.org/IInventoryService/BindEquipementsubcategoryResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindEquipementsubcategoryFORIT[]> BindEquipementsubcategoryAsync(long CorporateID, string Mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindEquipementListFORIT", ReplyAction="http://tempuri.org/IInventoryService/BindEquipementListFORITResponse")]
        Inventory.Inventoryserref.BindEquipementListFORIT[] BindEquipementListFORIT(long EquipSubcatID, string Mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindEquipementListFORIT", ReplyAction="http://tempuri.org/IInventoryService/BindEquipementListFORITResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindEquipementListFORIT[]> BindEquipementListFORITAsync(long EquipSubcatID, string Mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetSerialNo", ReplyAction="http://tempuri.org/IInventoryService/GetSerialNoResponse")]
        Inventory.Inventoryserref.GetSerialNo[] GetSerialNo(long EquipmentSubcategoryID, long EquipListID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetSerialNo", ReplyAction="http://tempuri.org/IInventoryService/GetSerialNoResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetSerialNo[]> GetSerialNoAsync(long EquipmentSubcategoryID, long EquipListID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteITRDetails", ReplyAction="http://tempuri.org/IInventoryService/DeleteITRDetailsResponse")]
        string DeleteITRDetails(long argITRDetailsID, bool IsActive, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteITRDetails", ReplyAction="http://tempuri.org/IInventoryService/DeleteITRDetailsResponse")]
        System.Threading.Tasks.Task<string> DeleteITRDetailsAsync(long argITRDetailsID, bool IsActive, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindRequestITPartsReport", ReplyAction="http://tempuri.org/IInventoryService/BindRequestITPartsReportResponse")]
        Inventory.Inventoryserref.BindRequestITPartsReport[] BindRequestITPartsReport(string RequestITMasterID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindRequestITPartsReport", ReplyAction="http://tempuri.org/IInventoryService/BindRequestITPartsReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindRequestITPartsReport[]> BindRequestITPartsReportAsync(string RequestITMasterID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/ValidITEquipment", ReplyAction="http://tempuri.org/IInventoryService/ValidITEquipmentResponse")]
        Inventory.Inventoryserref.ValidITEquipment[] ValidITEquipment(long EquimentSubCategory, long EquipmentList, long FacilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/ValidITEquipment", ReplyAction="http://tempuri.org/IInventoryService/ValidITEquipmentResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.ValidITEquipment[]> ValidITEquipmentAsync(long EquimentSubCategory, long EquipmentList, long FacilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindCapitalItemRequestReport", ReplyAction="http://tempuri.org/IInventoryService/BindCapitalItemRequestReportResponse")]
        Inventory.Inventoryserref.BindCapitalItemRequestReport[] BindCapitalItemRequestReport(string CapitalItemMasterID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindCapitalItemRequestReport", ReplyAction="http://tempuri.org/IInventoryService/BindCapitalItemRequestReportResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindCapitalItemRequestReport[]> BindCapitalItemRequestReportAsync(string CapitalItemMasterID, string SearchFilters, long LockedBy, long LoggedinBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCapitalItemMaster", ReplyAction="http://tempuri.org/IInventoryService/GetCapitalItemMasterResponse")]
        Inventory.Inventoryserref.GetCapitalItemMaster[] GetCapitalItemMaster();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCapitalItemMaster", ReplyAction="http://tempuri.org/IInventoryService/GetCapitalItemMasterResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCapitalItemMaster[]> GetCapitalItemMasterAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCapitalItemDetails", ReplyAction="http://tempuri.org/IInventoryService/GetCapitalItemDetailsResponse")]
        Inventory.Inventoryserref.GetCapitalItemDetails[] GetCapitalItemDetails(long CapitalItemMasterID, long LockedBy, long LockTimeOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCapitalItemDetails", ReplyAction="http://tempuri.org/IInventoryService/GetCapitalItemDetailsResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCapitalItemDetails[]> GetCapitalItemDetailsAsync(long CapitalItemMasterID, long LockedBy, long LockTimeOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchCapitalItemRequestMaster", ReplyAction="http://tempuri.org/IInventoryService/SearchCapitalItemRequestMasterResponse")]
        Inventory.Inventoryserref.SearchCapitalItemRequestMaster[] SearchCapitalItemRequestMaster(Inventory.Inventoryserref.BALCapital argclsCRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchCapitalItemRequestMaster", ReplyAction="http://tempuri.org/IInventoryService/SearchCapitalItemRequestMasterResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchCapitalItemRequestMaster[]> SearchCapitalItemRequestMasterAsync(Inventory.Inventoryserref.BALCapital argclsCRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertCapitalItemMaster", ReplyAction="http://tempuri.org/IInventoryService/InsertCapitalItemMasterResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCorporate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCapitalReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALRequestITReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMachinePartsReceiveOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALActivityTracking))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALServiceRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALEndingInventory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALTransferOut))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALTransferIn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMedicalSuppliesRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFacilityVendorAccount))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALVendor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALPGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALUom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMachinemaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCapital))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMedicalSupplyRequestPo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALRequestITPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMachinePartsOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCapitalPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMPRMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALRequestIT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALGPBill))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFaItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFacilitySupply))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorItemMap[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchUserDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchUserDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.chkvalidcorporate[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.chkvalidcorporate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListVendorID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListVendorID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceivingSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceivingSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRDetailsbyMPRMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRDetailsbyMPRMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceiveSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceiveSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceivingSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceivingSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidFaciliityAccountCode[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidFaciliityAccountCode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorOrderType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorOrderType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckVendorOrderDue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermissionforUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermissionforUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Getitronovalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Getitronovalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceiving[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITNNOvalues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITNNOvalues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingsummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingsummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateITRecevingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateITRecevingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateCapitalRecevingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateCapitalRecevingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCpoDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCpoDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCPROMasterReview[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCPROMasterReview))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingsummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingsummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestetailsbyServiceRequestMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestetailsbyServiceRequestMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestReceivingOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestReceivingOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceReceiveOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceReceiveOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityByListCorporateID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityByListCorporateID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorByFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorByFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchEndingInventory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchEndingInventory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetReceivedQtyInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetReceivedQtyInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferINQtyInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferINQtyInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferOutQtyInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferOutQtyInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.EndingInventoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.EndingInventoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCatagoryByFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCatagoryByFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOut[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOut))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferNo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferNo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEmailNotificationforTransfer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEmailNotificationforTransfer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFromEmailforTransfer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFromEmailforTransfer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferIn[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferIn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferInHistory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferInHistory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOutHistory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOutHistory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferInHistoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferInHistoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutHistoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutHistoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyDetail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCorporateMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCorporateMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleForFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleForFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRolesForFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRolesForFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityVendorAccountReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityVendorAccountReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMasterReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMasterReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorItemMapReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorItemMapReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindUserSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindUserSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferInReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferInReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETVendorUniqueName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETVendorUniqueName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUOMName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUOMName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorItemMappingPage[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorItemMappingPage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validgpbillcode[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validgpbillcode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validuseremail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validuseremail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPermissionReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPermissionReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDueReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDueReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySuppliesMapReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySuppliesMapReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDescName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDescName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUomReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUomReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderdueRemainderReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderdueRemainderReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchFacilityVendorAcct[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchFacilityVendorAcct))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentSubCategoryforCapital[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentSubCategoryforCapital))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementListforCapital[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementListforCapital))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidCapitalEquipment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidCapitalEquipment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRMultipleIDs[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRMultipleIDs))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequestPo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequestPo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSROrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSROrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyPoReportDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyPoReportDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSuperAdminDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSuperAdminDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipement[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipement))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementSubCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementSubCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementSubCategoryvalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementSubCategoryvalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentSubCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentSubCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementSubCategoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementSubCategoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserApprovePermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserApprovePermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMultiUserApprove[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMultiUserApprove))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETITRequestPODetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETITRequestPODetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchRequestITPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchRequestITPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITDetailsfromPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITDetailsfromPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITROrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITROrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITRequestPOReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITRequestPOReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRwdlsafterordergeneration[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRwdlsafterordergeneration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPODetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPODetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPOGenerateDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPOGenerateDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSROrderContentPOReports[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSROrderContentPOReports))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPoReportDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPoReportDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestActionByMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestActionByMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrderDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrderDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMultiRolesPermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMultiRolesPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMasterOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMasterOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMasterOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMasterOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPOrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPOrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePOReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePOReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinePartsOrderMPONo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinePartsOrderMPONo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCROrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCROrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalPOReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalPOReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalOrderCPONo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalOrderCPONo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceive[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceive))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPOValues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPOValues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPROValues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPROValues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceivingDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceivingDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartReceivingDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartReceivingDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceiveSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceiveSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMachinePartsReceivingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMachinePartsReceivingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceiving[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyReceivingDetail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyReceivingDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMSRReceivingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMSRReceivingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRReceivingsummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRReceivingsummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidMachineEquipment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidMachineEquipment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetmedicalsupplyReviewReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetmedicalsupplyReviewReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalsuppliesItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalsuppliesItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLookUpList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLookUpList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetOrderPeriod[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetOrderPeriod))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequest[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymasterandDetail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymasterandDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.AddMedicalsupplyitem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.AddMedicalsupplyitem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedShippingValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedShippingValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedTimeDeliveryValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedTimeDeliveryValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateShippingValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateShippingValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateTimeDeliveryValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateTimeDeliveryValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindServiceRequestReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindServiceRequestReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckServicelist[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckServicelist))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceAttachment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceAttachment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveServiceListvalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveServiceListvalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceTempAttachment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceTempAttachment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRequestITMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRequestITMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminRequestITMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminRequestITMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITRequest[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITRequestDetailsbyMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITRequestDetailsbyMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementsubcategoryFORIT[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementsubcategoryFORIT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementListFORIT[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementListFORIT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSerialNo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSerialNo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITPartsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITPartsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidITEquipment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidITEquipment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalItemRequestReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalItemRequestReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalItemRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalItemRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLoginDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLoginDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserInformation[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserInformation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetvendorDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetvendorDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindExistuser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindExistuser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleandFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleandFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetPermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpMainMenu[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpMainMenu))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpSubMenu[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpSubMenu))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetState[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetState))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.IsUserExist[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.IsUserExist))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchItemCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchItemCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlLoadValues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlLoadValues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMap[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMapping[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMapping))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDRD[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDRD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetDrpItemsByCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetDrpItemsByCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlCurrency[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlCurrency))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUom[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCorporateFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCorporateFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UserFacilityRole[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UserFacilityRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetGPBilling[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetGPBilling))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPagePermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPagePermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityItemMap[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemsbyFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemsbyFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityShortName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityShortName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityVendorAccount[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityVendorAccount))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateVendorOrderType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateVendorOrderType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorOrderDue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupply[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupply))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupplyGird[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupplyGird))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinemasterDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinemasterDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterbasedMachineID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterbasedMachineID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinemasterdetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinemasterdetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckEquipmentlist[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckEquipmentlist))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementListvalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementListvalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminMedicalSupplyMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminMedicalSupplyMaster))]
        object[] InsertCapitalItemMaster(Inventory.Inventoryserref.BALCapital argInsCRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertCapitalItemMaster", ReplyAction="http://tempuri.org/IInventoryService/InsertCapitalItemMasterResponse")]
        System.Threading.Tasks.Task<object[]> InsertCapitalItemMasterAsync(Inventory.Inventoryserref.BALCapital argInsCRMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetLoginDetails", ReplyAction="http://tempuri.org/IInventoryService/GetLoginDetailsResponse")]
        Inventory.Inventoryserref.GetLoginDetails[] GetLoginDetails(Inventory.Inventoryserref.BALUser argclsUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetLoginDetails", ReplyAction="http://tempuri.org/IInventoryService/GetLoginDetailsResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetLoginDetails[]> GetLoginDetailsAsync(Inventory.Inventoryserref.BALUser argclsUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/IsUserExist", ReplyAction="http://tempuri.org/IInventoryService/IsUserExistResponse")]
        bool IsUserExist(string argstrUserName, string argstrUserPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/IsUserExist", ReplyAction="http://tempuri.org/IInventoryService/IsUserExistResponse")]
        System.Threading.Tasks.Task<bool> IsUserExistAsync(string argstrUserName, string argstrUserPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetUserIDDetails", ReplyAction="http://tempuri.org/IInventoryService/GetUserIDDetailsResponse")]
        Inventory.Inventoryserref.BALUser[] GetUserIDDetails(string argclsUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetUserIDDetails", ReplyAction="http://tempuri.org/IInventoryService/GetUserIDDetailsResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BALUser[]> GetUserIDDetailsAsync(string argclsUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetUserInformation", ReplyAction="http://tempuri.org/IInventoryService/GetUserInformationResponse")]
        Inventory.Inventoryserref.GetUserInformation[] GetUserInformation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetUserInformation", ReplyAction="http://tempuri.org/IInventoryService/GetUserInformationResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetUserInformation[]> GetUserInformationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertUpdateVendorDetails", ReplyAction="http://tempuri.org/IInventoryService/InsertUpdateVendorDetailsResponse")]
        string InsertUpdateVendorDetails(Inventory.Inventoryserref.BALVendor argclsvendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertUpdateVendorDetails", ReplyAction="http://tempuri.org/IInventoryService/InsertUpdateVendorDetailsResponse")]
        System.Threading.Tasks.Task<string> InsertUpdateVendorDetailsAsync(Inventory.Inventoryserref.BALVendor argclsvendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetvendorDetails", ReplyAction="http://tempuri.org/IInventoryService/GetvendorDetailsResponse")]
        Inventory.Inventoryserref.GetvendorDetails[] GetvendorDetails(string SearchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetvendorDetails", ReplyAction="http://tempuri.org/IInventoryService/GetvendorDetailsResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetvendorDetails[]> GetvendorDetailsAsync(string SearchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteVendor", ReplyAction="http://tempuri.org/IInventoryService/DeleteVendorResponse")]
        string DeleteVendor(long argvendorID, bool IsActive, long UpdatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteVendor", ReplyAction="http://tempuri.org/IInventoryService/DeleteVendorResponse")]
        System.Threading.Tasks.Task<string> DeleteVendorAsync(long argvendorID, bool IsActive, long UpdatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertUser", ReplyAction="http://tempuri.org/IInventoryService/InsertUserResponse")]
        string InsertUser(Inventory.Inventoryserref.BALUser argclsUser, long argintCreatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertUser", ReplyAction="http://tempuri.org/IInventoryService/InsertUserResponse")]
        System.Threading.Tasks.Task<string> InsertUserAsync(Inventory.Inventoryserref.BALUser argclsUser, long argintCreatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindExistuser", ReplyAction="http://tempuri.org/IInventoryService/BindExistuserResponse")]
        Inventory.Inventoryserref.BindExistuser[] BindExistuser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindExistuser", ReplyAction="http://tempuri.org/IInventoryService/BindExistuserResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindExistuser[]> BindExistuserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetUserRole", ReplyAction="http://tempuri.org/IInventoryService/GetUserRoleResponse")]
        Inventory.Inventoryserref.BALUser[] GetUserRole();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetUserRole", ReplyAction="http://tempuri.org/IInventoryService/GetUserRoleResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BALUser[]> GetUserRoleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetUserDetails", ReplyAction="http://tempuri.org/IInventoryService/GetUserDetailsResponse")]
        Inventory.Inventoryserref.GetUserDetails[] GetUserDetails(long UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetUserDetails", ReplyAction="http://tempuri.org/IInventoryService/GetUserDetailsResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetUserDetails[]> GetUserDetailsAsync(long UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetRoleandFacility", ReplyAction="http://tempuri.org/IInventoryService/GetRoleandFacilityResponse")]
        Inventory.Inventoryserref.GetUserRoleandFacility[] GetRoleandFacility(long UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetRoleandFacility", ReplyAction="http://tempuri.org/IInventoryService/GetRoleandFacilityResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetUserRoleandFacility[]> GetRoleandFacilityAsync(long UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/RemoveFacilityRole", ReplyAction="http://tempuri.org/IInventoryService/RemoveFacilityRoleResponse")]
        string RemoveFacilityRole(long arguserRoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/RemoveFacilityRole", ReplyAction="http://tempuri.org/IInventoryService/RemoveFacilityRoleResponse")]
        System.Threading.Tasks.Task<string> RemoveFacilityRoleAsync(long arguserRoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindPermission", ReplyAction="http://tempuri.org/IInventoryService/BindPermissionResponse")]
        Inventory.Inventoryserref.BindPermission[] BindPermission();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindPermission", ReplyAction="http://tempuri.org/IInventoryService/BindPermissionResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindPermission[]> BindPermissionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetPermission", ReplyAction="http://tempuri.org/IInventoryService/GetPermissionResponse")]
        Inventory.Inventoryserref.GetPermission[] GetPermission(long MainmenuID, long SubmenuID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetPermission", ReplyAction="http://tempuri.org/IInventoryService/GetPermissionResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetPermission[]> GetPermissionAsync(long MainmenuID, long SubmenuID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetdrpMainMenu", ReplyAction="http://tempuri.org/IInventoryService/GetdrpMainMenuResponse")]
        Inventory.Inventoryserref.GetdrpMainMenu[] GetdrpMainMenu();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetdrpMainMenu", ReplyAction="http://tempuri.org/IInventoryService/GetdrpMainMenuResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetdrpMainMenu[]> GetdrpMainMenuAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetdrpSubMenu", ReplyAction="http://tempuri.org/IInventoryService/GetdrpSubMenuResponse")]
        Inventory.Inventoryserref.GetdrpSubMenu[] GetdrpSubMenu(long MainmenuID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetdrpSubMenu", ReplyAction="http://tempuri.org/IInventoryService/GetdrpSubMenuResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetdrpSubMenu[]> GetdrpSubMenuAsync(long MainmenuID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertUpdatePermission", ReplyAction="http://tempuri.org/IInventoryService/InsertUpdatePermissionResponse")]
        string InsertUpdatePermission(Inventory.Inventoryserref.BALUser argclspermission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertUpdatePermission", ReplyAction="http://tempuri.org/IInventoryService/InsertUpdatePermissionResponse")]
        System.Threading.Tasks.Task<string> InsertUpdatePermissionAsync(Inventory.Inventoryserref.BALUser argclspermission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetState", ReplyAction="http://tempuri.org/IInventoryService/GetStateResponse")]
        Inventory.Inventoryserref.GetState[] GetState();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetState", ReplyAction="http://tempuri.org/IInventoryService/GetStateResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetState[]> GetStateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetExistUser", ReplyAction="http://tempuri.org/IInventoryService/GetExistUserResponse")]
        Inventory.Inventoryserref.IsUserExist[] GetExistUser(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetExistUser", ReplyAction="http://tempuri.org/IInventoryService/GetExistUserResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.IsUserExist[]> GetExistUserAsync(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetItemCategory", ReplyAction="http://tempuri.org/IInventoryService/GetItemCategoryResponse")]
        Inventory.Inventoryserref.GetItemCategory[] GetItemCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetItemCategory", ReplyAction="http://tempuri.org/IInventoryService/GetItemCategoryResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetItemCategory[]> GetItemCategoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchItemCategory", ReplyAction="http://tempuri.org/IInventoryService/SearchItemCategoryResponse")]
        Inventory.Inventoryserref.SearchItemCategory[] SearchItemCategory(Inventory.Inventoryserref.BALPGroup argpgroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchItemCategory", ReplyAction="http://tempuri.org/IInventoryService/SearchItemCategoryResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchItemCategory[]> SearchItemCategoryAsync(Inventory.Inventoryserref.BALPGroup argpgroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteItemCategory", ReplyAction="http://tempuri.org/IInventoryService/DeleteItemCategoryResponse")]
        string DeleteItemCategory(long CategoryID, long UserID, bool IsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteItemCategory", ReplyAction="http://tempuri.org/IInventoryService/DeleteItemCategoryResponse")]
        System.Threading.Tasks.Task<string> DeleteItemCategoryAsync(long CategoryID, long UserID, bool IsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertUpdateCategory", ReplyAction="http://tempuri.org/IInventoryService/InsertUpdateCategoryResponse")]
        string InsertUpdateCategory(Inventory.Inventoryserref.BALPGroup argpgname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertUpdateCategory", ReplyAction="http://tempuri.org/IInventoryService/InsertUpdateCategoryResponse")]
        System.Threading.Tasks.Task<string> InsertUpdateCategoryAsync(Inventory.Inventoryserref.BALPGroup argpgname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/ddlLoadValues", ReplyAction="http://tempuri.org/IInventoryService/ddlLoadValuesResponse")]
        Inventory.Inventoryserref.ddlLoadValues[] ddlLoadValues(long TableID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/ddlLoadValues", ReplyAction="http://tempuri.org/IInventoryService/ddlLoadValuesResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.ddlLoadValues[]> ddlLoadValuesAsync(long TableID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/binditem", ReplyAction="http://tempuri.org/IInventoryService/binditemResponse")]
        Inventory.Inventoryserref.BindItem[] binditem(string SearchItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/binditem", ReplyAction="http://tempuri.org/IInventoryService/binditemResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindItem[]> binditemAsync(string SearchItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertUpdateItem", ReplyAction="http://tempuri.org/IInventoryService/InsertUpdateItemResponse")]
        string InsertUpdateItem(Inventory.Inventoryserref.BALItem argitem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertUpdateItem", ReplyAction="http://tempuri.org/IInventoryService/InsertUpdateItemResponse")]
        System.Threading.Tasks.Task<string> InsertUpdateItemAsync(Inventory.Inventoryserref.BALItem argitem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteItem", ReplyAction="http://tempuri.org/IInventoryService/DeleteItemResponse")]
        string DeleteItem(long ItemUniqueID, bool IsActive, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteItem", ReplyAction="http://tempuri.org/IInventoryService/DeleteItemResponse")]
        System.Threading.Tasks.Task<string> DeleteItemAsync(long ItemUniqueID, bool IsActive, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertUOM", ReplyAction="http://tempuri.org/IInventoryService/InsertUOMResponse")]
        string InsertUOM(Inventory.Inventoryserref.BALUom arguom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertUOM", ReplyAction="http://tempuri.org/IInventoryService/InsertUOMResponse")]
        System.Threading.Tasks.Task<string> InsertUOMAsync(Inventory.Inventoryserref.BALUom arguom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertItemMap", ReplyAction="http://tempuri.org/IInventoryService/InsertItemMapResponse")]
        string InsertItemMap(Inventory.Inventoryserref.BALItemMap argitemmap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertItemMap", ReplyAction="http://tempuri.org/IInventoryService/InsertItemMapResponse")]
        System.Threading.Tasks.Task<string> InsertItemMapAsync(Inventory.Inventoryserref.BALItemMap argitemmap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteItemMapping", ReplyAction="http://tempuri.org/IInventoryService/DeleteItemMappingResponse")]
        string DeleteItemMapping(long ItemMappID, bool IsActive, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteItemMapping", ReplyAction="http://tempuri.org/IInventoryService/DeleteItemMappingResponse")]
        System.Threading.Tasks.Task<string> DeleteItemMappingAsync(long ItemMappID, bool IsActive, long LastModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetItemMap", ReplyAction="http://tempuri.org/IInventoryService/GetItemMapResponse")]
        Inventory.Inventoryserref.GetItemMap[] GetItemMap();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetItemMap", ReplyAction="http://tempuri.org/IInventoryService/GetItemMapResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetItemMap[]> GetItemMapAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetItemMapping", ReplyAction="http://tempuri.org/IInventoryService/GetItemMappingResponse")]
        Inventory.Inventoryserref.GetItemMapping[] GetItemMapping(long ItemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetItemMapping", ReplyAction="http://tempuri.org/IInventoryService/GetItemMappingResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetItemMapping[]> GetItemMappingAsync(long ItemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetItemDRD", ReplyAction="http://tempuri.org/IInventoryService/GetItemDRDResponse")]
        Inventory.Inventoryserref.GetItemDRD[] GetItemDRD();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetItemDRD", ReplyAction="http://tempuri.org/IInventoryService/GetItemDRDResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetItemDRD[]> GetItemDRDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetDrpItemsByCategory", ReplyAction="http://tempuri.org/IInventoryService/GetDrpItemsByCategoryResponse")]
        Inventory.Inventoryserref.GetDrpItemsByCategory[] GetDrpItemsByCategory(long categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetDrpItemsByCategory", ReplyAction="http://tempuri.org/IInventoryService/GetDrpItemsByCategoryResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetDrpItemsByCategory[]> GetDrpItemsByCategoryAsync(long categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/ddlCurrency", ReplyAction="http://tempuri.org/IInventoryService/ddlCurrencyResponse")]
        Inventory.Inventoryserref.ddlCurrency[] ddlCurrency();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/ddlCurrency", ReplyAction="http://tempuri.org/IInventoryService/ddlCurrencyResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.ddlCurrency[]> ddlCurrencyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertCurrency", ReplyAction="http://tempuri.org/IInventoryService/InsertCurrencyResponse")]
        string InsertCurrency(Inventory.Inventoryserref.BALItem argcur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertCurrency", ReplyAction="http://tempuri.org/IInventoryService/InsertCurrencyResponse")]
        System.Threading.Tasks.Task<string> InsertCurrencyAsync(Inventory.Inventoryserref.BALItem argcur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCorporateMaster", ReplyAction="http://tempuri.org/IInventoryService/GetCorporateMasterResponse")]
        Inventory.Inventoryserref.BALUser[] GetCorporateMaster();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCorporateMaster", ReplyAction="http://tempuri.org/IInventoryService/GetCorporateMasterResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BALUser[]> GetCorporateMasterAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCorporateFacilityByUserID", ReplyAction="http://tempuri.org/IInventoryService/GetCorporateFacilityByUserIDResponse")]
        Inventory.Inventoryserref.BALUser[] GetCorporateFacilityByUserID(long UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCorporateFacilityByUserID", ReplyAction="http://tempuri.org/IInventoryService/GetCorporateFacilityByUserIDResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BALUser[]> GetCorporateFacilityByUserIDAsync(long UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertRole", ReplyAction="http://tempuri.org/IInventoryService/InsertRoleResponse")]
        string InsertRole(Inventory.Inventoryserref.BALUser argrole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertRole", ReplyAction="http://tempuri.org/IInventoryService/InsertRoleResponse")]
        System.Threading.Tasks.Task<string> InsertRoleAsync(Inventory.Inventoryserref.BALUser argrole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetUom", ReplyAction="http://tempuri.org/IInventoryService/GetUomResponse")]
        Inventory.Inventoryserref.GetUom[] GetUom();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetUom", ReplyAction="http://tempuri.org/IInventoryService/GetUomResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetUom[]> GetUomAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteUom", ReplyAction="http://tempuri.org/IInventoryService/DeleteUomResponse")]
        string DeleteUom(long UomID, long UserID, bool IsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteUom", ReplyAction="http://tempuri.org/IInventoryService/DeleteUomResponse")]
        System.Threading.Tasks.Task<string> DeleteUomAsync(long UomID, long UserID, bool IsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCorporateFacility", ReplyAction="http://tempuri.org/IInventoryService/GetCorporateFacilityResponse")]
        Inventory.Inventoryserref.GetCorporateFacility[] GetCorporateFacility(long CorporateID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCorporateFacility", ReplyAction="http://tempuri.org/IInventoryService/GetCorporateFacilityResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCorporateFacility[]> GetCorporateFacilityAsync(long CorporateID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetFacilityRole", ReplyAction="http://tempuri.org/IInventoryService/GetFacilityRoleResponse")]
        Inventory.Inventoryserref.UserFacilityRole[] GetFacilityRole();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetFacilityRole", ReplyAction="http://tempuri.org/IInventoryService/GetFacilityRoleResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.UserFacilityRole[]> GetFacilityRoleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteGPBilling", ReplyAction="http://tempuri.org/IInventoryService/DeleteGPBillingResponse")]
        string DeleteGPBilling(long GPBillingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteGPBilling", ReplyAction="http://tempuri.org/IInventoryService/DeleteGPBillingResponse")]
        System.Threading.Tasks.Task<string> DeleteGPBillingAsync(long GPBillingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertGPBilling", ReplyAction="http://tempuri.org/IInventoryService/InsertGPBillingResponse")]
        string InsertGPBilling(Inventory.Inventoryserref.BALGPBill arggpb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertGPBilling", ReplyAction="http://tempuri.org/IInventoryService/InsertGPBillingResponse")]
        System.Threading.Tasks.Task<string> InsertGPBillingAsync(Inventory.Inventoryserref.BALGPBill arggpb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetGPBilling", ReplyAction="http://tempuri.org/IInventoryService/GetGPBillingResponse")]
        Inventory.Inventoryserref.GetGPBilling[] GetGPBilling();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetGPBilling", ReplyAction="http://tempuri.org/IInventoryService/GetGPBillingResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetGPBilling[]> GetGPBillingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetLoginPermissionDetails", ReplyAction="http://tempuri.org/IInventoryService/GetLoginPermissionDetailsResponse")]
        Inventory.Inventoryserref.GetUserPagePermission[] GetLoginPermissionDetails(long UserRoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetLoginPermissionDetails", ReplyAction="http://tempuri.org/IInventoryService/GetLoginPermissionDetailsResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetUserPagePermission[]> GetLoginPermissionDetailsAsync(long UserRoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetFacility", ReplyAction="http://tempuri.org/IInventoryService/GetFacilityResponse")]
        Inventory.Inventoryserref.GetFacility[] GetFacility();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetFacility", ReplyAction="http://tempuri.org/IInventoryService/GetFacilityResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetFacility[]> GetFacilityAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteFacilityItemMap", ReplyAction="http://tempuri.org/IInventoryService/DeleteFacilityItemMapResponse")]
        string DeleteFacilityItemMap(long argclsFacilityItemID, long argclsUserID, bool IsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteFacilityItemMap", ReplyAction="http://tempuri.org/IInventoryService/DeleteFacilityItemMapResponse")]
        System.Threading.Tasks.Task<string> DeleteFacilityItemMapAsync(long argclsFacilityItemID, long argclsUserID, bool IsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertUpdateFacilityItemMap", ReplyAction="http://tempuri.org/IInventoryService/InsertUpdateFacilityItemMapResponse")]
        string InsertUpdateFacilityItemMap(Inventory.Inventoryserref.BALFaItemMap argclsFacility);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertUpdateFacilityItemMap", ReplyAction="http://tempuri.org/IInventoryService/InsertUpdateFacilityItemMapResponse")]
        System.Threading.Tasks.Task<string> InsertUpdateFacilityItemMapAsync(Inventory.Inventoryserref.BALFaItemMap argclsFacility);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetFacilityItemMap", ReplyAction="http://tempuri.org/IInventoryService/GetFacilityItemMapResponse")]
        Inventory.Inventoryserref.GetFacilityItemMap[] GetFacilityItemMap();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetFacilityItemMap", ReplyAction="http://tempuri.org/IInventoryService/GetFacilityItemMapResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetFacilityItemMap[]> GetFacilityItemMapAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertFacility", ReplyAction="http://tempuri.org/IInventoryService/InsertFacilityResponse")]
        string InsertFacility(Inventory.Inventoryserref.BALFacility argclsFacility, long argintCreatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertFacility", ReplyAction="http://tempuri.org/IInventoryService/InsertFacilityResponse")]
        System.Threading.Tasks.Task<string> InsertFacilityAsync(Inventory.Inventoryserref.BALFacility argclsFacility, long argintCreatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindFacility", ReplyAction="http://tempuri.org/IInventoryService/BindFacilityResponse")]
        Inventory.Inventoryserref.BindFacility[] BindFacility(Inventory.Inventoryserref.BALFacility argFacility);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindFacility", ReplyAction="http://tempuri.org/IInventoryService/BindFacilityResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindFacility[]> BindFacilityAsync(Inventory.Inventoryserref.BALFacility argFacility);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteFacility", ReplyAction="http://tempuri.org/IInventoryService/DeleteFacilityResponse")]
        string DeleteFacility(long argclsFacilityID, long argclsUserID, bool IsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteFacility", ReplyAction="http://tempuri.org/IInventoryService/DeleteFacilityResponse")]
        System.Threading.Tasks.Task<string> DeleteFacilityAsync(long argclsFacilityID, long argclsUserID, bool IsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetItemsbyFacilityID", ReplyAction="http://tempuri.org/IInventoryService/GetItemsbyFacilityIDResponse")]
        Inventory.Inventoryserref.GetItemsbyFacilityID[] GetItemsbyFacilityID(long FacilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetItemsbyFacilityID", ReplyAction="http://tempuri.org/IInventoryService/GetItemsbyFacilityIDResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetItemsbyFacilityID[]> GetItemsbyFacilityIDAsync(long FacilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetFacilityShortName", ReplyAction="http://tempuri.org/IInventoryService/GetFacilityShortNameResponse")]
        Inventory.Inventoryserref.GetFacilityShortName[] GetFacilityShortName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetFacilityShortName", ReplyAction="http://tempuri.org/IInventoryService/GetFacilityShortNameResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetFacilityShortName[]> GetFacilityShortNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteFacilityVendorAccount", ReplyAction="http://tempuri.org/IInventoryService/DeleteFacilityVendorAccountResponse")]
        string DeleteFacilityVendorAccount(long argclsFacilityVendorAccID, long argclsUserID, bool IsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteFacilityVendorAccount", ReplyAction="http://tempuri.org/IInventoryService/DeleteFacilityVendorAccountResponse")]
        System.Threading.Tasks.Task<string> DeleteFacilityVendorAccountAsync(long argclsFacilityVendorAccID, long argclsUserID, bool IsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertUpdateFacilityVendorAccount", ReplyAction="http://tempuri.org/IInventoryService/InsertUpdateFacilityVendorAccountResponse")]
        string InsertUpdateFacilityVendorAccount(Inventory.Inventoryserref.BALFacilityVendorAccount argclsFacilityVendorAcc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertUpdateFacilityVendorAccount", ReplyAction="http://tempuri.org/IInventoryService/InsertUpdateFacilityVendorAccountResponse")]
        System.Threading.Tasks.Task<string> InsertUpdateFacilityVendorAccountAsync(Inventory.Inventoryserref.BALFacilityVendorAccount argclsFacilityVendorAcc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetFacilityVendorAccount", ReplyAction="http://tempuri.org/IInventoryService/GetFacilityVendorAccountResponse")]
        Inventory.Inventoryserref.GetFacilityVendorAccount[] GetFacilityVendorAccount(string SearchItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetFacilityVendorAccount", ReplyAction="http://tempuri.org/IInventoryService/GetFacilityVendorAccountResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetFacilityVendorAccount[]> GetFacilityVendorAccountAsync(string SearchItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertUpdateVendorOrderDue", ReplyAction="http://tempuri.org/IInventoryService/InsertUpdateVendorOrderDueResponse")]
        string InsertUpdateVendorOrderDue(Inventory.Inventoryserref.BALVendorOrderDue argclsvendorOrderDue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertUpdateVendorOrderDue", ReplyAction="http://tempuri.org/IInventoryService/InsertUpdateVendorOrderDueResponse")]
        System.Threading.Tasks.Task<string> InsertUpdateVendorOrderDueAsync(Inventory.Inventoryserref.BALVendorOrderDue argclsvendorOrderDue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/ValidateVendorOrderType", ReplyAction="http://tempuri.org/IInventoryService/ValidateVendorOrderTypeResponse")]
        Inventory.Inventoryserref.ValidateVendorOrderType[] ValidateVendorOrderType(Inventory.Inventoryserref.BALVendorOrderDue argclsvendorOrderDue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/ValidateVendorOrderType", ReplyAction="http://tempuri.org/IInventoryService/ValidateVendorOrderTypeResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.ValidateVendorOrderType[]> ValidateVendorOrderTypeAsync(Inventory.Inventoryserref.BALVendorOrderDue argclsvendorOrderDue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindVendorOrderDue", ReplyAction="http://tempuri.org/IInventoryService/BindVendorOrderDueResponse")]
        Inventory.Inventoryserref.BindVendorOrderDue[] BindVendorOrderDue(Inventory.Inventoryserref.BALFacilitySupply argclsvendorOrderDue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/BindVendorOrderDue", ReplyAction="http://tempuri.org/IInventoryService/BindVendorOrderDueResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.BindVendorOrderDue[]> BindVendorOrderDueAsync(Inventory.Inventoryserref.BALFacilitySupply argclsvendorOrderDue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertUpdateFacilitySupply", ReplyAction="http://tempuri.org/IInventoryService/InsertUpdateFacilitySupplyResponse")]
        string InsertUpdateFacilitySupply(Inventory.Inventoryserref.BALFacilitySupply argclsFacilitySupply);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertUpdateFacilitySupply", ReplyAction="http://tempuri.org/IInventoryService/InsertUpdateFacilitySupplyResponse")]
        System.Threading.Tasks.Task<string> InsertUpdateFacilitySupplyAsync(Inventory.Inventoryserref.BALFacilitySupply argclsFacilitySupply);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetFacilitySupply", ReplyAction="http://tempuri.org/IInventoryService/GetFacilitySupplyResponse")]
        Inventory.Inventoryserref.GetFacilitySupply[] GetFacilitySupply(Inventory.Inventoryserref.BALFacilitySupply argclsFacilitySupply);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetFacilitySupply", ReplyAction="http://tempuri.org/IInventoryService/GetFacilitySupplyResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetFacilitySupply[]> GetFacilitySupplyAsync(Inventory.Inventoryserref.BALFacilitySupply argclsFacilitySupply);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetFacilitySupplyGird", ReplyAction="http://tempuri.org/IInventoryService/GetFacilitySupplyGirdResponse")]
        Inventory.Inventoryserref.GetFacilitySupplyGird[] GetFacilitySupplyGird(Inventory.Inventoryserref.BALFacilitySupply argclsFacilitySupply);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetFacilitySupplyGird", ReplyAction="http://tempuri.org/IInventoryService/GetFacilitySupplyGirdResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetFacilitySupplyGird[]> GetFacilitySupplyGirdAsync(Inventory.Inventoryserref.BALFacilitySupply argclsFacilitySupply);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetEquipmentCategory", ReplyAction="http://tempuri.org/IInventoryService/GetEquipmentCategoryResponse")]
        Inventory.Inventoryserref.GetEquipmentCategory[] GetEquipmentCategory(long CorporateID, string Mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetEquipmentCategory", ReplyAction="http://tempuri.org/IInventoryService/GetEquipmentCategoryResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetEquipmentCategory[]> GetEquipmentCategoryAsync(long CorporateID, string Mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetEquipementList", ReplyAction="http://tempuri.org/IInventoryService/GetEquipementListResponse")]
        Inventory.Inventoryserref.GetEquipementList[] GetEquipementList(long EquipSubCategoryID, string Mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetEquipementList", ReplyAction="http://tempuri.org/IInventoryService/GetEquipementListResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetEquipementList[]> GetEquipementListAsync(long EquipSubCategoryID, string Mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertEquipmentCategory", ReplyAction="http://tempuri.org/IInventoryService/InsertEquipmentCategoryResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCorporate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCapitalReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALRequestITReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMachinePartsReceiveOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALActivityTracking))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALServiceRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALEndingInventory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALTransferOut))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALTransferIn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMedicalSuppliesRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFacilityVendorAccount))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALVendor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALPGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALUom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMachinemaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCapital))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMedicalSupplyRequestPo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALRequestITPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMachinePartsOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALCapitalPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALMPRMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALRequestIT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALGPBill))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFaItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BALFacilitySupply))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorItemMap[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchUserDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchUserDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.chkvalidcorporate[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.chkvalidcorporate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListVendorID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListVendorID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceivingSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceivingSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRDetailsbyMPRMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRDetailsbyMPRMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceiveSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceiveSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceivingSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceivingSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidFaciliityAccountCode[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidFaciliityAccountCode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorOrderType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchVendorOrderType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckVendorOrderDue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermissionforUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermissionforUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Getitronovalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Getitronovalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceiving[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITNNOvalues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITNNOvalues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingsummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITReceivingsummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateITRecevingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateITRecevingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalReceivingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateCapitalRecevingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateCapitalRecevingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCpoDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCpoDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCPROMasterReview[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCPROMasterReview))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingsummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalReceivingsummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestetailsbyServiceRequestMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestetailsbyServiceRequestMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestReceivingOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestReceivingOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceReceiveOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceReceiveOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityByListCorporateID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityByListCorporateID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorByFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorByFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchEndingInventory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchEndingInventory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetReceivedQtyInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetReceivedQtyInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferINQtyInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferINQtyInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferOutQtyInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferOutQtyInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.EndingInventoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.EndingInventoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCatagoryByFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCatagoryByFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOut[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOut))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferNo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferNo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEmailNotificationforTransfer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEmailNotificationforTransfer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFromEmailforTransfer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFromEmailforTransfer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferIn[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferIn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferInHistory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferInHistory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOutHistory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchTransferOutHistory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferInHistoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetTransferInHistoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutHistoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutHistoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryByListFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyDetail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCorporateMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCorporateMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleForFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleForFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRolesForFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRolesForFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityVendorAccountReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacilityVendorAccountReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMasterReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCorporateMasterReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorItemMapReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorItemMapReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindUserSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindUserSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferOutReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferInReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindTransferInReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETVendorUniqueName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETVendorUniqueName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUOMName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUOMName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorItemMappingPage[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorItemMappingPage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validgpbillcode[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validgpbillcode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validuseremail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.Validuseremail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPermissionReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPermissionReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDueReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderDueReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySuppliesMapReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySuppliesMapReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDescName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDescName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCategoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUomReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUomReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateMedicalSuppliesOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderdueRemainderReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetVendorOrderdueRemainderReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchFacilityVendorAcct[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchFacilityVendorAcct))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentSubCategoryforCapital[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentSubCategoryforCapital))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementListforCapital[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementListforCapital))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidCapitalEquipment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidCapitalEquipment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRMultipleIDs[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRMultipleIDs))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequestPo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequestPo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSROrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSROrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyPoReportDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyPoReportDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSuperAdminDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSuperAdminDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipement[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipement))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementSubCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementSubCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementSubCategoryvalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementSubCategoryvalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentSubCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentSubCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementSubCategoryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementSubCategoryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserApprovePermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserApprovePermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMultiUserApprove[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMultiUserApprove))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETITRequestPODetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETITRequestPODetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchRequestITPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchRequestITPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITDetailsfromPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITDetailsfromPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITROrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITROrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITRequestPOReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindITRequestPOReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRwdlsafterordergeneration[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRwdlsafterordergeneration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPODetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPODetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPOGenerateDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPOGenerateDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSROrderContentPOReports[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSROrderContentPOReports))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPoReportDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestPoReportDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestActionByMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestActionByMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrderDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestPurchaseOrderDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMultiRolesPermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMultiRolesPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMasterOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMasterOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMasterOrder[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMasterOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPOrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPOrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePOReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePOReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinePartsOrderMPONo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinePartsOrderMPONo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCROrderContentPO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCROrderContentPO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalPOReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalPOReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalOrderCPONo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalOrderCPONo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceive[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinePartsReceive))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPOValues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPOValues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPROValues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GETMPROValues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceivingDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceivingDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartReceivingDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartReceivingDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceiveSummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachineReceiveSummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMachinePartsReceivingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMachinePartsReceivingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceiving[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSuppliesReceiving))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyReceivingDetail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplyReceivingDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMSRReceivingMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UpdateMSRReceivingMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRReceivingsummaryReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMSRReceivingsummaryReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsSubReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalSupplyDetailsSubReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMachinePartsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMPRMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMPRMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidMachineEquipment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidMachineEquipment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetmedicalsupplyReviewReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetmedicalsupplyReviewReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalsuppliesItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalsuppliesItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLookUpList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLookUpList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetOrderPeriod[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetOrderPeriod))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMedicalSupplyRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequest[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMedicalSupplyRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymasterandDetail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymasterandDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindMedicalsupplymaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.AddMedicalsupplyitem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.AddMedicalsupplyitem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedShippingValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedShippingValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedTimeDeliveryValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedTimeDeliveryValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateShippingValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateShippingValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateTimeDeliveryValue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.FindDuplicateTimeDeliveryValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindServiceRequestReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindServiceRequestReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchServiceRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckServicelist[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckServicelist))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedServiceList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceAttachment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceAttachment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveServiceListvalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveServiceListvalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceTempAttachment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetServiceTempAttachment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRequestITMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetRequestITMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminRequestITMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminRequestITMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITRequest[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchITRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITRequestDetailsbyMasterID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetITRequestDetailsbyMasterID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementsubcategoryFORIT[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementsubcategoryFORIT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementListFORIT[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindEquipementListFORIT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSerialNo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetSerialNo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITPartsReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindRequestITPartsReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidITEquipment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidITEquipment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalItemRequestReport[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindCapitalItemRequestReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCapitalItemMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalItemRequestMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchCapitalItemRequestMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLoginDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetLoginDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserInformation[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserInformation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetvendorDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetvendorDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindExistuser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindExistuser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleandFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserRoleandFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetPermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpMainMenu[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpMainMenu))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpSubMenu[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetdrpSubMenu))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetState[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetState))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.IsUserExist[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.IsUserExist))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchItemCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchItemCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlLoadValues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlLoadValues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMap[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMapping[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemMapping))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDRD[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemDRD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetDrpItemsByCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetDrpItemsByCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlCurrency[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ddlCurrency))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUom[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUom))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCorporateFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetCorporateFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UserFacilityRole[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.UserFacilityRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetGPBilling[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetGPBilling))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPagePermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetUserPagePermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityItemMap[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityItemMap))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacility[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindFacility))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemsbyFacilityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetItemsbyFacilityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityShortName[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityShortName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityVendorAccount[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilityVendorAccount))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateVendorOrderType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.ValidateVendorOrderType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorOrderDue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.BindVendorOrderDue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupply[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupply))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupplyGird[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetFacilitySupplyGird))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipmentCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetEquipementList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinemasterDetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachinemasterDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterbasedMachineID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetMachineMasterbasedMachineID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinemasterdetails[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SearchMachinemasterdetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckEquipmentlist[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.CheckEquipmentlist))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.SavedEquipmentList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementListvalue[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetActiveEquipementListvalue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminMedicalSupplyMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Inventory.Inventoryserref.GetNonsuperAdminMedicalSupplyMaster))]
        object[] InsertEquipmentCategory(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertEquipmentCategory", ReplyAction="http://tempuri.org/IInventoryService/InsertEquipmentCategoryResponse")]
        System.Threading.Tasks.Task<object[]> InsertEquipmentCategoryAsync(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateEquipmentcategory", ReplyAction="http://tempuri.org/IInventoryService/UpdateEquipmentcategoryResponse")]
        string UpdateEquipmentcategory(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateEquipmentcategory", ReplyAction="http://tempuri.org/IInventoryService/UpdateEquipmentcategoryResponse")]
        System.Threading.Tasks.Task<string> UpdateEquipmentcategoryAsync(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertEquipmentList", ReplyAction="http://tempuri.org/IInventoryService/InsertEquipmentListResponse")]
        string InsertEquipmentList(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertEquipmentList", ReplyAction="http://tempuri.org/IInventoryService/InsertEquipmentListResponse")]
        System.Threading.Tasks.Task<string> InsertEquipmentListAsync(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateEquipmentList", ReplyAction="http://tempuri.org/IInventoryService/UpdateEquipmentListResponse")]
        string UpdateEquipmentList(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateEquipmentList", ReplyAction="http://tempuri.org/IInventoryService/UpdateEquipmentListResponse")]
        System.Threading.Tasks.Task<string> UpdateEquipmentListAsync(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMachinemasterDetails", ReplyAction="http://tempuri.org/IInventoryService/GetMachinemasterDetailsResponse")]
        Inventory.Inventoryserref.GetMachinemasterDetails[] GetMachinemasterDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMachinemasterDetails", ReplyAction="http://tempuri.org/IInventoryService/GetMachinemasterDetailsResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMachinemasterDetails[]> GetMachinemasterDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteMachinemasterDetails", ReplyAction="http://tempuri.org/IInventoryService/DeleteMachinemasterDetailsResponse")]
        string DeleteMachinemasterDetails(long argmachineID, bool IsActive, long UpdatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteMachinemasterDetails", ReplyAction="http://tempuri.org/IInventoryService/DeleteMachinemasterDetailsResponse")]
        System.Threading.Tasks.Task<string> DeleteMachinemasterDetailsAsync(long argmachineID, bool IsActive, long UpdatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteEquipeCategoryMaster", ReplyAction="http://tempuri.org/IInventoryService/DeleteEquipeCategoryMasterResponse")]
        string DeleteEquipeCategoryMaster(long argCategoryID, bool IsActive, long UpdatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteEquipeCategoryMaster", ReplyAction="http://tempuri.org/IInventoryService/DeleteEquipeCategoryMasterResponse")]
        System.Threading.Tasks.Task<string> DeleteEquipeCategoryMasterAsync(long argCategoryID, bool IsActive, long UpdatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteEquipListMaster", ReplyAction="http://tempuri.org/IInventoryService/DeleteEquipListMasterResponse")]
        string DeleteEquipListMaster(long argListID, bool IsActive, long UpdatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteEquipListMaster", ReplyAction="http://tempuri.org/IInventoryService/DeleteEquipListMasterResponse")]
        System.Threading.Tasks.Task<string> DeleteEquipListMasterAsync(long argListID, bool IsActive, long UpdatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertMachineMaster", ReplyAction="http://tempuri.org/IInventoryService/InsertMachineMasterResponse")]
        string InsertMachineMaster(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/InsertMachineMaster", ReplyAction="http://tempuri.org/IInventoryService/InsertMachineMasterResponse")]
        System.Threading.Tasks.Task<string> InsertMachineMasterAsync(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMachineMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateMachineMasterResponse")]
        string UpdateMachineMaster(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateMachineMaster", ReplyAction="http://tempuri.org/IInventoryService/UpdateMachineMasterResponse")]
        System.Threading.Tasks.Task<string> UpdateMachineMasterAsync(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMachinemasterbasedmachineID", ReplyAction="http://tempuri.org/IInventoryService/GetMachinemasterbasedmachineIDResponse")]
        Inventory.Inventoryserref.GetMachineMasterbasedMachineID[] GetMachinemasterbasedmachineID(long MachineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMachinemasterbasedmachineID", ReplyAction="http://tempuri.org/IInventoryService/GetMachinemasterbasedmachineIDResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMachineMasterbasedMachineID[]> GetMachinemasterbasedmachineIDAsync(long MachineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchMachinemasterdetails", ReplyAction="http://tempuri.org/IInventoryService/SearchMachinemasterdetailsResponse")]
        Inventory.Inventoryserref.SearchMachinemasterdetails[] SearchMachinemasterdetails(Inventory.Inventoryserref.BALMachinemaster argstrmach);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SearchMachinemasterdetails", ReplyAction="http://tempuri.org/IInventoryService/SearchMachinemasterdetailsResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchMachinemasterdetails[]> SearchMachinemasterdetailsAsync(Inventory.Inventoryserref.BALMachinemaster argstrmach);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCheckEquipmentlist", ReplyAction="http://tempuri.org/IInventoryService/GetCheckEquipmentlistResponse")]
        Inventory.Inventoryserref.CheckEquipmentlist[] GetCheckEquipmentlist(long EquipcategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetCheckEquipmentlist", ReplyAction="http://tempuri.org/IInventoryService/GetCheckEquipmentlistResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.CheckEquipmentlist[]> GetCheckEquipmentlistAsync(long EquipcategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SavedEquipmentCategory", ReplyAction="http://tempuri.org/IInventoryService/SavedEquipmentCategoryResponse")]
        Inventory.Inventoryserref.SavedEquipmentCategory[] SavedEquipmentCategory(long FacilityID, long EquipcategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SavedEquipmentCategory", ReplyAction="http://tempuri.org/IInventoryService/SavedEquipmentCategoryResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SavedEquipmentCategory[]> SavedEquipmentCategoryAsync(long FacilityID, long EquipcategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SavedEquipmentList", ReplyAction="http://tempuri.org/IInventoryService/SavedEquipmentListResponse")]
        Inventory.Inventoryserref.SavedEquipmentList[] SavedEquipmentList(long EquipmentListID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SavedEquipmentList", ReplyAction="http://tempuri.org/IInventoryService/SavedEquipmentListResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.SavedEquipmentList[]> SavedEquipmentListAsync(long EquipmentListID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetActiveEquipementListvalue", ReplyAction="http://tempuri.org/IInventoryService/GetActiveEquipementListvalueResponse")]
        Inventory.Inventoryserref.GetActiveEquipementListvalue[] GetActiveEquipementListvalue(long EquiplistID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetActiveEquipementListvalue", ReplyAction="http://tempuri.org/IInventoryService/GetActiveEquipementListvalueResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetActiveEquipementListvalue[]> GetActiveEquipementListvalueAsync(long EquiplistID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetNonsuperAdminMedicalSupplyMaster", ReplyAction="http://tempuri.org/IInventoryService/GetNonsuperAdminMedicalSupplyMasterResponse")]
        Inventory.Inventoryserref.GetNonsuperAdminMedicalSupplyMaster[] GetNonsuperAdminMedicalSupplyMaster(long CorporateID, long FacilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetNonsuperAdminMedicalSupplyMaster", ReplyAction="http://tempuri.org/IInventoryService/GetNonsuperAdminMedicalSupplyMasterResponse")]
        System.Threading.Tasks.Task<Inventory.Inventoryserref.GetNonsuperAdminMedicalSupplyMaster[]> GetNonsuperAdminMedicalSupplyMasterAsync(long CorporateID, long FacilityID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInventoryServiceChannel : Inventory.Inventoryserref.IInventoryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InventoryServiceClient : System.ServiceModel.ClientBase<Inventory.Inventoryserref.IInventoryService>, Inventory.Inventoryserref.IInventoryService {
        
        public InventoryServiceClient() {
        }
        
        public InventoryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InventoryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Inventory.Inventoryserref.SearchVendorItemMap[] GetVendorItemMap(Inventory.Inventoryserref.BALItemMap argclsVendorItemMap) {
            return base.Channel.GetVendorItemMap(argclsVendorItemMap);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchVendorItemMap[]> GetVendorItemMapAsync(Inventory.Inventoryserref.BALItemMap argclsVendorItemMap) {
            return base.Channel.GetVendorItemMapAsync(argclsVendorItemMap);
        }
        
        public Inventory.Inventoryserref.SearchUserDetails[] SearchUserDetails(Inventory.Inventoryserref.BALUser argclsUserDetails) {
            return base.Channel.SearchUserDetails(argclsUserDetails);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchUserDetails[]> SearchUserDetailsAsync(Inventory.Inventoryserref.BALUser argclsUserDetails) {
            return base.Channel.SearchUserDetailsAsync(argclsUserDetails);
        }
        
        public string DeleteUserDetails(long UserID, long LastModifiedBy) {
            return base.Channel.DeleteUserDetails(UserID, LastModifiedBy);
        }
        
        public System.Threading.Tasks.Task<string> DeleteUserDetailsAsync(long UserID, long LastModifiedBy) {
            return base.Channel.DeleteUserDetailsAsync(UserID, LastModifiedBy);
        }
        
        public Inventory.Inventoryserref.chkvalidcorporate[] chkvalidcorporate(Inventory.Inventoryserref.BALCorporate argcorporate) {
            return base.Channel.chkvalidcorporate(argcorporate);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.chkvalidcorporate[]> chkvalidcorporateAsync(Inventory.Inventoryserref.BALCorporate argcorporate) {
            return base.Channel.chkvalidcorporateAsync(argcorporate);
        }
        
        public Inventory.Inventoryserref.GetCategoryByListVendorID[] GetCategoryByListVendorID(string ListVendorID) {
            return base.Channel.GetCategoryByListVendorID(ListVendorID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCategoryByListVendorID[]> GetCategoryByListVendorIDAsync(string ListVendorID) {
            return base.Channel.GetCategoryByListVendorIDAsync(ListVendorID);
        }
        
        public Inventory.Inventoryserref.SearchCapitalReceivingSummaryReport[] SearchCapitalReceivingSummaryReport(Inventory.Inventoryserref.BALCapitalReceiving argclsCRMasterReceive) {
            return base.Channel.SearchCapitalReceivingSummaryReport(argclsCRMasterReceive);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchCapitalReceivingSummaryReport[]> SearchCapitalReceivingSummaryReportAsync(Inventory.Inventoryserref.BALCapitalReceiving argclsCRMasterReceive) {
            return base.Channel.SearchCapitalReceivingSummaryReportAsync(argclsCRMasterReceive);
        }
        
        public Inventory.Inventoryserref.SearchITReceivingSummaryReport[] SearchITReceivingSummaryReport(Inventory.Inventoryserref.BALRequestITReceiving argInsITRequestMaster) {
            return base.Channel.SearchITReceivingSummaryReport(argInsITRequestMaster);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchITReceivingSummaryReport[]> SearchITReceivingSummaryReportAsync(Inventory.Inventoryserref.BALRequestITReceiving argInsITRequestMaster) {
            return base.Channel.SearchITReceivingSummaryReportAsync(argInsITRequestMaster);
        }
        
        public Inventory.Inventoryserref.SearchMachinePartsReceiveSummaryReport[] SearchMachinePartsReceiveSummaryReport(Inventory.Inventoryserref.BALMachinePartsReceiveOrder argclsMPRMaster) {
            return base.Channel.SearchMachinePartsReceiveSummaryReport(argclsMPRMaster);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchMachinePartsReceiveSummaryReport[]> SearchMachinePartsReceiveSummaryReportAsync(Inventory.Inventoryserref.BALMachinePartsReceiveOrder argclsMPRMaster) {
            return base.Channel.SearchMachinePartsReceiveSummaryReportAsync(argclsMPRMaster);
        }
        
        public Inventory.Inventoryserref.SearchMedicalSuppliesReceivingSummaryReport[] SearchMedicalSuppliesReceivingSummaryReport(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argclsMedicalSuppliesRec) {
            return base.Channel.SearchMedicalSuppliesReceivingSummaryReport(argclsMedicalSuppliesRec);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchMedicalSuppliesReceivingSummaryReport[]> SearchMedicalSuppliesReceivingSummaryReportAsync(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argclsMedicalSuppliesRec) {
            return base.Channel.SearchMedicalSuppliesReceivingSummaryReportAsync(argclsMedicalSuppliesRec);
        }
        
        public Inventory.Inventoryserref.ValidFaciliityAccountCode[] ValidFaciliityAccountCode(string FacilityAccountCode) {
            return base.Channel.ValidFaciliityAccountCode(FacilityAccountCode);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.ValidFaciliityAccountCode[]> ValidFaciliityAccountCodeAsync(string FacilityAccountCode) {
            return base.Channel.ValidFaciliityAccountCodeAsync(FacilityAccountCode);
        }
        
        public Inventory.Inventoryserref.SearchVendorOrderType[] SearchVendorOrderType(Inventory.Inventoryserref.BALVendorOrderDue argclsvendorOrderDue) {
            return base.Channel.SearchVendorOrderType(argclsvendorOrderDue);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchVendorOrderType[]> SearchVendorOrderTypeAsync(Inventory.Inventoryserref.BALVendorOrderDue argclsvendorOrderDue) {
            return base.Channel.SearchVendorOrderTypeAsync(argclsvendorOrderDue);
        }
        
        public Inventory.Inventoryserref.GetVendorOrderDue[] GetVendorOrderDue(Inventory.Inventoryserref.BALVendorOrderDue argclsvendorOrderDue) {
            return base.Channel.GetVendorOrderDue(argclsvendorOrderDue);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetVendorOrderDue[]> GetVendorOrderDueAsync(Inventory.Inventoryserref.BALVendorOrderDue argclsvendorOrderDue) {
            return base.Channel.GetVendorOrderDueAsync(argclsvendorOrderDue);
        }
        
        public Inventory.Inventoryserref.CheckVendorOrderDue[] CheckVendorOrderDue(long CorporateID, long FacilityID, long VendorID) {
            return base.Channel.CheckVendorOrderDue(CorporateID, FacilityID, VendorID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.CheckVendorOrderDue[]> CheckVendorOrderDueAsync(long CorporateID, long FacilityID, long VendorID) {
            return base.Channel.CheckVendorOrderDueAsync(CorporateID, FacilityID, VendorID);
        }
        
        public Inventory.Inventoryserref.GetItem[] GetItem() {
            return base.Channel.GetItem();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetItem[]> GetItemAsync() {
            return base.Channel.GetItemAsync();
        }
        
        public Inventory.Inventoryserref.GetVendor[] GetVendor() {
            return base.Channel.GetVendor();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetVendor[]> GetVendorAsync() {
            return base.Channel.GetVendorAsync();
        }
        
        public System.Data.DataSet GetMonthlyUsageReport(Inventory.Inventoryserref.BALReport argreport) {
            return base.Channel.GetMonthlyUsageReport(argreport);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMonthlyUsageReportAsync(Inventory.Inventoryserref.BALReport argreport) {
            return base.Channel.GetMonthlyUsageReportAsync(argreport);
        }
        
        public System.Data.DataSet GetMonthlyPurchaseReport(Inventory.Inventoryserref.BALReport argreport) {
            return base.Channel.GetMonthlyPurchaseReport(argreport);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMonthlyPurchaseReportAsync(Inventory.Inventoryserref.BALReport argreport) {
            return base.Channel.GetMonthlyPurchaseReportAsync(argreport);
        }
        
        public System.Data.DataSet GetMonthlyEndingReport(Inventory.Inventoryserref.BALReport argreport) {
            return base.Channel.GetMonthlyEndingReport(argreport);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMonthlyEndingReportAsync(Inventory.Inventoryserref.BALReport argreport) {
            return base.Channel.GetMonthlyEndingReportAsync(argreport);
        }
        
        public System.Data.DataSet GetCumUsageReport(Inventory.Inventoryserref.BALReport argreport) {
            return base.Channel.GetCumUsageReport(argreport);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCumUsageReportAsync(Inventory.Inventoryserref.BALReport argreport) {
            return base.Channel.GetCumUsageReportAsync(argreport);
        }
        
        public System.Data.DataSet GetCumulativeUsageReportBySingleItem(Inventory.Inventoryserref.BALReport argreport) {
            return base.Channel.GetCumulativeUsageReportBySingleItem(argreport);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCumulativeUsageReportBySingleItemAsync(Inventory.Inventoryserref.BALReport argreport) {
            return base.Channel.GetCumulativeUsageReportBySingleItemAsync(argreport);
        }
        
        public System.Data.DataSet GetMonthlyInventoryReport(Inventory.Inventoryserref.BALReport argreport) {
            return base.Channel.GetMonthlyInventoryReport(argreport);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMonthlyInventoryReportAsync(Inventory.Inventoryserref.BALReport argreport) {
            return base.Channel.GetMonthlyInventoryReportAsync(argreport);
        }
        
        public System.Data.DataSet GetCostPertxReport(Inventory.Inventoryserref.BALReport argreport) {
            return base.Channel.GetCostPertxReport(argreport);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCostPertxReportAsync(Inventory.Inventoryserref.BALReport argreport) {
            return base.Channel.GetCostPertxReportAsync(argreport);
        }
        
        public System.Data.DataSet GetMonthlyDrugReport(Inventory.Inventoryserref.BALReport argreport) {
            return base.Channel.GetMonthlyDrugReport(argreport);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMonthlyDrugReportAsync(Inventory.Inventoryserref.BALReport argreport) {
            return base.Channel.GetMonthlyDrugReportAsync(argreport);
        }
        
        public string DeleteVendorOrderDue(Inventory.Inventoryserref.BALVendorOrderDue argvendor) {
            return base.Channel.DeleteVendorOrderDue(argvendor);
        }
        
        public System.Threading.Tasks.Task<string> DeleteVendorOrderDueAsync(Inventory.Inventoryserref.BALVendorOrderDue argvendor) {
            return base.Channel.DeleteVendorOrderDueAsync(argvendor);
        }
        
        public Inventory.Inventoryserref.BindPermissionforUser[] BindPermissionforUser() {
            return base.Channel.BindPermissionforUser();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindPermissionforUser[]> BindPermissionforUserAsync() {
            return base.Channel.BindPermissionforUserAsync();
        }
        
        public System.Data.DataSet GetUserCredentials(Inventory.Inventoryserref.BALUser arguser) {
            return base.Channel.GetUserCredentials(arguser);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUserCredentialsAsync(Inventory.Inventoryserref.BALUser arguser) {
            return base.Channel.GetUserCredentialsAsync(arguser);
        }
        
        public string ActivityTracker(Inventory.Inventoryserref.BALActivityTracking argactivitytrack) {
            return base.Channel.ActivityTracker(argactivitytrack);
        }
        
        public System.Threading.Tasks.Task<string> ActivityTrackerAsync(Inventory.Inventoryserref.BALActivityTracking argactivitytrack) {
            return base.Channel.ActivityTrackerAsync(argactivitytrack);
        }
        
        public Inventory.Inventoryserref.BindITReceivingDetailsReport[] BindITReceivingDetailsReport(long ITRequestMasterID, long ITReceivingMasterID, long LoggedInBy, string Filter) {
            return base.Channel.BindITReceivingDetailsReport(ITRequestMasterID, ITReceivingMasterID, LoggedInBy, Filter);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindITReceivingDetailsReport[]> BindITReceivingDetailsReportAsync(long ITRequestMasterID, long ITReceivingMasterID, long LoggedInBy, string Filter) {
            return base.Channel.BindITReceivingDetailsReportAsync(ITRequestMasterID, ITReceivingMasterID, LoggedInBy, Filter);
        }
        
        public Inventory.Inventoryserref.BindITReceivingDetailsSubReport[] BindITReceivingDetailsSubReport(long ITRequestMasterID, long LoggedInBy, string Filter) {
            return base.Channel.BindITReceivingDetailsSubReport(ITRequestMasterID, LoggedInBy, Filter);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindITReceivingDetailsSubReport[]> BindITReceivingDetailsSubReportAsync(long ITRequestMasterID, long LoggedInBy, string Filter) {
            return base.Channel.BindITReceivingDetailsSubReportAsync(ITRequestMasterID, LoggedInBy, Filter);
        }
        
        public Inventory.Inventoryserref.Getitronovalue[] BindITRONo(long ITRequestMasterID) {
            return base.Channel.BindITRONo(ITRequestMasterID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.Getitronovalue[]> BindITRONoAsync(long ITRequestMasterID) {
            return base.Channel.BindITRONoAsync(ITRequestMasterID);
        }
        
        public string SynITReceivingorder() {
            return base.Channel.SynITReceivingorder();
        }
        
        public System.Threading.Tasks.Task<string> SynITReceivingorderAsync() {
            return base.Channel.SynITReceivingorderAsync();
        }
        
        public Inventory.Inventoryserref.SearchITReceiving[] SearchITReceiving(Inventory.Inventoryserref.BALRequestITReceiving argInsITRequestMaster) {
            return base.Channel.SearchITReceiving(argInsITRequestMaster);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchITReceiving[]> SearchITReceivingAsync(Inventory.Inventoryserref.BALRequestITReceiving argInsITRequestMaster) {
            return base.Channel.SearchITReceivingAsync(argInsITRequestMaster);
        }
        
        public Inventory.Inventoryserref.BindITNNOvalues[] BindITNNOvalues(long ITReceivingMasterID) {
            return base.Channel.BindITNNOvalues(ITReceivingMasterID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindITNNOvalues[]> BindITNNOvaluesAsync(long ITReceivingMasterID) {
            return base.Channel.BindITNNOvaluesAsync(ITReceivingMasterID);
        }
        
        public object[] InsertITReceivingMaster(Inventory.Inventoryserref.BALRequestITReceiving argITrecving) {
            return base.Channel.InsertITReceivingMaster(argITrecving);
        }
        
        public System.Threading.Tasks.Task<object[]> InsertITReceivingMasterAsync(Inventory.Inventoryserref.BALRequestITReceiving argITrecving) {
            return base.Channel.InsertITReceivingMasterAsync(argITrecving);
        }
        
        public string InsertITReceivingDetails(Inventory.Inventoryserref.BALRequestITReceiving argITrecving) {
            return base.Channel.InsertITReceivingDetails(argITrecving);
        }
        
        public System.Threading.Tasks.Task<string> InsertITReceivingDetailsAsync(Inventory.Inventoryserref.BALRequestITReceiving argITrecving) {
            return base.Channel.InsertITReceivingDetailsAsync(argITrecving);
        }
        
        public Inventory.Inventoryserref.BindITReceivingsummaryReport[] BindITReceivingsummaryReport(string ITNNo, long LoggedinBy, string Filter) {
            return base.Channel.BindITReceivingsummaryReport(ITNNo, LoggedinBy, Filter);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindITReceivingsummaryReport[]> BindITReceivingsummaryReportAsync(string ITNNo, long LoggedinBy, string Filter) {
            return base.Channel.BindITReceivingsummaryReportAsync(ITNNo, LoggedinBy, Filter);
        }
        
        public string UpdateITReceivingDetails(Inventory.Inventoryserref.BALRequestITReceiving argclsItDetailsReceive) {
            return base.Channel.UpdateITReceivingDetails(argclsItDetailsReceive);
        }
        
        public System.Threading.Tasks.Task<string> UpdateITReceivingDetailsAsync(Inventory.Inventoryserref.BALRequestITReceiving argclsItDetailsReceive) {
            return base.Channel.UpdateITReceivingDetailsAsync(argclsItDetailsReceive);
        }
        
        public Inventory.Inventoryserref.UpdateITRecevingMaster[] UpdateITReceivingMaster(Inventory.Inventoryserref.BALRequestITReceiving argclsITMasterReceive) {
            return base.Channel.UpdateITReceivingMaster(argclsITMasterReceive);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.UpdateITRecevingMaster[]> UpdateITReceivingMasterAsync(Inventory.Inventoryserref.BALRequestITReceiving argclsITMasterReceive) {
            return base.Channel.UpdateITReceivingMasterAsync(argclsITMasterReceive);
        }
        
        public Inventory.Inventoryserref.SearchCapitalReceivingMaster[] SearchCapitalReceivingMaster(Inventory.Inventoryserref.BALCapitalReceiving argclsCRMasterReceive) {
            return base.Channel.SearchCapitalReceivingMaster(argclsCRMasterReceive);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchCapitalReceivingMaster[]> SearchCapitalReceivingMasterAsync(Inventory.Inventoryserref.BALCapitalReceiving argclsCRMasterReceive) {
            return base.Channel.SearchCapitalReceivingMasterAsync(argclsCRMasterReceive);
        }
        
        public Inventory.Inventoryserref.UpdateCapitalRecevingMaster[] UpdateCapitalReceivingMaster(Inventory.Inventoryserref.BALCapitalReceiving argclsCRMasterReceive) {
            return base.Channel.UpdateCapitalReceivingMaster(argclsCRMasterReceive);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.UpdateCapitalRecevingMaster[]> UpdateCapitalReceivingMasterAsync(Inventory.Inventoryserref.BALCapitalReceiving argclsCRMasterReceive) {
            return base.Channel.UpdateCapitalReceivingMasterAsync(argclsCRMasterReceive);
        }
        
        public string UpdateCapitalReceivingDetails(Inventory.Inventoryserref.BALCapitalReceiving argclsCRMasterReceive) {
            return base.Channel.UpdateCapitalReceivingDetails(argclsCRMasterReceive);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCapitalReceivingDetailsAsync(Inventory.Inventoryserref.BALCapitalReceiving argclsCRMasterReceive) {
            return base.Channel.UpdateCapitalReceivingDetailsAsync(argclsCRMasterReceive);
        }
        
        public string SyncCapitalReceivingorder() {
            return base.Channel.SyncCapitalReceivingorder();
        }
        
        public System.Threading.Tasks.Task<string> SyncCapitalReceivingorderAsync() {
            return base.Channel.SyncCapitalReceivingorderAsync();
        }
        
        public Inventory.Inventoryserref.GetCpoDetails[] GetCpoDetails(long CapitalReceivingMasterID) {
            return base.Channel.GetCpoDetails(CapitalReceivingMasterID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCpoDetails[]> GetCpoDetailsAsync(long CapitalReceivingMasterID) {
            return base.Channel.GetCpoDetailsAsync(CapitalReceivingMasterID);
        }
        
        public Inventory.Inventoryserref.GetCPROMasterReview[] GetCPROMasterReview(long CapitalReceivingMasterID) {
            return base.Channel.GetCPROMasterReview(CapitalReceivingMasterID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCPROMasterReview[]> GetCPROMasterReviewAsync(long CapitalReceivingMasterID) {
            return base.Channel.GetCPROMasterReviewAsync(CapitalReceivingMasterID);
        }
        
        public Inventory.Inventoryserref.BindCapitalDetailsReport[] BindCapitalDetailsReport(long CapitalItemMasterID, long CapitaltemReceivingMasterID, long LoggedInBy, string Filter) {
            return base.Channel.BindCapitalDetailsReport(CapitalItemMasterID, CapitaltemReceivingMasterID, LoggedInBy, Filter);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindCapitalDetailsReport[]> BindCapitalDetailsReportAsync(long CapitalItemMasterID, long CapitaltemReceivingMasterID, long LoggedInBy, string Filter) {
            return base.Channel.BindCapitalDetailsReportAsync(CapitalItemMasterID, CapitaltemReceivingMasterID, LoggedInBy, Filter);
        }
        
        public Inventory.Inventoryserref.BindCapitalReceivingDetailsSubReport[] BindCapitalReceivingDetailsSubReport(long CapitalItemMasterID, long LoggedInBy, string Filter) {
            return base.Channel.BindCapitalReceivingDetailsSubReport(CapitalItemMasterID, LoggedInBy, Filter);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindCapitalReceivingDetailsSubReport[]> BindCapitalReceivingDetailsSubReportAsync(long CapitalItemMasterID, long LoggedInBy, string Filter) {
            return base.Channel.BindCapitalReceivingDetailsSubReportAsync(CapitalItemMasterID, LoggedInBy, Filter);
        }
        
        public Inventory.Inventoryserref.BindCapitalReceivingsummaryReport[] BindCapitalReceivingsummaryReport(long CapitalOrderID, long LoggedinBy, string Filter) {
            return base.Channel.BindCapitalReceivingsummaryReport(CapitalOrderID, LoggedinBy, Filter);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindCapitalReceivingsummaryReport[]> BindCapitalReceivingsummaryReportAsync(long CapitalOrderID, long LoggedinBy, string Filter) {
            return base.Channel.BindCapitalReceivingsummaryReportAsync(CapitalOrderID, LoggedinBy, Filter);
        }
        
        public Inventory.Inventoryserref.SearchServiceRequestReceivingOrder[] SearchServiceRequestReceivingOrder(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster) {
            return base.Channel.SearchServiceRequestReceivingOrder(argclsSRMaster);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchServiceRequestReceivingOrder[]> SearchServiceRequestReceivingOrderAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster) {
            return base.Channel.SearchServiceRequestReceivingOrderAsync(argclsSRMaster);
        }
        
        public string UpdateServcieRecevingOrder(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster) {
            return base.Channel.UpdateServcieRecevingOrder(argclsSRMaster);
        }
        
        public System.Threading.Tasks.Task<string> UpdateServcieRecevingOrderAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster) {
            return base.Channel.UpdateServcieRecevingOrderAsync(argclsSRMaster);
        }
        
        public string UpdateServcieRecevinginvoice(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster) {
            return base.Channel.UpdateServcieRecevinginvoice(argclsSRMaster);
        }
        
        public System.Threading.Tasks.Task<string> UpdateServcieRecevinginvoiceAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster) {
            return base.Channel.UpdateServcieRecevinginvoiceAsync(argclsSRMaster);
        }
        
        public string SyncServiceReceivingorder() {
            return base.Channel.SyncServiceReceivingorder();
        }
        
        public System.Threading.Tasks.Task<string> SyncServiceReceivingorderAsync() {
            return base.Channel.SyncServiceReceivingorderAsync();
        }
        
        public Inventory.Inventoryserref.GetServiceReceiveOrder[] GetServiceReceiveOrder(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster) {
            return base.Channel.GetServiceReceiveOrder(argclsSRMaster);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetServiceReceiveOrder[]> GetServiceReceiveOrderAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster) {
            return base.Channel.GetServiceReceiveOrderAsync(argclsSRMaster);
        }
        
        public Inventory.Inventoryserref.GetFacilityByListCorporateID[] GetFacilityByListCorporateID(string ListCorporateID, long UserID, long RoleID) {
            return base.Channel.GetFacilityByListCorporateID(ListCorporateID, UserID, RoleID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetFacilityByListCorporateID[]> GetFacilityByListCorporateIDAsync(string ListCorporateID, long UserID, long RoleID) {
            return base.Channel.GetFacilityByListCorporateIDAsync(ListCorporateID, UserID, RoleID);
        }
        
        public Inventory.Inventoryserref.GetVendorByFacilityID[] GetVendorByFacilityID(string ListVendorID, long LoggedInBy) {
            return base.Channel.GetVendorByFacilityID(ListVendorID, LoggedInBy);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetVendorByFacilityID[]> GetVendorByFacilityIDAsync(string ListVendorID, long LoggedInBy) {
            return base.Channel.GetVendorByFacilityIDAsync(ListVendorID, LoggedInBy);
        }
        
        public Inventory.Inventoryserref.SearchEndingInventory[] SearchEndingInventory(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven) {
            return base.Channel.SearchEndingInventory(argclsEndinginven);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchEndingInventory[]> SearchEndingInventoryAsync(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven) {
            return base.Channel.SearchEndingInventoryAsync(argclsEndinginven);
        }
        
        public string SyncEndingInventory() {
            return base.Channel.SyncEndingInventory();
        }
        
        public System.Threading.Tasks.Task<string> SyncEndingInventoryAsync() {
            return base.Channel.SyncEndingInventoryAsync();
        }
        
        public string InsertEndingInventory(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven) {
            return base.Channel.InsertEndingInventory(argclsEndinginven);
        }
        
        public System.Threading.Tasks.Task<string> InsertEndingInventoryAsync(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven) {
            return base.Channel.InsertEndingInventoryAsync(argclsEndinginven);
        }
        
        public string UpdateEndingInventory(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven) {
            return base.Channel.UpdateEndingInventory(argclsEndinginven);
        }
        
        public System.Threading.Tasks.Task<string> UpdateEndingInventoryAsync(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven) {
            return base.Channel.UpdateEndingInventoryAsync(argclsEndinginven);
        }
        
        public Inventory.Inventoryserref.GetReceivedQtyInfo[] GetReceivedQtyInfo(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven) {
            return base.Channel.GetReceivedQtyInfo(argclsEndinginven);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetReceivedQtyInfo[]> GetReceivedQtyInfoAsync(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven) {
            return base.Channel.GetReceivedQtyInfoAsync(argclsEndinginven);
        }
        
        public Inventory.Inventoryserref.GetTransferINQtyInfo[] GetTransferINQtyInfo(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven) {
            return base.Channel.GetTransferINQtyInfo(argclsEndinginven);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetTransferINQtyInfo[]> GetTransferINQtyInfoAsync(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven) {
            return base.Channel.GetTransferINQtyInfoAsync(argclsEndinginven);
        }
        
        public Inventory.Inventoryserref.GetTransferOutQtyInfo[] GetTransferOutQtyInfo(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven) {
            return base.Channel.GetTransferOutQtyInfo(argclsEndinginven);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetTransferOutQtyInfo[]> GetTransferOutQtyInfoAsync(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven) {
            return base.Channel.GetTransferOutQtyInfoAsync(argclsEndinginven);
        }
        
        public Inventory.Inventoryserref.EndingInventoryReport[] EndingInventoryReport(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven) {
            return base.Channel.EndingInventoryReport(argclsEndinginven);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.EndingInventoryReport[]> EndingInventoryReportAsync(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven) {
            return base.Channel.EndingInventoryReportAsync(argclsEndinginven);
        }
        
        public Inventory.Inventoryserref.GetCatagoryByFacilityID[] GetCatagoryByFacilityID(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven) {
            return base.Channel.GetCatagoryByFacilityID(argclsEndinginven);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCatagoryByFacilityID[]> GetCatagoryByFacilityIDAsync(Inventory.Inventoryserref.BALEndingInventory argclsEndinginven) {
            return base.Channel.GetCatagoryByFacilityIDAsync(argclsEndinginven);
        }
        
        public Inventory.Inventoryserref.SearchTransferOut[] SearchTransferOut(Inventory.Inventoryserref.BALTransferOut argclsEndinginven) {
            return base.Channel.SearchTransferOut(argclsEndinginven);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchTransferOut[]> SearchTransferOutAsync(Inventory.Inventoryserref.BALTransferOut argclsEndinginven) {
            return base.Channel.SearchTransferOutAsync(argclsEndinginven);
        }
        
        public string InsertTransferDetails(Inventory.Inventoryserref.BALTransferOut argInsTransfer) {
            return base.Channel.InsertTransferDetails(argInsTransfer);
        }
        
        public System.Threading.Tasks.Task<string> InsertTransferDetailsAsync(Inventory.Inventoryserref.BALTransferOut argInsTransfer) {
            return base.Channel.InsertTransferDetailsAsync(argInsTransfer);
        }
        
        public Inventory.Inventoryserref.GetTransferNo[] GetTransferNo(long FacilityIDFrom, long FacilityIDTo) {
            return base.Channel.GetTransferNo(FacilityIDFrom, FacilityIDTo);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetTransferNo[]> GetTransferNoAsync(long FacilityIDFrom, long FacilityIDTo) {
            return base.Channel.GetTransferNoAsync(FacilityIDFrom, FacilityIDTo);
        }
        
        public Inventory.Inventoryserref.GetEmailNotificationforTransfer[] GetEmailNotificationforTransfer() {
            return base.Channel.GetEmailNotificationforTransfer();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetEmailNotificationforTransfer[]> GetEmailNotificationforTransferAsync() {
            return base.Channel.GetEmailNotificationforTransferAsync();
        }
        
        public Inventory.Inventoryserref.GetFromEmailforTransfer[] GetFromEmailforTransfer(string TransferNo) {
            return base.Channel.GetFromEmailforTransfer(TransferNo);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetFromEmailforTransfer[]> GetFromEmailforTransferAsync(string TransferNo) {
            return base.Channel.GetFromEmailforTransferAsync(TransferNo);
        }
        
        public Inventory.Inventoryserref.SearchTransferIn[] SearchTransferIn(Inventory.Inventoryserref.BALTransferIn argclsTransferIn) {
            return base.Channel.SearchTransferIn(argclsTransferIn);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchTransferIn[]> SearchTransferInAsync(Inventory.Inventoryserref.BALTransferIn argclsTransferIn) {
            return base.Channel.SearchTransferInAsync(argclsTransferIn);
        }
        
        public string InsertTransferIn(Inventory.Inventoryserref.BALTransferIn argclstransferIn) {
            return base.Channel.InsertTransferIn(argclstransferIn);
        }
        
        public System.Threading.Tasks.Task<string> InsertTransferInAsync(Inventory.Inventoryserref.BALTransferIn argclstransferIn) {
            return base.Channel.InsertTransferInAsync(argclstransferIn);
        }
        
        public Inventory.Inventoryserref.SearchTransferInHistory[] SearchTransferInHistory(Inventory.Inventoryserref.BALTransferIn argclsTransferIn) {
            return base.Channel.SearchTransferInHistory(argclsTransferIn);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchTransferInHistory[]> SearchTransferInHistoryAsync(Inventory.Inventoryserref.BALTransferIn argclsTransferIn) {
            return base.Channel.SearchTransferInHistoryAsync(argclsTransferIn);
        }
        
        public Inventory.Inventoryserref.SearchTransferOutHistory[] SearchTransferOutHistory(Inventory.Inventoryserref.BALTransferOut argclsTransferOut) {
            return base.Channel.SearchTransferOutHistory(argclsTransferOut);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchTransferOutHistory[]> SearchTransferOutHistoryAsync(Inventory.Inventoryserref.BALTransferOut argclsTransferOut) {
            return base.Channel.SearchTransferOutHistoryAsync(argclsTransferOut);
        }
        
        public Inventory.Inventoryserref.GetTransferInHistoryReport[] GetTransferInHistoryReport(string TransferINID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.GetTransferInHistoryReport(TransferINID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetTransferInHistoryReport[]> GetTransferInHistoryReportAsync(string TransferINID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.GetTransferInHistoryReportAsync(TransferINID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public string UpdateTransferDetails(Inventory.Inventoryserref.BALTransferOut argclsTRDetails) {
            return base.Channel.UpdateTransferDetails(argclsTRDetails);
        }
        
        public System.Threading.Tasks.Task<string> UpdateTransferDetailsAsync(Inventory.Inventoryserref.BALTransferOut argclsTRDetails) {
            return base.Channel.UpdateTransferDetailsAsync(argclsTRDetails);
        }
        
        public Inventory.Inventoryserref.BindTransferOutHistoryReport[] BindTransferOutHistoryReport(string TransferOutID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.BindTransferOutHistoryReport(TransferOutID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindTransferOutHistoryReport[]> BindTransferOutHistoryReportAsync(string TransferOutID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.BindTransferOutHistoryReportAsync(TransferOutID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public Inventory.Inventoryserref.GetCategoryByListFacilityID[] GetCategoryByListFacilityID(string FacilityID) {
            return base.Channel.GetCategoryByListFacilityID(FacilityID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCategoryByListFacilityID[]> GetCategoryByListFacilityIDAsync(string FacilityID) {
            return base.Channel.GetCategoryByListFacilityIDAsync(FacilityID);
        }
        
        public Inventory.Inventoryserref.ValidateMedicalSuppliesItem[] ValidateMedicalSuppliesItem(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsMedicalSup) {
            return base.Channel.ValidateMedicalSuppliesItem(argclsMedicalSup);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.ValidateMedicalSuppliesItem[]> ValidateMedicalSuppliesItemAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsMedicalSup) {
            return base.Channel.ValidateMedicalSuppliesItemAsync(argclsMedicalSup);
        }
        
        public Inventory.Inventoryserref.BindCorporateMaster[] BindCorporateMaster() {
            return base.Channel.BindCorporateMaster();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindCorporateMaster[]> BindCorporateMasterAsync() {
            return base.Channel.BindCorporateMasterAsync();
        }
        
        public string InsertCorporateMaster(Inventory.Inventoryserref.BALCorporate argclsCorporate) {
            return base.Channel.InsertCorporateMaster(argclsCorporate);
        }
        
        public System.Threading.Tasks.Task<string> InsertCorporateMasterAsync(Inventory.Inventoryserref.BALCorporate argclsCorporate) {
            return base.Channel.InsertCorporateMasterAsync(argclsCorporate);
        }
        
        public string UpdateCorporateMaster(Inventory.Inventoryserref.BALCorporate argclsCorporate) {
            return base.Channel.UpdateCorporateMaster(argclsCorporate);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCorporateMasterAsync(Inventory.Inventoryserref.BALCorporate argclsCorporate) {
            return base.Channel.UpdateCorporateMasterAsync(argclsCorporate);
        }
        
        public Inventory.Inventoryserref.SearchCorporateMaster[] SearchCorporateMaster(Inventory.Inventoryserref.BALCorporate argclsCorporate) {
            return base.Channel.SearchCorporateMaster(argclsCorporate);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchCorporateMaster[]> SearchCorporateMasterAsync(Inventory.Inventoryserref.BALCorporate argclsCorporate) {
            return base.Channel.SearchCorporateMasterAsync(argclsCorporate);
        }
        
        public string DeleteCorporateDetails(long CorporateID, bool IsActive, long LastModifiedBy) {
            return base.Channel.DeleteCorporateDetails(CorporateID, IsActive, LastModifiedBy);
        }
        
        public System.Threading.Tasks.Task<string> DeleteCorporateDetailsAsync(long CorporateID, bool IsActive, long LastModifiedBy) {
            return base.Channel.DeleteCorporateDetailsAsync(CorporateID, IsActive, LastModifiedBy);
        }
        
        public Inventory.Inventoryserref.BindFacilityReport[] BindFacilityReport(Inventory.Inventoryserref.BALFacility arguFacility) {
            return base.Channel.BindFacilityReport(arguFacility);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindFacilityReport[]> BindFacilityReportAsync(Inventory.Inventoryserref.BALFacility arguFacility) {
            return base.Channel.BindFacilityReportAsync(arguFacility);
        }
        
        public Inventory.Inventoryserref.BindFacilityDetailsReport[] BindFacilityDetailsReport(Inventory.Inventoryserref.BALFacility arguFacility) {
            return base.Channel.BindFacilityDetailsReport(arguFacility);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindFacilityDetailsReport[]> BindFacilityDetailsReportAsync(Inventory.Inventoryserref.BALFacility arguFacility) {
            return base.Channel.BindFacilityDetailsReportAsync(arguFacility);
        }
        
        public Inventory.Inventoryserref.GetUserRoleForFacility[] GetUserRoleForFacility(long FacilityID, string ListRoleID) {
            return base.Channel.GetUserRoleForFacility(FacilityID, ListRoleID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetUserRoleForFacility[]> GetUserRoleForFacilityAsync(long FacilityID, string ListRoleID) {
            return base.Channel.GetUserRoleForFacilityAsync(FacilityID, ListRoleID);
        }
        
        public Inventory.Inventoryserref.BindRolesForFacility[] BindRolesForFacility(long FacilityID) {
            return base.Channel.BindRolesForFacility(FacilityID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindRolesForFacility[]> BindRolesForFacilityAsync(long FacilityID) {
            return base.Channel.BindRolesForFacilityAsync(FacilityID);
        }
        
        public Inventory.Inventoryserref.BindFacilityVendorAccountReport[] BindFacilityVendorAccountReport(Inventory.Inventoryserref.BALFacilityVendorAccount argclsFacilityVendorAcct) {
            return base.Channel.BindFacilityVendorAccountReport(argclsFacilityVendorAcct);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindFacilityVendorAccountReport[]> BindFacilityVendorAccountReportAsync(Inventory.Inventoryserref.BALFacilityVendorAccount argclsFacilityVendorAcct) {
            return base.Channel.BindFacilityVendorAccountReportAsync(argclsFacilityVendorAcct);
        }
        
        public Inventory.Inventoryserref.BindCorporateMasterReport[] BindCorporateMasterReport(Inventory.Inventoryserref.BALCorporate arguCorporate) {
            return base.Channel.BindCorporateMasterReport(arguCorporate);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindCorporateMasterReport[]> BindCorporateMasterReportAsync(Inventory.Inventoryserref.BALCorporate arguCorporate) {
            return base.Channel.BindCorporateMasterReportAsync(arguCorporate);
        }
        
        public Inventory.Inventoryserref.BindVendorItemMapReport[] BindVendorItemMapReport(Inventory.Inventoryserref.BALItemMap argclsVendorItemMap) {
            return base.Channel.BindVendorItemMapReport(argclsVendorItemMap);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindVendorItemMapReport[]> BindVendorItemMapReportAsync(Inventory.Inventoryserref.BALItemMap argclsVendorItemMap) {
            return base.Channel.BindVendorItemMapReportAsync(argclsVendorItemMap);
        }
        
        public Inventory.Inventoryserref.BindUserSummaryReport[] BindUserSummaryReport(long UserID, long LoggedinBy, string Filter) {
            return base.Channel.BindUserSummaryReport(UserID, LoggedinBy, Filter);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindUserSummaryReport[]> BindUserSummaryReportAsync(long UserID, long LoggedinBy, string Filter) {
            return base.Channel.BindUserSummaryReportAsync(UserID, LoggedinBy, Filter);
        }
        
        public Inventory.Inventoryserref.BindTransferOutReport[] BindTransferOutReport(long LoggedinBy) {
            return base.Channel.BindTransferOutReport(LoggedinBy);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindTransferOutReport[]> BindTransferOutReportAsync(long LoggedinBy) {
            return base.Channel.BindTransferOutReportAsync(LoggedinBy);
        }
        
        public Inventory.Inventoryserref.BindTransferInReport[] BindTransferInReport(long LoggedinBy) {
            return base.Channel.BindTransferInReport(LoggedinBy);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindTransferInReport[]> BindTransferInReportAsync(long LoggedinBy) {
            return base.Channel.BindTransferInReportAsync(LoggedinBy);
        }
        
        public Inventory.Inventoryserref.GetVendorReport[] GetVendorReport(Inventory.Inventoryserref.BALVendor ardvendor) {
            return base.Channel.GetVendorReport(ardvendor);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetVendorReport[]> GetVendorReportAsync(Inventory.Inventoryserref.BALVendor ardvendor) {
            return base.Channel.GetVendorReportAsync(ardvendor);
        }
        
        public Inventory.Inventoryserref.GETVendorUniqueName[] GETVendorUniqueName(string VendorCode) {
            return base.Channel.GETVendorUniqueName(VendorCode);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GETVendorUniqueName[]> GETVendorUniqueNameAsync(string VendorCode) {
            return base.Channel.GETVendorUniqueNameAsync(VendorCode);
        }
        
        public Inventory.Inventoryserref.GetUOMName[] GetUOMName(string VendorCode) {
            return base.Channel.GetUOMName(VendorCode);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetUOMName[]> GetUOMNameAsync(string VendorCode) {
            return base.Channel.GetUOMNameAsync(VendorCode);
        }
        
        public Inventory.Inventoryserref.GetVendorItemMappingPage[] GetVendorItemMappingPage() {
            return base.Channel.GetVendorItemMappingPage();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetVendorItemMappingPage[]> GetVendorItemMappingPageAsync() {
            return base.Channel.GetVendorItemMappingPageAsync();
        }
        
        public Inventory.Inventoryserref.GetVendorDetailsReport[] GetVendorDetailsReport(Inventory.Inventoryserref.BALVendor argvendor) {
            return base.Channel.GetVendorDetailsReport(argvendor);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetVendorDetailsReport[]> GetVendorDetailsReportAsync(Inventory.Inventoryserref.BALVendor argvendor) {
            return base.Channel.GetVendorDetailsReportAsync(argvendor);
        }
        
        public Inventory.Inventoryserref.Validgpbillcode[] Validgpbillcode(string GpBillingCode) {
            return base.Channel.Validgpbillcode(GpBillingCode);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.Validgpbillcode[]> ValidgpbillcodeAsync(string GpBillingCode) {
            return base.Channel.ValidgpbillcodeAsync(GpBillingCode);
        }
        
        public Inventory.Inventoryserref.Validuseremail[] Validuseremail(string Email) {
            return base.Channel.Validuseremail(Email);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.Validuseremail[]> ValiduseremailAsync(string Email) {
            return base.Channel.ValiduseremailAsync(Email);
        }
        
        public Inventory.Inventoryserref.GetUserPermissionReport[] GetUserPermissionReport(string MainMenuID, string SubMenuID, string SearchFilter, long LoggedInBy) {
            return base.Channel.GetUserPermissionReport(MainMenuID, SubMenuID, SearchFilter, LoggedInBy);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetUserPermissionReport[]> GetUserPermissionReportAsync(string MainMenuID, string SubMenuID, string SearchFilter, long LoggedInBy) {
            return base.Channel.GetUserPermissionReportAsync(MainMenuID, SubMenuID, SearchFilter, LoggedInBy);
        }
        
        public Inventory.Inventoryserref.GetVendorOrderDueReport[] GetVendorOrderDueReport(Inventory.Inventoryserref.BALVendorOrderDue argvendorder) {
            return base.Channel.GetVendorOrderDueReport(argvendorder);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetVendorOrderDueReport[]> GetVendorOrderDueReportAsync(Inventory.Inventoryserref.BALVendorOrderDue argvendorder) {
            return base.Channel.GetVendorOrderDueReportAsync(argvendorder);
        }
        
        public Inventory.Inventoryserref.GetFacilitySuppliesMapReport[] GetFacilitySuppliesMapReport(long CorporateID, long FacilityID, string VendorID, string CategoryID, long Parlevel, string SearchFilter, long LoggedInBy) {
            return base.Channel.GetFacilitySuppliesMapReport(CorporateID, FacilityID, VendorID, CategoryID, Parlevel, SearchFilter, LoggedInBy);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetFacilitySuppliesMapReport[]> GetFacilitySuppliesMapReportAsync(long CorporateID, long FacilityID, string VendorID, string CategoryID, long Parlevel, string SearchFilter, long LoggedInBy) {
            return base.Channel.GetFacilitySuppliesMapReportAsync(CorporateID, FacilityID, VendorID, CategoryID, Parlevel, SearchFilter, LoggedInBy);
        }
        
        public Inventory.Inventoryserref.GetItemDescName[] GetItemDescName(string ItemDescription) {
            return base.Channel.GetItemDescName(ItemDescription);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetItemDescName[]> GetItemDescNameAsync(string ItemDescription) {
            return base.Channel.GetItemDescNameAsync(ItemDescription);
        }
        
        public Inventory.Inventoryserref.GetCategoryReport[] GetCategoryReport(Inventory.Inventoryserref.BALPGroup argitemCat) {
            return base.Channel.GetCategoryReport(argitemCat);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCategoryReport[]> GetCategoryReportAsync(Inventory.Inventoryserref.BALPGroup argitemCat) {
            return base.Channel.GetCategoryReportAsync(argitemCat);
        }
        
        public Inventory.Inventoryserref.GetUomReport[] GetUomReport(Inventory.Inventoryserref.BALUom arguom) {
            return base.Channel.GetUomReport(arguom);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetUomReport[]> GetUomReportAsync(Inventory.Inventoryserref.BALUom arguom) {
            return base.Channel.GetUomReportAsync(arguom);
        }
        
        public Inventory.Inventoryserref.GetItemSummaryReport[] GetItemSummaryReport(Inventory.Inventoryserref.BALItem argitem) {
            return base.Channel.GetItemSummaryReport(argitem);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetItemSummaryReport[]> GetItemSummaryReportAsync(Inventory.Inventoryserref.BALItem argitem) {
            return base.Channel.GetItemSummaryReportAsync(argitem);
        }
        
        public Inventory.Inventoryserref.GetItemDetailsReport[] GetItemDetailsReport(Inventory.Inventoryserref.BALItem argitem) {
            return base.Channel.GetItemDetailsReport(argitem);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetItemDetailsReport[]> GetItemDetailsReportAsync(Inventory.Inventoryserref.BALItem argitem) {
            return base.Channel.GetItemDetailsReportAsync(argitem);
        }
        
        public Inventory.Inventoryserref.GetMachineMasterReport[] GetMachineMasterReport(Inventory.Inventoryserref.BALMachinemaster argmach) {
            return base.Channel.GetMachineMasterReport(argmach);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMachineMasterReport[]> GetMachineMasterReportAsync(Inventory.Inventoryserref.BALMachinemaster argmach) {
            return base.Channel.GetMachineMasterReportAsync(argmach);
        }
        
        public Inventory.Inventoryserref.GetMachineMasterDetailsReport[] GetMachineMasterDetailsReport(Inventory.Inventoryserref.BALMachinemaster argmachine) {
            return base.Channel.GetMachineMasterDetailsReport(argmachine);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMachineMasterDetailsReport[]> GetMachineMasterDetailsReportAsync(Inventory.Inventoryserref.BALMachinemaster argmachine) {
            return base.Channel.GetMachineMasterDetailsReportAsync(argmachine);
        }
        
        public Inventory.Inventoryserref.ValidateMedicalSuppliesOrder[] ValidateMedicalSuppliesOrder(long PMasterID) {
            return base.Channel.ValidateMedicalSuppliesOrder(PMasterID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.ValidateMedicalSuppliesOrder[]> ValidateMedicalSuppliesOrderAsync(long PMasterID) {
            return base.Channel.ValidateMedicalSuppliesOrderAsync(PMasterID);
        }
        
        public Inventory.Inventoryserref.GetVendorOrderdueRemainderReport[] GetVendorOrderdueRemainderReport(Inventory.Inventoryserref.BALVendorOrderDue argclsVendorOrderDue) {
            return base.Channel.GetVendorOrderdueRemainderReport(argclsVendorOrderDue);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetVendorOrderdueRemainderReport[]> GetVendorOrderdueRemainderReportAsync(Inventory.Inventoryserref.BALVendorOrderDue argclsVendorOrderDue) {
            return base.Channel.GetVendorOrderdueRemainderReportAsync(argclsVendorOrderDue);
        }
        
        public Inventory.Inventoryserref.SearchFacilityVendorAcct[] GetFacilityVendorAcct(Inventory.Inventoryserref.BALFacilityVendorAccount argclsFacilityVendorAcct) {
            return base.Channel.GetFacilityVendorAcct(argclsFacilityVendorAcct);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchFacilityVendorAcct[]> GetFacilityVendorAcctAsync(Inventory.Inventoryserref.BALFacilityVendorAccount argclsFacilityVendorAcct) {
            return base.Channel.GetFacilityVendorAcctAsync(argclsFacilityVendorAcct);
        }
        
        public string InsertCapitalItemDetails(Inventory.Inventoryserref.BALCapital argInsCRDetails) {
            return base.Channel.InsertCapitalItemDetails(argInsCRDetails);
        }
        
        public System.Threading.Tasks.Task<string> InsertCapitalItemDetailsAsync(Inventory.Inventoryserref.BALCapital argInsCRDetails) {
            return base.Channel.InsertCapitalItemDetailsAsync(argInsCRDetails);
        }
        
        public string UpdateCapitalIemMaster(Inventory.Inventoryserref.BALCapital argupdMPRMaster) {
            return base.Channel.UpdateCapitalIemMaster(argupdMPRMaster);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCapitalIemMasterAsync(Inventory.Inventoryserref.BALCapital argupdMPRMaster) {
            return base.Channel.UpdateCapitalIemMasterAsync(argupdMPRMaster);
        }
        
        public string UpdateCapitalItemDetails(Inventory.Inventoryserref.BALCapital argUpdCRDetails) {
            return base.Channel.UpdateCapitalItemDetails(argUpdCRDetails);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCapitalItemDetailsAsync(Inventory.Inventoryserref.BALCapital argUpdCRDetails) {
            return base.Channel.UpdateCapitalItemDetailsAsync(argUpdCRDetails);
        }
        
        public string DeleteCapitalItemMaster(long argCRMasterID, bool IsActive, long LastModifiedBy) {
            return base.Channel.DeleteCapitalItemMaster(argCRMasterID, IsActive, LastModifiedBy);
        }
        
        public System.Threading.Tasks.Task<string> DeleteCapitalItemMasterAsync(long argCRMasterID, bool IsActive, long LastModifiedBy) {
            return base.Channel.DeleteCapitalItemMasterAsync(argCRMasterID, IsActive, LastModifiedBy);
        }
        
        public string DeleteCapitalItemDetails(long argCRDetailsID, bool IsActive, long LastModifiedBy) {
            return base.Channel.DeleteCapitalItemDetails(argCRDetailsID, IsActive, LastModifiedBy);
        }
        
        public System.Threading.Tasks.Task<string> DeleteCapitalItemDetailsAsync(long argCRDetailsID, bool IsActive, long LastModifiedBy) {
            return base.Channel.DeleteCapitalItemDetailsAsync(argCRDetailsID, IsActive, LastModifiedBy);
        }
        
        public Inventory.Inventoryserref.GetEquipmentSubCategoryforCapital[] GetEquipmentSubCategoryforCapital(long CorporateID, string Mode) {
            return base.Channel.GetEquipmentSubCategoryforCapital(CorporateID, Mode);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetEquipmentSubCategoryforCapital[]> GetEquipmentSubCategoryforCapitalAsync(long CorporateID, string Mode) {
            return base.Channel.GetEquipmentSubCategoryforCapitalAsync(CorporateID, Mode);
        }
        
        public Inventory.Inventoryserref.GetEquipementListforCapital[] GetEquipementListforCapital(long EquimentSubCategoryID, string Mode) {
            return base.Channel.GetEquipementListforCapital(EquimentSubCategoryID, Mode);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetEquipementListforCapital[]> GetEquipementListforCapitalAsync(long EquimentSubCategoryID, string Mode) {
            return base.Channel.GetEquipementListforCapitalAsync(EquimentSubCategoryID, Mode);
        }
        
        public Inventory.Inventoryserref.ValidCapitalEquipment[] ValidCapitalEquipment(long EquipmentSubCategoryID, long EquipmentList, long FacilityID) {
            return base.Channel.ValidCapitalEquipment(EquipmentSubCategoryID, EquipmentList, FacilityID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.ValidCapitalEquipment[]> ValidCapitalEquipmentAsync(long EquipmentSubCategoryID, long EquipmentList, long FacilityID) {
            return base.Channel.ValidCapitalEquipmentAsync(EquipmentSubCategoryID, EquipmentList, FacilityID);
        }
        
        public Inventory.Inventoryserref.GetMSRMultipleIDs[] GetMSRMultipleIDs(string PRMasterID) {
            return base.Channel.GetMSRMultipleIDs(PRMasterID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMSRMultipleIDs[]> GetMSRMultipleIDsAsync(string PRMasterID) {
            return base.Channel.GetMSRMultipleIDsAsync(PRMasterID);
        }
        
        public Inventory.Inventoryserref.SearchMedicalSupplyRequestPo[] SearchMedicalSupplyRequestPo(Inventory.Inventoryserref.BALMedicalSupplyRequestPo argclsMedicalSuppliesReq) {
            return base.Channel.SearchMedicalSupplyRequestPo(argclsMedicalSuppliesReq);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchMedicalSupplyRequestPo[]> SearchMedicalSupplyRequestPoAsync(Inventory.Inventoryserref.BALMedicalSupplyRequestPo argclsMedicalSuppliesReq) {
            return base.Channel.SearchMedicalSupplyRequestPoAsync(argclsMedicalSuppliesReq);
        }
        
        public string InsertMedicalsupplyPO(Inventory.Inventoryserref.BALMedicalSupplyRequestPo argclsMSRPODetails) {
            return base.Channel.InsertMedicalsupplyPO(argclsMSRPODetails);
        }
        
        public System.Threading.Tasks.Task<string> InsertMedicalsupplyPOAsync(Inventory.Inventoryserref.BALMedicalSupplyRequestPo argclsMSRPODetails) {
            return base.Channel.InsertMedicalsupplyPOAsync(argclsMSRPODetails);
        }
        
        public Inventory.Inventoryserref.GetMSROrderContentPO[] GetMSROrderContentPO(long PRmasterID, long LoggedInBy) {
            return base.Channel.GetMSROrderContentPO(PRmasterID, LoggedInBy);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMSROrderContentPO[]> GetMSROrderContentPOAsync(long PRmasterID, long LoggedInBy) {
            return base.Channel.GetMSROrderContentPOAsync(PRmasterID, LoggedInBy);
        }
        
        public Inventory.Inventoryserref.GetMedicalSupplyPoReportDetails[] GetMedicalSupplyPoReportDetails(string MedicalSupplyMasterID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.GetMedicalSupplyPoReportDetails(MedicalSupplyMasterID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMedicalSupplyPoReportDetails[]> GetMedicalSupplyPoReportDetailsAsync(string MedicalSupplyMasterID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.GetMedicalSupplyPoReportDetailsAsync(MedicalSupplyMasterID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public string UpdateMSRPoOrderContent(Inventory.Inventoryserref.BALMedicalSupplyRequestPo argclsmsrpo) {
            return base.Channel.UpdateMSRPoOrderContent(argclsmsrpo);
        }
        
        public System.Threading.Tasks.Task<string> UpdateMSRPoOrderContentAsync(Inventory.Inventoryserref.BALMedicalSupplyRequestPo argclsmsrpo) {
            return base.Channel.UpdateMSRPoOrderContentAsync(argclsmsrpo);
        }
        
        public string UpdateMSRPoStatus(Inventory.Inventoryserref.BALMedicalSupplyRequestPo argclsmsrpo) {
            return base.Channel.UpdateMSRPoStatus(argclsmsrpo);
        }
        
        public System.Threading.Tasks.Task<string> UpdateMSRPoStatusAsync(Inventory.Inventoryserref.BALMedicalSupplyRequestPo argclsmsrpo) {
            return base.Channel.UpdateMSRPoStatusAsync(argclsmsrpo);
        }
        
        public Inventory.Inventoryserref.GetSuperAdminDetails[] GetSuperAdminDetails(long CorporateID, long FacilityID) {
            return base.Channel.GetSuperAdminDetails(CorporateID, FacilityID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetSuperAdminDetails[]> GetSuperAdminDetailsAsync(long CorporateID, long FacilityID) {
            return base.Channel.GetSuperAdminDetailsAsync(CorporateID, FacilityID);
        }
        
        public Inventory.Inventoryserref.BindEquipement[] BindEquipement(Inventory.Inventoryserref.BALCorporate argEquipment) {
            return base.Channel.BindEquipement(argEquipment);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindEquipement[]> BindEquipementAsync(Inventory.Inventoryserref.BALCorporate argEquipment) {
            return base.Channel.BindEquipementAsync(argEquipment);
        }
        
        public string InsertEquipmentSubCategory(Inventory.Inventoryserref.BALMachinemaster argEquipmentSubCategory) {
            return base.Channel.InsertEquipmentSubCategory(argEquipmentSubCategory);
        }
        
        public System.Threading.Tasks.Task<string> InsertEquipmentSubCategoryAsync(Inventory.Inventoryserref.BALMachinemaster argEquipmentSubCategory) {
            return base.Channel.InsertEquipmentSubCategoryAsync(argEquipmentSubCategory);
        }
        
        public string UpdateEquipmentSubCategory(Inventory.Inventoryserref.BALMachinemaster argEquipmentSubCategory) {
            return base.Channel.UpdateEquipmentSubCategory(argEquipmentSubCategory);
        }
        
        public System.Threading.Tasks.Task<string> UpdateEquipmentSubCategoryAsync(Inventory.Inventoryserref.BALMachinemaster argEquipmentSubCategory) {
            return base.Channel.UpdateEquipmentSubCategoryAsync(argEquipmentSubCategory);
        }
        
        public string DeleteEquipSubCategoryMaster(Inventory.Inventoryserref.BALMachinemaster argEquipmentSubCategory) {
            return base.Channel.DeleteEquipSubCategoryMaster(argEquipmentSubCategory);
        }
        
        public System.Threading.Tasks.Task<string> DeleteEquipSubCategoryMasterAsync(Inventory.Inventoryserref.BALMachinemaster argEquipmentSubCategory) {
            return base.Channel.DeleteEquipSubCategoryMasterAsync(argEquipmentSubCategory);
        }
        
        public Inventory.Inventoryserref.GetEquipementSubCategory[] GetEquipementSubCategory(long EquipCategoryID, string Mode) {
            return base.Channel.GetEquipementSubCategory(EquipCategoryID, Mode);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetEquipementSubCategory[]> GetEquipementSubCategoryAsync(long EquipCategoryID, string Mode) {
            return base.Channel.GetEquipementSubCategoryAsync(EquipCategoryID, Mode);
        }
        
        public Inventory.Inventoryserref.GetActiveEquipementSubCategoryvalue[] GetActiveEquipementSubCategoryvalue(long EquipSubCatID) {
            return base.Channel.GetActiveEquipementSubCategoryvalue(EquipSubCatID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetActiveEquipementSubCategoryvalue[]> GetActiveEquipementSubCategoryvalueAsync(long EquipSubCatID) {
            return base.Channel.GetActiveEquipementSubCategoryvalueAsync(EquipSubCatID);
        }
        
        public Inventory.Inventoryserref.SavedEquipmentSubCategory[] SavedEquipmentSubCategory(long EquipSubCatID) {
            return base.Channel.SavedEquipmentSubCategory(EquipSubCatID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SavedEquipmentSubCategory[]> SavedEquipmentSubCategoryAsync(long EquipSubCatID) {
            return base.Channel.SavedEquipmentSubCategoryAsync(EquipSubCatID);
        }
        
        public Inventory.Inventoryserref.BindEquipementSubCategoryReport[] BindEquipementSubCategoryReport(string SearchFilter, long LockedBy, long LoggedinBy) {
            return base.Channel.BindEquipementSubCategoryReport(SearchFilter, LockedBy, LoggedinBy);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindEquipementSubCategoryReport[]> BindEquipementSubCategoryReportAsync(string SearchFilter, long LockedBy, long LoggedinBy) {
            return base.Channel.BindEquipementSubCategoryReportAsync(SearchFilter, LockedBy, LoggedinBy);
        }
        
        public Inventory.Inventoryserref.GetUserApprovePermission[] GetUserApprovePermission(long MainmenuID, long SubmenuID) {
            return base.Channel.GetUserApprovePermission(MainmenuID, SubmenuID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetUserApprovePermission[]> GetUserApprovePermissionAsync(long MainmenuID, long SubmenuID) {
            return base.Channel.GetUserApprovePermissionAsync(MainmenuID, SubmenuID);
        }
        
        public Inventory.Inventoryserref.GetMultiUserApprove[] GetMultiUserApprove(long PermissionID) {
            return base.Channel.GetMultiUserApprove(PermissionID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMultiUserApprove[]> GetMultiUserApproveAsync(long PermissionID) {
            return base.Channel.GetMultiUserApproveAsync(PermissionID);
        }
        
        public string InsertUserApprovePermission(Inventory.Inventoryserref.BALUser argUserApprovePermission) {
            return base.Channel.InsertUserApprovePermission(argUserApprovePermission);
        }
        
        public System.Threading.Tasks.Task<string> InsertUserApprovePermissionAsync(Inventory.Inventoryserref.BALUser argUserApprovePermission) {
            return base.Channel.InsertUserApprovePermissionAsync(argUserApprovePermission);
        }
        
        public string UpdateUserApprovePermission(Inventory.Inventoryserref.BALUser argUserApprovePermission) {
            return base.Channel.UpdateUserApprovePermission(argUserApprovePermission);
        }
        
        public System.Threading.Tasks.Task<string> UpdateUserApprovePermissionAsync(Inventory.Inventoryserref.BALUser argUserApprovePermission) {
            return base.Channel.UpdateUserApprovePermissionAsync(argUserApprovePermission);
        }
        
        public Inventory.Inventoryserref.GETITRequestPODetails[] GETITRequestPODetails() {
            return base.Channel.GETITRequestPODetails();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GETITRequestPODetails[]> GETITRequestPODetailsAsync() {
            return base.Channel.GETITRequestPODetailsAsync();
        }
        
        public Inventory.Inventoryserref.SearchRequestITPO[] SearchRequestITPO(Inventory.Inventoryserref.BALRequestITPO argInsITRequestMaster) {
            return base.Channel.SearchRequestITPO(argInsITRequestMaster);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchRequestITPO[]> SearchRequestITPOAsync(Inventory.Inventoryserref.BALRequestITPO argInsITRequestMaster) {
            return base.Channel.SearchRequestITPOAsync(argInsITRequestMaster);
        }
        
        public Inventory.Inventoryserref.BindRequestITDetailsfromPO[] BindRequestITDetailsfromPO(string ITRNO) {
            return base.Channel.BindRequestITDetailsfromPO(ITRNO);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindRequestITDetailsfromPO[]> BindRequestITDetailsfromPOAsync(string ITRNO) {
            return base.Channel.BindRequestITDetailsfromPOAsync(ITRNO);
        }
        
        public string InsertrequestPO(Inventory.Inventoryserref.BALRequestITPO argclsITPOMaster) {
            return base.Channel.InsertrequestPO(argclsITPOMaster);
        }
        
        public System.Threading.Tasks.Task<string> InsertrequestPOAsync(Inventory.Inventoryserref.BALRequestITPO argclsITPOMaster) {
            return base.Channel.InsertrequestPOAsync(argclsITPOMaster);
        }
        
        public Inventory.Inventoryserref.GetITROrderContentPO[] GetITROrderContentPO(long RequestITMasterID, long LoggedInBy) {
            return base.Channel.GetITROrderContentPO(RequestITMasterID, LoggedInBy);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetITROrderContentPO[]> GetITROrderContentPOAsync(long RequestITMasterID, long LoggedInBy) {
            return base.Channel.GetITROrderContentPOAsync(RequestITMasterID, LoggedInBy);
        }
        
        public Inventory.Inventoryserref.BindITRequestPOReport[] BindITRequestPOReport(string RequestITMasterID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.BindITRequestPOReport(RequestITMasterID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindITRequestPOReport[]> BindITRequestPOReportAsync(string RequestITMasterID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.BindITRequestPOReportAsync(RequestITMasterID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public string UpdateITRequestPO(Inventory.Inventoryserref.BALRequestITPO argclsITPOMaster) {
            return base.Channel.UpdateITRequestPO(argclsITPOMaster);
        }
        
        public System.Threading.Tasks.Task<string> UpdateITRequestPOAsync(Inventory.Inventoryserref.BALRequestITPO argclsITPOMaster) {
            return base.Channel.UpdateITRequestPOAsync(argclsITPOMaster);
        }
        
        public Inventory.Inventoryserref.GetRwdlsafterordergeneration[] GetRwdlsafterordergeneration(string RequestITMasterID) {
            return base.Channel.GetRwdlsafterordergeneration(RequestITMasterID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetRwdlsafterordergeneration[]> GetRwdlsafterordergenerationAsync(string RequestITMasterID) {
            return base.Channel.GetRwdlsafterordergenerationAsync(RequestITMasterID);
        }
        
        public Inventory.Inventoryserref.GetServiceRequestPODetails[] GetServiceRequestPODetails() {
            return base.Channel.GetServiceRequestPODetails();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetServiceRequestPODetails[]> GetServiceRequestPODetailsAsync() {
            return base.Channel.GetServiceRequestPODetailsAsync();
        }
        
        public Inventory.Inventoryserref.SearchServiceRequestPO[] SearchServiceRequestPO(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster) {
            return base.Channel.SearchServiceRequestPO(argclsSRMaster);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchServiceRequestPO[]> SearchServiceRequestPOAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster) {
            return base.Channel.SearchServiceRequestPOAsync(argclsSRMaster);
        }
        
        public string UpdateServiceRequestDetailsAfterAction(Inventory.Inventoryserref.BALServiceRequest argclsSRPODetails) {
            return base.Channel.UpdateServiceRequestDetailsAfterAction(argclsSRPODetails);
        }
        
        public System.Threading.Tasks.Task<string> UpdateServiceRequestDetailsAfterActionAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRPODetails) {
            return base.Channel.UpdateServiceRequestDetailsAfterActionAsync(argclsSRPODetails);
        }
        
        public Inventory.Inventoryserref.GetServiceRequestPOGenerateDetails[] GetServiceRequestPOGenerateDetails(string ListServiceRequestID, long LoggedinBy) {
            return base.Channel.GetServiceRequestPOGenerateDetails(ListServiceRequestID, LoggedinBy);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetServiceRequestPOGenerateDetails[]> GetServiceRequestPOGenerateDetailsAsync(string ListServiceRequestID, long LoggedinBy) {
            return base.Channel.GetServiceRequestPOGenerateDetailsAsync(ListServiceRequestID, LoggedinBy);
        }
        
        public Inventory.Inventoryserref.GetSROrderContentPOReports[] GetSROrderContentPOReports(long ServiceRequestID, long ServiceRequestDetailsID, long LoggedInBy) {
            return base.Channel.GetSROrderContentPOReports(ServiceRequestID, ServiceRequestDetailsID, LoggedInBy);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetSROrderContentPOReports[]> GetSROrderContentPOReportsAsync(long ServiceRequestID, long ServiceRequestDetailsID, long LoggedInBy) {
            return base.Channel.GetSROrderContentPOReportsAsync(ServiceRequestID, ServiceRequestDetailsID, LoggedInBy);
        }
        
        public Inventory.Inventoryserref.GetServiceRequestPoReportDetails[] GetServiceRequestPoReportDetails(string ServiceRequestMasterID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.GetServiceRequestPoReportDetails(ServiceRequestMasterID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetServiceRequestPoReportDetails[]> GetServiceRequestPoReportDetailsAsync(string ServiceRequestMasterID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.GetServiceRequestPoReportDetailsAsync(ServiceRequestMasterID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public string InsertServcieRequestGenerateOrder(Inventory.Inventoryserref.BALServiceRequest argclsSRPODetails) {
            return base.Channel.InsertServcieRequestGenerateOrder(argclsSRPODetails);
        }
        
        public System.Threading.Tasks.Task<string> InsertServcieRequestGenerateOrderAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRPODetails) {
            return base.Channel.InsertServcieRequestGenerateOrderAsync(argclsSRPODetails);
        }
        
        public string InsertServiceRequestApproveAction(Inventory.Inventoryserref.BALServiceRequest argclsSRPODetails) {
            return base.Channel.InsertServiceRequestApproveAction(argclsSRPODetails);
        }
        
        public System.Threading.Tasks.Task<string> InsertServiceRequestApproveActionAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRPODetails) {
            return base.Channel.InsertServiceRequestApproveActionAsync(argclsSRPODetails);
        }
        
        public Inventory.Inventoryserref.GetServiceRequestActionByMasterID[] GetServiceRequestActionByMasterID(long ServiceRequestMasterID, long ServiceRequestDetailID) {
            return base.Channel.GetServiceRequestActionByMasterID(ServiceRequestMasterID, ServiceRequestDetailID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetServiceRequestActionByMasterID[]> GetServiceRequestActionByMasterIDAsync(long ServiceRequestMasterID, long ServiceRequestDetailID) {
            return base.Channel.GetServiceRequestActionByMasterIDAsync(ServiceRequestMasterID, ServiceRequestDetailID);
        }
        
        public string UpdateServiceRequestApproveAction(Inventory.Inventoryserref.BALServiceRequest argclsSRPODetails) {
            return base.Channel.UpdateServiceRequestApproveAction(argclsSRPODetails);
        }
        
        public System.Threading.Tasks.Task<string> UpdateServiceRequestApproveActionAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRPODetails) {
            return base.Channel.UpdateServiceRequestApproveActionAsync(argclsSRPODetails);
        }
        
        public Inventory.Inventoryserref.SearchServiceRequestPurchaseOrder[] SearchServiceRequestPurchaseOrder(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster) {
            return base.Channel.SearchServiceRequestPurchaseOrder(argclsSRMaster);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchServiceRequestPurchaseOrder[]> SearchServiceRequestPurchaseOrderAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster) {
            return base.Channel.SearchServiceRequestPurchaseOrderAsync(argclsSRMaster);
        }
        
        public Inventory.Inventoryserref.SearchServiceRequestPurchaseOrderDetails[] SearchServiceRequestPurchaseOrderDetails(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster) {
            return base.Channel.SearchServiceRequestPurchaseOrderDetails(argclsSRMaster);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchServiceRequestPurchaseOrderDetails[]> SearchServiceRequestPurchaseOrderDetailsAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster) {
            return base.Channel.SearchServiceRequestPurchaseOrderDetailsAsync(argclsSRMaster);
        }
        
        public string UpdateServcieRequestGenerateOrder(Inventory.Inventoryserref.BALServiceRequest argclsSRPODetails) {
            return base.Channel.UpdateServcieRequestGenerateOrder(argclsSRPODetails);
        }
        
        public System.Threading.Tasks.Task<string> UpdateServcieRequestGenerateOrderAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRPODetails) {
            return base.Channel.UpdateServcieRequestGenerateOrderAsync(argclsSRPODetails);
        }
        
        public Inventory.Inventoryserref.BindMultiRolesPermission[] BindMultiRolesPermission(string ListUserID, long PermissionID) {
            return base.Channel.BindMultiRolesPermission(ListUserID, PermissionID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMultiRolesPermission[]> BindMultiRolesPermissionAsync(string ListUserID, long PermissionID) {
            return base.Channel.BindMultiRolesPermissionAsync(ListUserID, PermissionID);
        }
        
        public string InsertMultiPermissionApprove(Inventory.Inventoryserref.BALUser argUserApprovePermission) {
            return base.Channel.InsertMultiPermissionApprove(argUserApprovePermission);
        }
        
        public System.Threading.Tasks.Task<string> InsertMultiPermissionApproveAsync(Inventory.Inventoryserref.BALUser argUserApprovePermission) {
            return base.Channel.InsertMultiPermissionApproveAsync(argUserApprovePermission);
        }
        
        public string UpdateMultiPermissionApprove(Inventory.Inventoryserref.BALUser argUserApprovePermission) {
            return base.Channel.UpdateMultiPermissionApprove(argUserApprovePermission);
        }
        
        public System.Threading.Tasks.Task<string> UpdateMultiPermissionApproveAsync(Inventory.Inventoryserref.BALUser argUserApprovePermission) {
            return base.Channel.UpdateMultiPermissionApproveAsync(argUserApprovePermission);
        }
        
        public Inventory.Inventoryserref.GetMPRMasterOrder[] GetMPRMasterOrder() {
            return base.Channel.GetMPRMasterOrder();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMPRMasterOrder[]> GetMPRMasterOrderAsync() {
            return base.Channel.GetMPRMasterOrderAsync();
        }
        
        public Inventory.Inventoryserref.SearchMPRMasterOrder[] SearchMPRMasterOrder(Inventory.Inventoryserref.BALMachinePartsOrder argclsMPRMasterOrder) {
            return base.Channel.SearchMPRMasterOrder(argclsMPRMasterOrder);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchMPRMasterOrder[]> SearchMPRMasterOrderAsync(Inventory.Inventoryserref.BALMachinePartsOrder argclsMPRMasterOrder) {
            return base.Channel.SearchMPRMasterOrderAsync(argclsMPRMasterOrder);
        }
        
        public string InsertMachinePO(Inventory.Inventoryserref.BALMachinePartsOrder argclsMPRPODetails) {
            return base.Channel.InsertMachinePO(argclsMPRPODetails);
        }
        
        public System.Threading.Tasks.Task<string> InsertMachinePOAsync(Inventory.Inventoryserref.BALMachinePartsOrder argclsMPRPODetails) {
            return base.Channel.InsertMachinePOAsync(argclsMPRPODetails);
        }
        
        public Inventory.Inventoryserref.GetMPOrderContentPO[] GetMPOrderContentPO(long MPRMasterID, long LoggedInBy) {
            return base.Channel.GetMPOrderContentPO(MPRMasterID, LoggedInBy);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMPOrderContentPO[]> GetMPOrderContentPOAsync(long MPRMasterID, long LoggedInBy) {
            return base.Channel.GetMPOrderContentPOAsync(MPRMasterID, LoggedInBy);
        }
        
        public Inventory.Inventoryserref.BindMachinePOReport[] BindMachinePOReport(string MPRMasterID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.BindMachinePOReport(MPRMasterID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMachinePOReport[]> BindMachinePOReportAsync(string MPRMasterID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.BindMachinePOReportAsync(MPRMasterID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public string UpdateMachinePO(Inventory.Inventoryserref.BALMachinePartsOrder argclsmaPo) {
            return base.Channel.UpdateMachinePO(argclsmaPo);
        }
        
        public System.Threading.Tasks.Task<string> UpdateMachinePOAsync(Inventory.Inventoryserref.BALMachinePartsOrder argclsmaPo) {
            return base.Channel.UpdateMachinePOAsync(argclsmaPo);
        }
        
        public string UpdateMPRPoStatus(Inventory.Inventoryserref.BALMachinePartsOrder argclsmsrpo) {
            return base.Channel.UpdateMPRPoStatus(argclsmsrpo);
        }
        
        public System.Threading.Tasks.Task<string> UpdateMPRPoStatusAsync(Inventory.Inventoryserref.BALMachinePartsOrder argclsmsrpo) {
            return base.Channel.UpdateMPRPoStatusAsync(argclsmsrpo);
        }
        
        public string InsertMachineApprove(Inventory.Inventoryserref.BALMachinePartsOrder argclsmsrpo) {
            return base.Channel.InsertMachineApprove(argclsmsrpo);
        }
        
        public System.Threading.Tasks.Task<string> InsertMachineApproveAsync(Inventory.Inventoryserref.BALMachinePartsOrder argclsmsrpo) {
            return base.Channel.InsertMachineApproveAsync(argclsmsrpo);
        }
        
        public Inventory.Inventoryserref.GetMachinePartsOrderMPONo[] GetMachinePartsOrderMPONo(string MPRMasterID) {
            return base.Channel.GetMachinePartsOrderMPONo(MPRMasterID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMachinePartsOrderMPONo[]> GetMachinePartsOrderMPONoAsync(string MPRMasterID) {
            return base.Channel.GetMachinePartsOrderMPONoAsync(MPRMasterID);
        }
        
        public Inventory.Inventoryserref.SearchCapitalPO[] SearchCapitalPO(Inventory.Inventoryserref.BALCapitalPO argInsCRMaster) {
            return base.Channel.SearchCapitalPO(argInsCRMaster);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchCapitalPO[]> SearchCapitalPOAsync(Inventory.Inventoryserref.BALCapitalPO argInsCRMaster) {
            return base.Channel.SearchCapitalPOAsync(argInsCRMaster);
        }
        
        public string InsertCapitalPO(Inventory.Inventoryserref.BALCapitalPO argclsCRPODetails) {
            return base.Channel.InsertCapitalPO(argclsCRPODetails);
        }
        
        public System.Threading.Tasks.Task<string> InsertCapitalPOAsync(Inventory.Inventoryserref.BALCapitalPO argclsCRPODetails) {
            return base.Channel.InsertCapitalPOAsync(argclsCRPODetails);
        }
        
        public Inventory.Inventoryserref.GetCROrderContentPO[] GetCROrderContentPO(Inventory.Inventoryserref.BALCapitalPO argclsCRPO) {
            return base.Channel.GetCROrderContentPO(argclsCRPO);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCROrderContentPO[]> GetCROrderContentPOAsync(Inventory.Inventoryserref.BALCapitalPO argclsCRPO) {
            return base.Channel.GetCROrderContentPOAsync(argclsCRPO);
        }
        
        public Inventory.Inventoryserref.GetCapitalPOReport[] GetCapitalPOReport(string CapitalItemMasterID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.GetCapitalPOReport(CapitalItemMasterID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCapitalPOReport[]> GetCapitalPOReportAsync(string CapitalItemMasterID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.GetCapitalPOReportAsync(CapitalItemMasterID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public string UpdateCRPOOrderContent(Inventory.Inventoryserref.BALCapitalPO argclsmsrpo) {
            return base.Channel.UpdateCRPOOrderContent(argclsmsrpo);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCRPOOrderContentAsync(Inventory.Inventoryserref.BALCapitalPO argclsmsrpo) {
            return base.Channel.UpdateCRPOOrderContentAsync(argclsmsrpo);
        }
        
        public string InsertCapitalApprove(Inventory.Inventoryserref.BALCapitalPO argclsCRAODetails) {
            return base.Channel.InsertCapitalApprove(argclsCRAODetails);
        }
        
        public System.Threading.Tasks.Task<string> InsertCapitalApproveAsync(Inventory.Inventoryserref.BALCapitalPO argclsCRAODetails) {
            return base.Channel.InsertCapitalApproveAsync(argclsCRAODetails);
        }
        
        public Inventory.Inventoryserref.GetCapitalOrderCPONo[] GetCapitalOrderCPONo(string CapitalItemMasterID) {
            return base.Channel.GetCapitalOrderCPONo(CapitalItemMasterID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCapitalOrderCPONo[]> GetCapitalOrderCPONoAsync(string CapitalItemMasterID) {
            return base.Channel.GetCapitalOrderCPONoAsync(CapitalItemMasterID);
        }
        
        public Inventory.Inventoryserref.SearchMachinePartsReceive[] SearchMachinePartsReceive(Inventory.Inventoryserref.BALMachinePartsReceiveOrder argclsMPRMasterReceive) {
            return base.Channel.SearchMachinePartsReceive(argclsMPRMasterReceive);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchMachinePartsReceive[]> SearchMachinePartsReceiveAsync(Inventory.Inventoryserref.BALMachinePartsReceiveOrder argclsMPRMasterReceive) {
            return base.Channel.SearchMachinePartsReceiveAsync(argclsMPRMasterReceive);
        }
        
        public Inventory.Inventoryserref.GETMPOValues[] GETMPOValues(long MachinePartsReceiveMasterID) {
            return base.Channel.GETMPOValues(MachinePartsReceiveMasterID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GETMPOValues[]> GETMPOValuesAsync(long MachinePartsReceiveMasterID) {
            return base.Channel.GETMPOValuesAsync(MachinePartsReceiveMasterID);
        }
        
        public Inventory.Inventoryserref.GETMPROValues[] GETMPROValues(long MachinePartsReceiveMasterID) {
            return base.Channel.GETMPROValues(MachinePartsReceiveMasterID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GETMPROValues[]> GETMPROValuesAsync(long MachinePartsReceiveMasterID) {
            return base.Channel.GETMPROValuesAsync(MachinePartsReceiveMasterID);
        }
        
        public string SyncMachinePartsReceivingorder() {
            return base.Channel.SyncMachinePartsReceivingorder();
        }
        
        public System.Threading.Tasks.Task<string> SyncMachinePartsReceivingorderAsync() {
            return base.Channel.SyncMachinePartsReceivingorderAsync();
        }
        
        public Inventory.Inventoryserref.BindMachineReceivingDetailsReport[] BindMachineReceivingDetailsReport(long MachinrPartsRequestOrderID, long MachinrPartsReceivingMasterID, long LoggedInBy, string Filter) {
            return base.Channel.BindMachineReceivingDetailsReport(MachinrPartsRequestOrderID, MachinrPartsReceivingMasterID, LoggedInBy, Filter);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMachineReceivingDetailsReport[]> BindMachineReceivingDetailsReportAsync(long MachinrPartsRequestOrderID, long MachinrPartsReceivingMasterID, long LoggedInBy, string Filter) {
            return base.Channel.BindMachineReceivingDetailsReportAsync(MachinrPartsRequestOrderID, MachinrPartsReceivingMasterID, LoggedInBy, Filter);
        }
        
        public Inventory.Inventoryserref.BindMachinePartReceivingDetailsSubReport[] BindMachinePartReceivingDetailsSubReport(long MPRequestMasterID, long LockedBy, string Filters) {
            return base.Channel.BindMachinePartReceivingDetailsSubReport(MPRequestMasterID, LockedBy, Filters);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMachinePartReceivingDetailsSubReport[]> BindMachinePartReceivingDetailsSubReportAsync(long MPRequestMasterID, long LockedBy, string Filters) {
            return base.Channel.BindMachinePartReceivingDetailsSubReportAsync(MPRequestMasterID, LockedBy, Filters);
        }
        
        public Inventory.Inventoryserref.BindMachineReceiveSummaryReport[] BindMachineReceiveSummaryReport(long MachinePartsRequestOrderID, long LockedBy, string Filters) {
            return base.Channel.BindMachineReceiveSummaryReport(MachinePartsRequestOrderID, LockedBy, Filters);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMachineReceiveSummaryReport[]> BindMachineReceiveSummaryReportAsync(long MachinePartsRequestOrderID, long LockedBy, string Filters) {
            return base.Channel.BindMachineReceiveSummaryReportAsync(MachinePartsRequestOrderID, LockedBy, Filters);
        }
        
        public Inventory.Inventoryserref.UpdateMachinePartsReceivingMaster[] UpdateMachinePartsReceivingMaster(Inventory.Inventoryserref.BALMachinePartsReceiveOrder argclsMPRMaster) {
            return base.Channel.UpdateMachinePartsReceivingMaster(argclsMPRMaster);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.UpdateMachinePartsReceivingMaster[]> UpdateMachinePartsReceivingMasterAsync(Inventory.Inventoryserref.BALMachinePartsReceiveOrder argclsMPRMaster) {
            return base.Channel.UpdateMachinePartsReceivingMasterAsync(argclsMPRMaster);
        }
        
        public string UpdateMachinePartsReceivingDetails(Inventory.Inventoryserref.BALMachinePartsReceiveOrder argclsMPRDetails) {
            return base.Channel.UpdateMachinePartsReceivingDetails(argclsMPRDetails);
        }
        
        public System.Threading.Tasks.Task<string> UpdateMachinePartsReceivingDetailsAsync(Inventory.Inventoryserref.BALMachinePartsReceiveOrder argclsMPRDetails) {
            return base.Channel.UpdateMachinePartsReceivingDetailsAsync(argclsMPRDetails);
        }
        
        public Inventory.Inventoryserref.SearchMedicalSuppliesReceiving[] SearchMedicalSuppliesReceiving(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argclsMedicalSuppliesRec) {
            return base.Channel.SearchMedicalSuppliesReceiving(argclsMedicalSuppliesRec);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchMedicalSuppliesReceiving[]> SearchMedicalSuppliesReceivingAsync(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argclsMedicalSuppliesRec) {
            return base.Channel.SearchMedicalSuppliesReceivingAsync(argclsMedicalSuppliesRec);
        }
        
        public Inventory.Inventoryserref.BindMedicalsupplyReceivingDetail[] BindMedicalsupplyReceivingDetail(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argclsMedicalSuppliesRec) {
            return base.Channel.BindMedicalsupplyReceivingDetail(argclsMedicalSuppliesRec);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMedicalsupplyReceivingDetail[]> BindMedicalsupplyReceivingDetailAsync(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argclsMedicalSuppliesRec) {
            return base.Channel.BindMedicalsupplyReceivingDetailAsync(argclsMedicalSuppliesRec);
        }
        
        public string SyncMedicalSuppliesReceivingorder() {
            return base.Channel.SyncMedicalSuppliesReceivingorder();
        }
        
        public System.Threading.Tasks.Task<string> SyncMedicalSuppliesReceivingorderAsync() {
            return base.Channel.SyncMedicalSuppliesReceivingorderAsync();
        }
        
        public Inventory.Inventoryserref.UpdateMSRReceivingMaster[] UpdateMSRReceivingMaster(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argclsMedicalSuppliesRec) {
            return base.Channel.UpdateMSRReceivingMaster(argclsMedicalSuppliesRec);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.UpdateMSRReceivingMaster[]> UpdateMSRReceivingMasterAsync(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argclsMedicalSuppliesRec) {
            return base.Channel.UpdateMSRReceivingMasterAsync(argclsMedicalSuppliesRec);
        }
        
        public string UpdateMSRReceivingDetails(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argclsMedicalSuppliesRec) {
            return base.Channel.UpdateMSRReceivingDetails(argclsMedicalSuppliesRec);
        }
        
        public System.Threading.Tasks.Task<string> UpdateMSRReceivingDetailsAsync(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argclsMedicalSuppliesRec) {
            return base.Channel.UpdateMSRReceivingDetailsAsync(argclsMedicalSuppliesRec);
        }
        
        public Inventory.Inventoryserref.GetMSRReceivingsummaryReport[] GetMSRReceivingsummaryReport(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argmsr) {
            return base.Channel.GetMSRReceivingsummaryReport(argmsr);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMSRReceivingsummaryReport[]> GetMSRReceivingsummaryReportAsync(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argmsr) {
            return base.Channel.GetMSRReceivingsummaryReportAsync(argmsr);
        }
        
        public Inventory.Inventoryserref.BindMedicalSupplyDetailsReport[] BindMedicalSupplyDetailsReport(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argmsr) {
            return base.Channel.BindMedicalSupplyDetailsReport(argmsr);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMedicalSupplyDetailsReport[]> BindMedicalSupplyDetailsReportAsync(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argmsr) {
            return base.Channel.BindMedicalSupplyDetailsReportAsync(argmsr);
        }
        
        public Inventory.Inventoryserref.BindMedicalSupplyDetailsSubReport[] BindMedicalSupplyDetailsSubReport(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argmsr) {
            return base.Channel.BindMedicalSupplyDetailsSubReport(argmsr);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMedicalSupplyDetailsSubReport[]> BindMedicalSupplyDetailsSubReportAsync(Inventory.Inventoryserref.BALMedicalSupplyReceivingOrder argmsr) {
            return base.Channel.BindMedicalSupplyDetailsSubReportAsync(argmsr);
        }
        
        public Inventory.Inventoryserref.BindMachinePartsReport[] BindMachinePartsReport(string MPRMasterID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.BindMachinePartsReport(MPRMasterID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMachinePartsReport[]> BindMachinePartsReportAsync(string MPRMasterID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.BindMachinePartsReportAsync(MPRMasterID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public Inventory.Inventoryserref.GetMPRMaster[] GetMPRMaster() {
            return base.Channel.GetMPRMaster();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMPRMaster[]> GetMPRMasterAsync() {
            return base.Channel.GetMPRMasterAsync();
        }
        
        public Inventory.Inventoryserref.GetMPRDetailsbyMPRMasterID[] GetMPRDetailsbyMPRMasterID(long MPRMasterID, long LockedBy, long LockTimeOut) {
            return base.Channel.GetMPRDetailsbyMPRMasterID(MPRMasterID, LockedBy, LockTimeOut);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMPRDetailsbyMPRMasterID[]> GetMPRDetailsbyMPRMasterIDAsync(long MPRMasterID, long LockedBy, long LockTimeOut) {
            return base.Channel.GetMPRDetailsbyMPRMasterIDAsync(MPRMasterID, LockedBy, LockTimeOut);
        }
        
        public Inventory.Inventoryserref.GetList[] GetList(string ScreenName, string ListName, string Mode) {
            return base.Channel.GetList(ScreenName, ListName, Mode);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetList[]> GetListAsync(string ScreenName, string ListName, string Mode) {
            return base.Channel.GetListAsync(ScreenName, ListName, Mode);
        }
        
        public Inventory.Inventoryserref.SearchMPRMaster[] SearchMPRMaster(Inventory.Inventoryserref.BALMPRMaster argclsMPRMaster) {
            return base.Channel.SearchMPRMaster(argclsMPRMaster);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchMPRMaster[]> SearchMPRMasterAsync(Inventory.Inventoryserref.BALMPRMaster argclsMPRMaster) {
            return base.Channel.SearchMPRMasterAsync(argclsMPRMaster);
        }
        
        public object[] InsertMPRMaster(Inventory.Inventoryserref.BALMPRMaster argInsMPRMaster) {
            return base.Channel.InsertMPRMaster(argInsMPRMaster);
        }
        
        public System.Threading.Tasks.Task<object[]> InsertMPRMasterAsync(Inventory.Inventoryserref.BALMPRMaster argInsMPRMaster) {
            return base.Channel.InsertMPRMasterAsync(argInsMPRMaster);
        }
        
        public string InsertMPRDetails(Inventory.Inventoryserref.BALMPRMaster argInsMPRDetails) {
            return base.Channel.InsertMPRDetails(argInsMPRDetails);
        }
        
        public System.Threading.Tasks.Task<string> InsertMPRDetailsAsync(Inventory.Inventoryserref.BALMPRMaster argInsMPRDetails) {
            return base.Channel.InsertMPRDetailsAsync(argInsMPRDetails);
        }
        
        public string UpdateMPRMaster(Inventory.Inventoryserref.BALMPRMaster argupdMPRMaster) {
            return base.Channel.UpdateMPRMaster(argupdMPRMaster);
        }
        
        public System.Threading.Tasks.Task<string> UpdateMPRMasterAsync(Inventory.Inventoryserref.BALMPRMaster argupdMPRMaster) {
            return base.Channel.UpdateMPRMasterAsync(argupdMPRMaster);
        }
        
        public string UpdateMPRDetails(Inventory.Inventoryserref.BALMPRMaster argUpdMPRDetails) {
            return base.Channel.UpdateMPRDetails(argUpdMPRDetails);
        }
        
        public System.Threading.Tasks.Task<string> UpdateMPRDetailsAsync(Inventory.Inventoryserref.BALMPRMaster argUpdMPRDetails) {
            return base.Channel.UpdateMPRDetailsAsync(argUpdMPRDetails);
        }
        
        public string DeleteMPRDetails(long argMPRDetailsID, bool IsActive, long LastModifiedBy) {
            return base.Channel.DeleteMPRDetails(argMPRDetailsID, IsActive, LastModifiedBy);
        }
        
        public System.Threading.Tasks.Task<string> DeleteMPRDetailsAsync(long argMPRDetailsID, bool IsActive, long LastModifiedBy) {
            return base.Channel.DeleteMPRDetailsAsync(argMPRDetailsID, IsActive, LastModifiedBy);
        }
        
        public Inventory.Inventoryserref.ValidMachineEquipment[] ValidMachineEquipment(long EquipmentCategory, long EquipementSubcategory, long EquipmentList, long FacilityID) {
            return base.Channel.ValidMachineEquipment(EquipmentCategory, EquipementSubcategory, EquipmentList, FacilityID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.ValidMachineEquipment[]> ValidMachineEquipmentAsync(long EquipmentCategory, long EquipementSubcategory, long EquipmentList, long FacilityID) {
            return base.Channel.ValidMachineEquipmentAsync(EquipmentCategory, EquipementSubcategory, EquipmentList, FacilityID);
        }
        
        public Inventory.Inventoryserref.GetmedicalsupplyReviewReport[] GetmedicalsupplyReviewReport(string MedicalSupplyMasterID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.GetmedicalsupplyReviewReport(MedicalSupplyMasterID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetmedicalsupplyReviewReport[]> GetmedicalsupplyReviewReportAsync(string MedicalSupplyMasterID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.GetmedicalsupplyReviewReportAsync(MedicalSupplyMasterID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public Inventory.Inventoryserref.GetMedicalsuppliesItem[] GetMedicalsuppliesItem(long CorporateID, long FacilityID, long VendorID) {
            return base.Channel.GetMedicalsuppliesItem(CorporateID, FacilityID, VendorID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMedicalsuppliesItem[]> GetMedicalsuppliesItemAsync(long CorporateID, long FacilityID, long VendorID) {
            return base.Channel.GetMedicalsuppliesItemAsync(CorporateID, FacilityID, VendorID);
        }
        
        public string InsertShipping(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest) {
            return base.Channel.InsertShipping(argclsmedicalsuppliesrequest);
        }
        
        public System.Threading.Tasks.Task<string> InsertShippingAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest) {
            return base.Channel.InsertShippingAsync(argclsmedicalsuppliesrequest);
        }
        
        public string UpdateShipping(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest) {
            return base.Channel.UpdateShipping(argclsmedicalsuppliesrequest);
        }
        
        public System.Threading.Tasks.Task<string> UpdateShippingAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest) {
            return base.Channel.UpdateShippingAsync(argclsmedicalsuppliesrequest);
        }
        
        public string DeleteShipping(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest) {
            return base.Channel.DeleteShipping(argclsmedicalsuppliesrequest);
        }
        
        public System.Threading.Tasks.Task<string> DeleteShippingAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest) {
            return base.Channel.DeleteShippingAsync(argclsmedicalsuppliesrequest);
        }
        
        public string InsertTimeDelivery(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest) {
            return base.Channel.InsertTimeDelivery(argclsmedicalsuppliesrequest);
        }
        
        public System.Threading.Tasks.Task<string> InsertTimeDeliveryAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest) {
            return base.Channel.InsertTimeDeliveryAsync(argclsmedicalsuppliesrequest);
        }
        
        public string UpdateTimeDelivery(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest) {
            return base.Channel.UpdateTimeDelivery(argclsmedicalsuppliesrequest);
        }
        
        public System.Threading.Tasks.Task<string> UpdateTimeDeliveryAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest) {
            return base.Channel.UpdateTimeDeliveryAsync(argclsmedicalsuppliesrequest);
        }
        
        public string DeleteTimeDelivery(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest) {
            return base.Channel.DeleteTimeDelivery(argclsmedicalsuppliesrequest);
        }
        
        public System.Threading.Tasks.Task<string> DeleteTimeDeliveryAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest) {
            return base.Channel.DeleteTimeDeliveryAsync(argclsmedicalsuppliesrequest);
        }
        
        public Inventory.Inventoryserref.GetLookUpList[] GetLookUpList(long LookUpID) {
            return base.Channel.GetLookUpList(LookUpID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetLookUpList[]> GetLookUpListAsync(long LookUpID) {
            return base.Channel.GetLookUpListAsync(LookUpID);
        }
        
        public Inventory.Inventoryserref.GetOrderPeriod[] GetOrderPeriod(long CorporateID, long FacilityID, long VendorID, int Ordertype) {
            return base.Channel.GetOrderPeriod(CorporateID, FacilityID, VendorID, Ordertype);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetOrderPeriod[]> GetOrderPeriodAsync(long CorporateID, long FacilityID, long VendorID, int Ordertype) {
            return base.Channel.GetOrderPeriodAsync(CorporateID, FacilityID, VendorID, Ordertype);
        }
        
        public long InsertMedicalsupplyMaster(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest) {
            return base.Channel.InsertMedicalsupplyMaster(argclsmedicalsuppliesrequest);
        }
        
        public System.Threading.Tasks.Task<long> InsertMedicalsupplyMasterAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest) {
            return base.Channel.InsertMedicalsupplyMasterAsync(argclsmedicalsuppliesrequest);
        }
        
        public string InsertMedicalSuppliesDetail(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest) {
            return base.Channel.InsertMedicalSuppliesDetail(argclsmedicalsuppliesrequest);
        }
        
        public System.Threading.Tasks.Task<string> InsertMedicalSuppliesDetailAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest) {
            return base.Channel.InsertMedicalSuppliesDetailAsync(argclsmedicalsuppliesrequest);
        }
        
        public Inventory.Inventoryserref.GetMedicalSupplyRequestMaster[] GetMedicalSupplyRequestMaster() {
            return base.Channel.GetMedicalSupplyRequestMaster();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMedicalSupplyRequestMaster[]> GetMedicalSupplyRequestMasterAsync() {
            return base.Channel.GetMedicalSupplyRequestMasterAsync();
        }
        
        public Inventory.Inventoryserref.SearchMedicalSupplyRequest[] SearchMedicalSupplyRequest(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsMedicalSuppliesReq) {
            return base.Channel.SearchMedicalSupplyRequest(argclsMedicalSuppliesReq);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchMedicalSupplyRequest[]> SearchMedicalSupplyRequestAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsMedicalSuppliesReq) {
            return base.Channel.SearchMedicalSupplyRequestAsync(argclsMedicalSuppliesReq);
        }
        
        public Inventory.Inventoryserref.BindMedicalsupplymasterandDetail[] BindMedicalsupplymasterandDetail(long MedicalSupplyMasterID) {
            return base.Channel.BindMedicalsupplymasterandDetail(MedicalSupplyMasterID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMedicalsupplymasterandDetail[]> BindMedicalsupplymasterandDetailAsync(long MedicalSupplyMasterID) {
            return base.Channel.BindMedicalsupplymasterandDetailAsync(MedicalSupplyMasterID);
        }
        
        public Inventory.Inventoryserref.BindMedicalsupplymaster[] BindMedicalsupplymaster(long MedicalSupplyMasterID) {
            return base.Channel.BindMedicalsupplymaster(MedicalSupplyMasterID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMedicalsupplymaster[]> BindMedicalsupplymasterAsync(long MedicalSupplyMasterID) {
            return base.Channel.BindMedicalsupplymasterAsync(MedicalSupplyMasterID);
        }
        
        public Inventory.Inventoryserref.BindMedicalsupplyDetail[] BindMedicalsupplyDetail(long MedicalSupplyMasterID, long LockedBy, long LockTimeOut) {
            return base.Channel.BindMedicalsupplyDetail(MedicalSupplyMasterID, LockedBy, LockTimeOut);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindMedicalsupplyDetail[]> BindMedicalsupplyDetailAsync(long MedicalSupplyMasterID, long LockedBy, long LockTimeOut) {
            return base.Channel.BindMedicalsupplyDetailAsync(MedicalSupplyMasterID, LockedBy, LockTimeOut);
        }
        
        public string UpdateMedicalsupplyMaster(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest) {
            return base.Channel.UpdateMedicalsupplyMaster(argclsmedicalsuppliesrequest);
        }
        
        public System.Threading.Tasks.Task<string> UpdateMedicalsupplyMasterAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest) {
            return base.Channel.UpdateMedicalsupplyMasterAsync(argclsmedicalsuppliesrequest);
        }
        
        public string UpdateMedicalSupplyDetails(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest) {
            return base.Channel.UpdateMedicalSupplyDetails(argclsmedicalsuppliesrequest);
        }
        
        public System.Threading.Tasks.Task<string> UpdateMedicalSupplyDetailsAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest) {
            return base.Channel.UpdateMedicalSupplyDetailsAsync(argclsmedicalsuppliesrequest);
        }
        
        public string DeleteMedicalSuppliesDetails(long argMSRID, long UpdatedBy) {
            return base.Channel.DeleteMedicalSuppliesDetails(argMSRID, UpdatedBy);
        }
        
        public System.Threading.Tasks.Task<string> DeleteMedicalSuppliesDetailsAsync(long argMSRID, long UpdatedBy) {
            return base.Channel.DeleteMedicalSuppliesDetailsAsync(argMSRID, UpdatedBy);
        }
        
        public Inventory.Inventoryserref.AddMedicalsupplyitem[] AddMedicalsupplyitem(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest) {
            return base.Channel.AddMedicalsupplyitem(argclsmedicalsuppliesrequest);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.AddMedicalsupplyitem[]> AddMedicalsupplyitemAsync(Inventory.Inventoryserref.BALMedicalSuppliesRequest argclsmedicalsuppliesrequest) {
            return base.Channel.AddMedicalsupplyitemAsync(argclsmedicalsuppliesrequest);
        }
        
        public Inventory.Inventoryserref.SavedShippingValue[] SavedShippingValue() {
            return base.Channel.SavedShippingValue();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SavedShippingValue[]> SavedShippingValueAsync() {
            return base.Channel.SavedShippingValueAsync();
        }
        
        public Inventory.Inventoryserref.SavedTimeDeliveryValue[] SavedTimeDeliveryValue() {
            return base.Channel.SavedTimeDeliveryValue();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SavedTimeDeliveryValue[]> SavedTimeDeliveryValueAsync() {
            return base.Channel.SavedTimeDeliveryValueAsync();
        }
        
        public Inventory.Inventoryserref.FindDuplicateShippingValue[] FindDuplicateShippingValue(string ShippingValue) {
            return base.Channel.FindDuplicateShippingValue(ShippingValue);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.FindDuplicateShippingValue[]> FindDuplicateShippingValueAsync(string ShippingValue) {
            return base.Channel.FindDuplicateShippingValueAsync(ShippingValue);
        }
        
        public Inventory.Inventoryserref.FindDuplicateTimeDeliveryValue[] FindDuplicateTimeDeliveryValue(string TimeDeliveryValue) {
            return base.Channel.FindDuplicateTimeDeliveryValue(TimeDeliveryValue);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.FindDuplicateTimeDeliveryValue[]> FindDuplicateTimeDeliveryValueAsync(string TimeDeliveryValue) {
            return base.Channel.FindDuplicateTimeDeliveryValueAsync(TimeDeliveryValue);
        }
        
        public Inventory.Inventoryserref.BindServiceRequestReport[] BindServiceRequestReport(string ServiceRequestMasterID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.BindServiceRequestReport(ServiceRequestMasterID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindServiceRequestReport[]> BindServiceRequestReportAsync(string ServiceRequestMasterID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.BindServiceRequestReportAsync(ServiceRequestMasterID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public Inventory.Inventoryserref.GetServiceRequestMaster[] GetServiceRequestMaster() {
            return base.Channel.GetServiceRequestMaster();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetServiceRequestMaster[]> GetServiceRequestMasterAsync() {
            return base.Channel.GetServiceRequestMasterAsync();
        }
        
        public Inventory.Inventoryserref.GetServiceRequestetailsbyServiceRequestMasterID[] GetServiceRequestetailsbyServiceRequestMasterID(long SRMasterID, long LockedBy, long LockTimeOut) {
            return base.Channel.GetServiceRequestetailsbyServiceRequestMasterID(SRMasterID, LockedBy, LockTimeOut);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetServiceRequestetailsbyServiceRequestMasterID[]> GetServiceRequestetailsbyServiceRequestMasterIDAsync(long SRMasterID, long LockedBy, long LockTimeOut) {
            return base.Channel.GetServiceRequestetailsbyServiceRequestMasterIDAsync(SRMasterID, LockedBy, LockTimeOut);
        }
        
        public Inventory.Inventoryserref.GetServiceCategory[] GetServiceCategory(long CorporateID, string Mode) {
            return base.Channel.GetServiceCategory(CorporateID, Mode);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetServiceCategory[]> GetServiceCategoryAsync(long CorporateID, string Mode) {
            return base.Channel.GetServiceCategoryAsync(CorporateID, Mode);
        }
        
        public Inventory.Inventoryserref.GetServiceList[] GetServiceList(long ServiceCategoryID, string Mode) {
            return base.Channel.GetServiceList(ServiceCategoryID, Mode);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetServiceList[]> GetServiceListAsync(long ServiceCategoryID, string Mode) {
            return base.Channel.GetServiceListAsync(ServiceCategoryID, Mode);
        }
        
        public Inventory.Inventoryserref.SearchServiceRequestMaster[] SearchServiceRequestMaster(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster) {
            return base.Channel.SearchServiceRequestMaster(argclsSRMaster);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchServiceRequestMaster[]> SearchServiceRequestMasterAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster) {
            return base.Channel.SearchServiceRequestMasterAsync(argclsSRMaster);
        }
        
        public object[] InsertServiceRequestMaster(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster) {
            return base.Channel.InsertServiceRequestMaster(argclsSRMaster);
        }
        
        public System.Threading.Tasks.Task<object[]> InsertServiceRequestMasterAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster) {
            return base.Channel.InsertServiceRequestMasterAsync(argclsSRMaster);
        }
        
        public string InsertServcieRequestDetails(Inventory.Inventoryserref.BALServiceRequest argclsSRDetails) {
            return base.Channel.InsertServcieRequestDetails(argclsSRDetails);
        }
        
        public System.Threading.Tasks.Task<string> InsertServcieRequestDetailsAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRDetails) {
            return base.Channel.InsertServcieRequestDetailsAsync(argclsSRDetails);
        }
        
        public string UpdateServiceRequestMaster(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster) {
            return base.Channel.UpdateServiceRequestMaster(argclsSRMaster);
        }
        
        public System.Threading.Tasks.Task<string> UpdateServiceRequestMasterAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRMaster) {
            return base.Channel.UpdateServiceRequestMasterAsync(argclsSRMaster);
        }
        
        public string UpdateServiceRequestDetails(Inventory.Inventoryserref.BALServiceRequest argclsSRDetails) {
            return base.Channel.UpdateServiceRequestDetails(argclsSRDetails);
        }
        
        public System.Threading.Tasks.Task<string> UpdateServiceRequestDetailsAsync(Inventory.Inventoryserref.BALServiceRequest argclsSRDetails) {
            return base.Channel.UpdateServiceRequestDetailsAsync(argclsSRDetails);
        }
        
        public string DeleteServiceRequestDetails(long argMPRDetailsID, bool IsActive, long LastModifiedBy) {
            return base.Channel.DeleteServiceRequestDetails(argMPRDetailsID, IsActive, LastModifiedBy);
        }
        
        public System.Threading.Tasks.Task<string> DeleteServiceRequestDetailsAsync(long argMPRDetailsID, bool IsActive, long LastModifiedBy) {
            return base.Channel.DeleteServiceRequestDetailsAsync(argMPRDetailsID, IsActive, LastModifiedBy);
        }
        
        public string InsertServiceCategoryMaster(Inventory.Inventoryserref.BALServiceRequest argclsServiceCategory) {
            return base.Channel.InsertServiceCategoryMaster(argclsServiceCategory);
        }
        
        public System.Threading.Tasks.Task<string> InsertServiceCategoryMasterAsync(Inventory.Inventoryserref.BALServiceRequest argclsServiceCategory) {
            return base.Channel.InsertServiceCategoryMasterAsync(argclsServiceCategory);
        }
        
        public string UpdateServiceCategoryMaster(Inventory.Inventoryserref.BALServiceRequest argclsServiceCategory) {
            return base.Channel.UpdateServiceCategoryMaster(argclsServiceCategory);
        }
        
        public System.Threading.Tasks.Task<string> UpdateServiceCategoryMasterAsync(Inventory.Inventoryserref.BALServiceRequest argclsServiceCategory) {
            return base.Channel.UpdateServiceCategoryMasterAsync(argclsServiceCategory);
        }
        
        public string DeleteServiceCategoryMaster(long argCategoryID, long LastModifiedBy) {
            return base.Channel.DeleteServiceCategoryMaster(argCategoryID, LastModifiedBy);
        }
        
        public System.Threading.Tasks.Task<string> DeleteServiceCategoryMasterAsync(long argCategoryID, long LastModifiedBy) {
            return base.Channel.DeleteServiceCategoryMasterAsync(argCategoryID, LastModifiedBy);
        }
        
        public string InsertServiceListMaster(Inventory.Inventoryserref.BALServiceRequest argclsServiceList) {
            return base.Channel.InsertServiceListMaster(argclsServiceList);
        }
        
        public System.Threading.Tasks.Task<string> InsertServiceListMasterAsync(Inventory.Inventoryserref.BALServiceRequest argclsServiceList) {
            return base.Channel.InsertServiceListMasterAsync(argclsServiceList);
        }
        
        public string UpdateServiceListMaster(Inventory.Inventoryserref.BALServiceRequest argclsServiceList) {
            return base.Channel.UpdateServiceListMaster(argclsServiceList);
        }
        
        public System.Threading.Tasks.Task<string> UpdateServiceListMasterAsync(Inventory.Inventoryserref.BALServiceRequest argclsServiceList) {
            return base.Channel.UpdateServiceListMasterAsync(argclsServiceList);
        }
        
        public string DeleteServiceListMaster(long argListID, long LastModifiedBy) {
            return base.Channel.DeleteServiceListMaster(argListID, LastModifiedBy);
        }
        
        public System.Threading.Tasks.Task<string> DeleteServiceListMasterAsync(long argListID, long LastModifiedBy) {
            return base.Channel.DeleteServiceListMasterAsync(argListID, LastModifiedBy);
        }
        
        public Inventory.Inventoryserref.CheckServicelist[] GetCheckServicelist(long ServiceCategoryID) {
            return base.Channel.GetCheckServicelist(ServiceCategoryID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.CheckServicelist[]> GetCheckServicelistAsync(long ServiceCategoryID) {
            return base.Channel.GetCheckServicelistAsync(ServiceCategoryID);
        }
        
        public Inventory.Inventoryserref.SavedServiceCategory[] SavedServiceCategory(long CorporateID, long ServiceCategoryID) {
            return base.Channel.SavedServiceCategory(CorporateID, ServiceCategoryID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SavedServiceCategory[]> SavedServiceCategoryAsync(long CorporateID, long ServiceCategoryID) {
            return base.Channel.SavedServiceCategoryAsync(CorporateID, ServiceCategoryID);
        }
        
        public Inventory.Inventoryserref.SavedServiceList[] SavedServiceList(long ServiceListID) {
            return base.Channel.SavedServiceList(ServiceListID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SavedServiceList[]> SavedServiceListAsync(long ServiceListID) {
            return base.Channel.SavedServiceListAsync(ServiceListID);
        }
        
        public Inventory.Inventoryserref.GetServiceAttachment[] GetServiceAttachment(long ServiceUploadID) {
            return base.Channel.GetServiceAttachment(ServiceUploadID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetServiceAttachment[]> GetServiceAttachmentAsync(long ServiceUploadID) {
            return base.Channel.GetServiceAttachmentAsync(ServiceUploadID);
        }
        
        public string InsertServiceAttachment(Inventory.Inventoryserref.BALServiceRequest argclsServiceList) {
            return base.Channel.InsertServiceAttachment(argclsServiceList);
        }
        
        public System.Threading.Tasks.Task<string> InsertServiceAttachmentAsync(Inventory.Inventoryserref.BALServiceRequest argclsServiceList) {
            return base.Channel.InsertServiceAttachmentAsync(argclsServiceList);
        }
        
        public string UpdateServiceAttachment(Inventory.Inventoryserref.BALServiceRequest argclsServiceList) {
            return base.Channel.UpdateServiceAttachment(argclsServiceList);
        }
        
        public System.Threading.Tasks.Task<string> UpdateServiceAttachmentAsync(Inventory.Inventoryserref.BALServiceRequest argclsServiceList) {
            return base.Channel.UpdateServiceAttachmentAsync(argclsServiceList);
        }
        
        public Inventory.Inventoryserref.GetActiveServiceListvalue[] GetActiveServiceListvalue(long ServicelistID) {
            return base.Channel.GetActiveServiceListvalue(ServicelistID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetActiveServiceListvalue[]> GetActiveServiceListvalueAsync(long ServicelistID) {
            return base.Channel.GetActiveServiceListvalueAsync(ServicelistID);
        }
        
        public string DeleteServiceAttachment(long argListID, long LastModifiedBy) {
            return base.Channel.DeleteServiceAttachment(argListID, LastModifiedBy);
        }
        
        public System.Threading.Tasks.Task<string> DeleteServiceAttachmentAsync(long argListID, long LastModifiedBy) {
            return base.Channel.DeleteServiceAttachmentAsync(argListID, LastModifiedBy);
        }
        
        public string InsertSRTempAttch(Inventory.Inventoryserref.BALServiceRequest argclsServiceList) {
            return base.Channel.InsertSRTempAttch(argclsServiceList);
        }
        
        public System.Threading.Tasks.Task<string> InsertSRTempAttchAsync(Inventory.Inventoryserref.BALServiceRequest argclsServiceList) {
            return base.Channel.InsertSRTempAttchAsync(argclsServiceList);
        }
        
        public string DeleteSRTempAttch(int SIno, string Mode) {
            return base.Channel.DeleteSRTempAttch(SIno, Mode);
        }
        
        public System.Threading.Tasks.Task<string> DeleteSRTempAttchAsync(int SIno, string Mode) {
            return base.Channel.DeleteSRTempAttchAsync(SIno, Mode);
        }
        
        public Inventory.Inventoryserref.GetServiceTempAttachment[] GetServiceTempAttachment(int SiNo) {
            return base.Channel.GetServiceTempAttachment(SiNo);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetServiceTempAttachment[]> GetServiceTempAttachmentAsync(int SiNo) {
            return base.Channel.GetServiceTempAttachmentAsync(SiNo);
        }
        
        public string TruncateSRTempAttch() {
            return base.Channel.TruncateSRTempAttch();
        }
        
        public System.Threading.Tasks.Task<string> TruncateSRTempAttchAsync() {
            return base.Channel.TruncateSRTempAttchAsync();
        }
        
        public string AutoUpdateLockedOut(long MasterID, long LockedOutBy, string ScreenName) {
            return base.Channel.AutoUpdateLockedOut(MasterID, LockedOutBy, ScreenName);
        }
        
        public System.Threading.Tasks.Task<string> AutoUpdateLockedOutAsync(long MasterID, long LockedOutBy, string ScreenName) {
            return base.Channel.AutoUpdateLockedOutAsync(MasterID, LockedOutBy, ScreenName);
        }
        
        public object[] InsertITRequestMaster(Inventory.Inventoryserref.BALRequestIT argInsITRequestMaster) {
            return base.Channel.InsertITRequestMaster(argInsITRequestMaster);
        }
        
        public System.Threading.Tasks.Task<object[]> InsertITRequestMasterAsync(Inventory.Inventoryserref.BALRequestIT argInsITRequestMaster) {
            return base.Channel.InsertITRequestMasterAsync(argInsITRequestMaster);
        }
        
        public string InsertITRequestDetails(Inventory.Inventoryserref.BALRequestIT argInsITRequestMaster) {
            return base.Channel.InsertITRequestDetails(argInsITRequestMaster);
        }
        
        public System.Threading.Tasks.Task<string> InsertITRequestDetailsAsync(Inventory.Inventoryserref.BALRequestIT argInsITRequestMaster) {
            return base.Channel.InsertITRequestDetailsAsync(argInsITRequestMaster);
        }
        
        public Inventory.Inventoryserref.GetRequestITMaster[] GetRequestITMaster() {
            return base.Channel.GetRequestITMaster();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetRequestITMaster[]> GetRequestITMasterAsync() {
            return base.Channel.GetRequestITMasterAsync();
        }
        
        public Inventory.Inventoryserref.GetNonsuperAdminRequestITMaster[] GetNonsuperAdminRequestITMaster(long CorporateID, long FacilityID) {
            return base.Channel.GetNonsuperAdminRequestITMaster(CorporateID, FacilityID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetNonsuperAdminRequestITMaster[]> GetNonsuperAdminRequestITMasterAsync(long CorporateID, long FacilityID) {
            return base.Channel.GetNonsuperAdminRequestITMasterAsync(CorporateID, FacilityID);
        }
        
        public Inventory.Inventoryserref.SearchITRequest[] SearchITRequest(Inventory.Inventoryserref.BALRequestIT argInsITRequestMaster) {
            return base.Channel.SearchITRequest(argInsITRequestMaster);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchITRequest[]> SearchITRequestAsync(Inventory.Inventoryserref.BALRequestIT argInsITRequestMaster) {
            return base.Channel.SearchITRequestAsync(argInsITRequestMaster);
        }
        
        public Inventory.Inventoryserref.GetITRequestDetailsbyMasterID[] GetITRequestDetailsbyMasterID(long MPRMasterID, long LockedBy, long LockTimeOut) {
            return base.Channel.GetITRequestDetailsbyMasterID(MPRMasterID, LockedBy, LockTimeOut);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetITRequestDetailsbyMasterID[]> GetITRequestDetailsbyMasterIDAsync(long MPRMasterID, long LockedBy, long LockTimeOut) {
            return base.Channel.GetITRequestDetailsbyMasterIDAsync(MPRMasterID, LockedBy, LockTimeOut);
        }
        
        public string UpdateITRequestMaster(Inventory.Inventoryserref.BALRequestIT argInsITRequestMaster) {
            return base.Channel.UpdateITRequestMaster(argInsITRequestMaster);
        }
        
        public System.Threading.Tasks.Task<string> UpdateITRequestMasterAsync(Inventory.Inventoryserref.BALRequestIT argInsITRequestMaster) {
            return base.Channel.UpdateITRequestMasterAsync(argInsITRequestMaster);
        }
        
        public string UpdateITRequestDetails(Inventory.Inventoryserref.BALRequestIT argInsITRequestMaster) {
            return base.Channel.UpdateITRequestDetails(argInsITRequestMaster);
        }
        
        public System.Threading.Tasks.Task<string> UpdateITRequestDetailsAsync(Inventory.Inventoryserref.BALRequestIT argInsITRequestMaster) {
            return base.Channel.UpdateITRequestDetailsAsync(argInsITRequestMaster);
        }
        
        public Inventory.Inventoryserref.BindEquipementsubcategoryFORIT[] BindEquipementsubcategory(long CorporateID, string Mode) {
            return base.Channel.BindEquipementsubcategory(CorporateID, Mode);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindEquipementsubcategoryFORIT[]> BindEquipementsubcategoryAsync(long CorporateID, string Mode) {
            return base.Channel.BindEquipementsubcategoryAsync(CorporateID, Mode);
        }
        
        public Inventory.Inventoryserref.BindEquipementListFORIT[] BindEquipementListFORIT(long EquipSubcatID, string Mode) {
            return base.Channel.BindEquipementListFORIT(EquipSubcatID, Mode);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindEquipementListFORIT[]> BindEquipementListFORITAsync(long EquipSubcatID, string Mode) {
            return base.Channel.BindEquipementListFORITAsync(EquipSubcatID, Mode);
        }
        
        public Inventory.Inventoryserref.GetSerialNo[] GetSerialNo(long EquipmentSubcategoryID, long EquipListID) {
            return base.Channel.GetSerialNo(EquipmentSubcategoryID, EquipListID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetSerialNo[]> GetSerialNoAsync(long EquipmentSubcategoryID, long EquipListID) {
            return base.Channel.GetSerialNoAsync(EquipmentSubcategoryID, EquipListID);
        }
        
        public string DeleteITRDetails(long argITRDetailsID, bool IsActive, long LastModifiedBy) {
            return base.Channel.DeleteITRDetails(argITRDetailsID, IsActive, LastModifiedBy);
        }
        
        public System.Threading.Tasks.Task<string> DeleteITRDetailsAsync(long argITRDetailsID, bool IsActive, long LastModifiedBy) {
            return base.Channel.DeleteITRDetailsAsync(argITRDetailsID, IsActive, LastModifiedBy);
        }
        
        public Inventory.Inventoryserref.BindRequestITPartsReport[] BindRequestITPartsReport(string RequestITMasterID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.BindRequestITPartsReport(RequestITMasterID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindRequestITPartsReport[]> BindRequestITPartsReportAsync(string RequestITMasterID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.BindRequestITPartsReportAsync(RequestITMasterID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public Inventory.Inventoryserref.ValidITEquipment[] ValidITEquipment(long EquimentSubCategory, long EquipmentList, long FacilityID) {
            return base.Channel.ValidITEquipment(EquimentSubCategory, EquipmentList, FacilityID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.ValidITEquipment[]> ValidITEquipmentAsync(long EquimentSubCategory, long EquipmentList, long FacilityID) {
            return base.Channel.ValidITEquipmentAsync(EquimentSubCategory, EquipmentList, FacilityID);
        }
        
        public Inventory.Inventoryserref.BindCapitalItemRequestReport[] BindCapitalItemRequestReport(string CapitalItemMasterID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.BindCapitalItemRequestReport(CapitalItemMasterID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindCapitalItemRequestReport[]> BindCapitalItemRequestReportAsync(string CapitalItemMasterID, string SearchFilters, long LockedBy, long LoggedinBy) {
            return base.Channel.BindCapitalItemRequestReportAsync(CapitalItemMasterID, SearchFilters, LockedBy, LoggedinBy);
        }
        
        public Inventory.Inventoryserref.GetCapitalItemMaster[] GetCapitalItemMaster() {
            return base.Channel.GetCapitalItemMaster();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCapitalItemMaster[]> GetCapitalItemMasterAsync() {
            return base.Channel.GetCapitalItemMasterAsync();
        }
        
        public Inventory.Inventoryserref.GetCapitalItemDetails[] GetCapitalItemDetails(long CapitalItemMasterID, long LockedBy, long LockTimeOut) {
            return base.Channel.GetCapitalItemDetails(CapitalItemMasterID, LockedBy, LockTimeOut);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCapitalItemDetails[]> GetCapitalItemDetailsAsync(long CapitalItemMasterID, long LockedBy, long LockTimeOut) {
            return base.Channel.GetCapitalItemDetailsAsync(CapitalItemMasterID, LockedBy, LockTimeOut);
        }
        
        public Inventory.Inventoryserref.SearchCapitalItemRequestMaster[] SearchCapitalItemRequestMaster(Inventory.Inventoryserref.BALCapital argclsCRMaster) {
            return base.Channel.SearchCapitalItemRequestMaster(argclsCRMaster);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchCapitalItemRequestMaster[]> SearchCapitalItemRequestMasterAsync(Inventory.Inventoryserref.BALCapital argclsCRMaster) {
            return base.Channel.SearchCapitalItemRequestMasterAsync(argclsCRMaster);
        }
        
        public object[] InsertCapitalItemMaster(Inventory.Inventoryserref.BALCapital argInsCRMaster) {
            return base.Channel.InsertCapitalItemMaster(argInsCRMaster);
        }
        
        public System.Threading.Tasks.Task<object[]> InsertCapitalItemMasterAsync(Inventory.Inventoryserref.BALCapital argInsCRMaster) {
            return base.Channel.InsertCapitalItemMasterAsync(argInsCRMaster);
        }
        
        public Inventory.Inventoryserref.GetLoginDetails[] GetLoginDetails(Inventory.Inventoryserref.BALUser argclsUser) {
            return base.Channel.GetLoginDetails(argclsUser);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetLoginDetails[]> GetLoginDetailsAsync(Inventory.Inventoryserref.BALUser argclsUser) {
            return base.Channel.GetLoginDetailsAsync(argclsUser);
        }
        
        public bool IsUserExist(string argstrUserName, string argstrUserPassword) {
            return base.Channel.IsUserExist(argstrUserName, argstrUserPassword);
        }
        
        public System.Threading.Tasks.Task<bool> IsUserExistAsync(string argstrUserName, string argstrUserPassword) {
            return base.Channel.IsUserExistAsync(argstrUserName, argstrUserPassword);
        }
        
        public Inventory.Inventoryserref.BALUser[] GetUserIDDetails(string argclsUserName) {
            return base.Channel.GetUserIDDetails(argclsUserName);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BALUser[]> GetUserIDDetailsAsync(string argclsUserName) {
            return base.Channel.GetUserIDDetailsAsync(argclsUserName);
        }
        
        public Inventory.Inventoryserref.GetUserInformation[] GetUserInformation() {
            return base.Channel.GetUserInformation();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetUserInformation[]> GetUserInformationAsync() {
            return base.Channel.GetUserInformationAsync();
        }
        
        public string InsertUpdateVendorDetails(Inventory.Inventoryserref.BALVendor argclsvendor) {
            return base.Channel.InsertUpdateVendorDetails(argclsvendor);
        }
        
        public System.Threading.Tasks.Task<string> InsertUpdateVendorDetailsAsync(Inventory.Inventoryserref.BALVendor argclsvendor) {
            return base.Channel.InsertUpdateVendorDetailsAsync(argclsvendor);
        }
        
        public Inventory.Inventoryserref.GetvendorDetails[] GetvendorDetails(string SearchText) {
            return base.Channel.GetvendorDetails(SearchText);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetvendorDetails[]> GetvendorDetailsAsync(string SearchText) {
            return base.Channel.GetvendorDetailsAsync(SearchText);
        }
        
        public string DeleteVendor(long argvendorID, bool IsActive, long UpdatedBy) {
            return base.Channel.DeleteVendor(argvendorID, IsActive, UpdatedBy);
        }
        
        public System.Threading.Tasks.Task<string> DeleteVendorAsync(long argvendorID, bool IsActive, long UpdatedBy) {
            return base.Channel.DeleteVendorAsync(argvendorID, IsActive, UpdatedBy);
        }
        
        public string InsertUser(Inventory.Inventoryserref.BALUser argclsUser, long argintCreatedBy) {
            return base.Channel.InsertUser(argclsUser, argintCreatedBy);
        }
        
        public System.Threading.Tasks.Task<string> InsertUserAsync(Inventory.Inventoryserref.BALUser argclsUser, long argintCreatedBy) {
            return base.Channel.InsertUserAsync(argclsUser, argintCreatedBy);
        }
        
        public Inventory.Inventoryserref.BindExistuser[] BindExistuser() {
            return base.Channel.BindExistuser();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindExistuser[]> BindExistuserAsync() {
            return base.Channel.BindExistuserAsync();
        }
        
        public Inventory.Inventoryserref.BALUser[] GetUserRole() {
            return base.Channel.GetUserRole();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BALUser[]> GetUserRoleAsync() {
            return base.Channel.GetUserRoleAsync();
        }
        
        public Inventory.Inventoryserref.GetUserDetails[] GetUserDetails(long UserID) {
            return base.Channel.GetUserDetails(UserID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetUserDetails[]> GetUserDetailsAsync(long UserID) {
            return base.Channel.GetUserDetailsAsync(UserID);
        }
        
        public Inventory.Inventoryserref.GetUserRoleandFacility[] GetRoleandFacility(long UserID) {
            return base.Channel.GetRoleandFacility(UserID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetUserRoleandFacility[]> GetRoleandFacilityAsync(long UserID) {
            return base.Channel.GetRoleandFacilityAsync(UserID);
        }
        
        public string RemoveFacilityRole(long arguserRoleID) {
            return base.Channel.RemoveFacilityRole(arguserRoleID);
        }
        
        public System.Threading.Tasks.Task<string> RemoveFacilityRoleAsync(long arguserRoleID) {
            return base.Channel.RemoveFacilityRoleAsync(arguserRoleID);
        }
        
        public Inventory.Inventoryserref.BindPermission[] BindPermission() {
            return base.Channel.BindPermission();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindPermission[]> BindPermissionAsync() {
            return base.Channel.BindPermissionAsync();
        }
        
        public Inventory.Inventoryserref.GetPermission[] GetPermission(long MainmenuID, long SubmenuID) {
            return base.Channel.GetPermission(MainmenuID, SubmenuID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetPermission[]> GetPermissionAsync(long MainmenuID, long SubmenuID) {
            return base.Channel.GetPermissionAsync(MainmenuID, SubmenuID);
        }
        
        public Inventory.Inventoryserref.GetdrpMainMenu[] GetdrpMainMenu() {
            return base.Channel.GetdrpMainMenu();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetdrpMainMenu[]> GetdrpMainMenuAsync() {
            return base.Channel.GetdrpMainMenuAsync();
        }
        
        public Inventory.Inventoryserref.GetdrpSubMenu[] GetdrpSubMenu(long MainmenuID) {
            return base.Channel.GetdrpSubMenu(MainmenuID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetdrpSubMenu[]> GetdrpSubMenuAsync(long MainmenuID) {
            return base.Channel.GetdrpSubMenuAsync(MainmenuID);
        }
        
        public string InsertUpdatePermission(Inventory.Inventoryserref.BALUser argclspermission) {
            return base.Channel.InsertUpdatePermission(argclspermission);
        }
        
        public System.Threading.Tasks.Task<string> InsertUpdatePermissionAsync(Inventory.Inventoryserref.BALUser argclspermission) {
            return base.Channel.InsertUpdatePermissionAsync(argclspermission);
        }
        
        public Inventory.Inventoryserref.GetState[] GetState() {
            return base.Channel.GetState();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetState[]> GetStateAsync() {
            return base.Channel.GetStateAsync();
        }
        
        public Inventory.Inventoryserref.IsUserExist[] GetExistUser(string UserName) {
            return base.Channel.GetExistUser(UserName);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.IsUserExist[]> GetExistUserAsync(string UserName) {
            return base.Channel.GetExistUserAsync(UserName);
        }
        
        public Inventory.Inventoryserref.GetItemCategory[] GetItemCategory() {
            return base.Channel.GetItemCategory();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetItemCategory[]> GetItemCategoryAsync() {
            return base.Channel.GetItemCategoryAsync();
        }
        
        public Inventory.Inventoryserref.SearchItemCategory[] SearchItemCategory(Inventory.Inventoryserref.BALPGroup argpgroup) {
            return base.Channel.SearchItemCategory(argpgroup);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchItemCategory[]> SearchItemCategoryAsync(Inventory.Inventoryserref.BALPGroup argpgroup) {
            return base.Channel.SearchItemCategoryAsync(argpgroup);
        }
        
        public string DeleteItemCategory(long CategoryID, long UserID, bool IsActive) {
            return base.Channel.DeleteItemCategory(CategoryID, UserID, IsActive);
        }
        
        public System.Threading.Tasks.Task<string> DeleteItemCategoryAsync(long CategoryID, long UserID, bool IsActive) {
            return base.Channel.DeleteItemCategoryAsync(CategoryID, UserID, IsActive);
        }
        
        public string InsertUpdateCategory(Inventory.Inventoryserref.BALPGroup argpgname) {
            return base.Channel.InsertUpdateCategory(argpgname);
        }
        
        public System.Threading.Tasks.Task<string> InsertUpdateCategoryAsync(Inventory.Inventoryserref.BALPGroup argpgname) {
            return base.Channel.InsertUpdateCategoryAsync(argpgname);
        }
        
        public Inventory.Inventoryserref.ddlLoadValues[] ddlLoadValues(long TableID) {
            return base.Channel.ddlLoadValues(TableID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.ddlLoadValues[]> ddlLoadValuesAsync(long TableID) {
            return base.Channel.ddlLoadValuesAsync(TableID);
        }
        
        public Inventory.Inventoryserref.BindItem[] binditem(string SearchItem) {
            return base.Channel.binditem(SearchItem);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindItem[]> binditemAsync(string SearchItem) {
            return base.Channel.binditemAsync(SearchItem);
        }
        
        public string InsertUpdateItem(Inventory.Inventoryserref.BALItem argitem) {
            return base.Channel.InsertUpdateItem(argitem);
        }
        
        public System.Threading.Tasks.Task<string> InsertUpdateItemAsync(Inventory.Inventoryserref.BALItem argitem) {
            return base.Channel.InsertUpdateItemAsync(argitem);
        }
        
        public string DeleteItem(long ItemUniqueID, bool IsActive, long LastModifiedBy) {
            return base.Channel.DeleteItem(ItemUniqueID, IsActive, LastModifiedBy);
        }
        
        public System.Threading.Tasks.Task<string> DeleteItemAsync(long ItemUniqueID, bool IsActive, long LastModifiedBy) {
            return base.Channel.DeleteItemAsync(ItemUniqueID, IsActive, LastModifiedBy);
        }
        
        public string InsertUOM(Inventory.Inventoryserref.BALUom arguom) {
            return base.Channel.InsertUOM(arguom);
        }
        
        public System.Threading.Tasks.Task<string> InsertUOMAsync(Inventory.Inventoryserref.BALUom arguom) {
            return base.Channel.InsertUOMAsync(arguom);
        }
        
        public string InsertItemMap(Inventory.Inventoryserref.BALItemMap argitemmap) {
            return base.Channel.InsertItemMap(argitemmap);
        }
        
        public System.Threading.Tasks.Task<string> InsertItemMapAsync(Inventory.Inventoryserref.BALItemMap argitemmap) {
            return base.Channel.InsertItemMapAsync(argitemmap);
        }
        
        public string DeleteItemMapping(long ItemMappID, bool IsActive, long LastModifiedBy) {
            return base.Channel.DeleteItemMapping(ItemMappID, IsActive, LastModifiedBy);
        }
        
        public System.Threading.Tasks.Task<string> DeleteItemMappingAsync(long ItemMappID, bool IsActive, long LastModifiedBy) {
            return base.Channel.DeleteItemMappingAsync(ItemMappID, IsActive, LastModifiedBy);
        }
        
        public Inventory.Inventoryserref.GetItemMap[] GetItemMap() {
            return base.Channel.GetItemMap();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetItemMap[]> GetItemMapAsync() {
            return base.Channel.GetItemMapAsync();
        }
        
        public Inventory.Inventoryserref.GetItemMapping[] GetItemMapping(long ItemID) {
            return base.Channel.GetItemMapping(ItemID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetItemMapping[]> GetItemMappingAsync(long ItemID) {
            return base.Channel.GetItemMappingAsync(ItemID);
        }
        
        public Inventory.Inventoryserref.GetItemDRD[] GetItemDRD() {
            return base.Channel.GetItemDRD();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetItemDRD[]> GetItemDRDAsync() {
            return base.Channel.GetItemDRDAsync();
        }
        
        public Inventory.Inventoryserref.GetDrpItemsByCategory[] GetDrpItemsByCategory(long categoryID) {
            return base.Channel.GetDrpItemsByCategory(categoryID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetDrpItemsByCategory[]> GetDrpItemsByCategoryAsync(long categoryID) {
            return base.Channel.GetDrpItemsByCategoryAsync(categoryID);
        }
        
        public Inventory.Inventoryserref.ddlCurrency[] ddlCurrency() {
            return base.Channel.ddlCurrency();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.ddlCurrency[]> ddlCurrencyAsync() {
            return base.Channel.ddlCurrencyAsync();
        }
        
        public string InsertCurrency(Inventory.Inventoryserref.BALItem argcur) {
            return base.Channel.InsertCurrency(argcur);
        }
        
        public System.Threading.Tasks.Task<string> InsertCurrencyAsync(Inventory.Inventoryserref.BALItem argcur) {
            return base.Channel.InsertCurrencyAsync(argcur);
        }
        
        public Inventory.Inventoryserref.BALUser[] GetCorporateMaster() {
            return base.Channel.GetCorporateMaster();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BALUser[]> GetCorporateMasterAsync() {
            return base.Channel.GetCorporateMasterAsync();
        }
        
        public Inventory.Inventoryserref.BALUser[] GetCorporateFacilityByUserID(long UserID) {
            return base.Channel.GetCorporateFacilityByUserID(UserID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BALUser[]> GetCorporateFacilityByUserIDAsync(long UserID) {
            return base.Channel.GetCorporateFacilityByUserIDAsync(UserID);
        }
        
        public string InsertRole(Inventory.Inventoryserref.BALUser argrole) {
            return base.Channel.InsertRole(argrole);
        }
        
        public System.Threading.Tasks.Task<string> InsertRoleAsync(Inventory.Inventoryserref.BALUser argrole) {
            return base.Channel.InsertRoleAsync(argrole);
        }
        
        public Inventory.Inventoryserref.GetUom[] GetUom() {
            return base.Channel.GetUom();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetUom[]> GetUomAsync() {
            return base.Channel.GetUomAsync();
        }
        
        public string DeleteUom(long UomID, long UserID, bool IsActive) {
            return base.Channel.DeleteUom(UomID, UserID, IsActive);
        }
        
        public System.Threading.Tasks.Task<string> DeleteUomAsync(long UomID, long UserID, bool IsActive) {
            return base.Channel.DeleteUomAsync(UomID, UserID, IsActive);
        }
        
        public Inventory.Inventoryserref.GetCorporateFacility[] GetCorporateFacility(long CorporateID) {
            return base.Channel.GetCorporateFacility(CorporateID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetCorporateFacility[]> GetCorporateFacilityAsync(long CorporateID) {
            return base.Channel.GetCorporateFacilityAsync(CorporateID);
        }
        
        public Inventory.Inventoryserref.UserFacilityRole[] GetFacilityRole() {
            return base.Channel.GetFacilityRole();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.UserFacilityRole[]> GetFacilityRoleAsync() {
            return base.Channel.GetFacilityRoleAsync();
        }
        
        public string DeleteGPBilling(long GPBillingID) {
            return base.Channel.DeleteGPBilling(GPBillingID);
        }
        
        public System.Threading.Tasks.Task<string> DeleteGPBillingAsync(long GPBillingID) {
            return base.Channel.DeleteGPBillingAsync(GPBillingID);
        }
        
        public string InsertGPBilling(Inventory.Inventoryserref.BALGPBill arggpb) {
            return base.Channel.InsertGPBilling(arggpb);
        }
        
        public System.Threading.Tasks.Task<string> InsertGPBillingAsync(Inventory.Inventoryserref.BALGPBill arggpb) {
            return base.Channel.InsertGPBillingAsync(arggpb);
        }
        
        public Inventory.Inventoryserref.GetGPBilling[] GetGPBilling() {
            return base.Channel.GetGPBilling();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetGPBilling[]> GetGPBillingAsync() {
            return base.Channel.GetGPBillingAsync();
        }
        
        public Inventory.Inventoryserref.GetUserPagePermission[] GetLoginPermissionDetails(long UserRoleID) {
            return base.Channel.GetLoginPermissionDetails(UserRoleID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetUserPagePermission[]> GetLoginPermissionDetailsAsync(long UserRoleID) {
            return base.Channel.GetLoginPermissionDetailsAsync(UserRoleID);
        }
        
        public Inventory.Inventoryserref.GetFacility[] GetFacility() {
            return base.Channel.GetFacility();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetFacility[]> GetFacilityAsync() {
            return base.Channel.GetFacilityAsync();
        }
        
        public string DeleteFacilityItemMap(long argclsFacilityItemID, long argclsUserID, bool IsActive) {
            return base.Channel.DeleteFacilityItemMap(argclsFacilityItemID, argclsUserID, IsActive);
        }
        
        public System.Threading.Tasks.Task<string> DeleteFacilityItemMapAsync(long argclsFacilityItemID, long argclsUserID, bool IsActive) {
            return base.Channel.DeleteFacilityItemMapAsync(argclsFacilityItemID, argclsUserID, IsActive);
        }
        
        public string InsertUpdateFacilityItemMap(Inventory.Inventoryserref.BALFaItemMap argclsFacility) {
            return base.Channel.InsertUpdateFacilityItemMap(argclsFacility);
        }
        
        public System.Threading.Tasks.Task<string> InsertUpdateFacilityItemMapAsync(Inventory.Inventoryserref.BALFaItemMap argclsFacility) {
            return base.Channel.InsertUpdateFacilityItemMapAsync(argclsFacility);
        }
        
        public Inventory.Inventoryserref.GetFacilityItemMap[] GetFacilityItemMap() {
            return base.Channel.GetFacilityItemMap();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetFacilityItemMap[]> GetFacilityItemMapAsync() {
            return base.Channel.GetFacilityItemMapAsync();
        }
        
        public string InsertFacility(Inventory.Inventoryserref.BALFacility argclsFacility, long argintCreatedBy) {
            return base.Channel.InsertFacility(argclsFacility, argintCreatedBy);
        }
        
        public System.Threading.Tasks.Task<string> InsertFacilityAsync(Inventory.Inventoryserref.BALFacility argclsFacility, long argintCreatedBy) {
            return base.Channel.InsertFacilityAsync(argclsFacility, argintCreatedBy);
        }
        
        public Inventory.Inventoryserref.BindFacility[] BindFacility(Inventory.Inventoryserref.BALFacility argFacility) {
            return base.Channel.BindFacility(argFacility);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindFacility[]> BindFacilityAsync(Inventory.Inventoryserref.BALFacility argFacility) {
            return base.Channel.BindFacilityAsync(argFacility);
        }
        
        public string DeleteFacility(long argclsFacilityID, long argclsUserID, bool IsActive) {
            return base.Channel.DeleteFacility(argclsFacilityID, argclsUserID, IsActive);
        }
        
        public System.Threading.Tasks.Task<string> DeleteFacilityAsync(long argclsFacilityID, long argclsUserID, bool IsActive) {
            return base.Channel.DeleteFacilityAsync(argclsFacilityID, argclsUserID, IsActive);
        }
        
        public Inventory.Inventoryserref.GetItemsbyFacilityID[] GetItemsbyFacilityID(long FacilityID) {
            return base.Channel.GetItemsbyFacilityID(FacilityID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetItemsbyFacilityID[]> GetItemsbyFacilityIDAsync(long FacilityID) {
            return base.Channel.GetItemsbyFacilityIDAsync(FacilityID);
        }
        
        public Inventory.Inventoryserref.GetFacilityShortName[] GetFacilityShortName() {
            return base.Channel.GetFacilityShortName();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetFacilityShortName[]> GetFacilityShortNameAsync() {
            return base.Channel.GetFacilityShortNameAsync();
        }
        
        public string DeleteFacilityVendorAccount(long argclsFacilityVendorAccID, long argclsUserID, bool IsActive) {
            return base.Channel.DeleteFacilityVendorAccount(argclsFacilityVendorAccID, argclsUserID, IsActive);
        }
        
        public System.Threading.Tasks.Task<string> DeleteFacilityVendorAccountAsync(long argclsFacilityVendorAccID, long argclsUserID, bool IsActive) {
            return base.Channel.DeleteFacilityVendorAccountAsync(argclsFacilityVendorAccID, argclsUserID, IsActive);
        }
        
        public string InsertUpdateFacilityVendorAccount(Inventory.Inventoryserref.BALFacilityVendorAccount argclsFacilityVendorAcc) {
            return base.Channel.InsertUpdateFacilityVendorAccount(argclsFacilityVendorAcc);
        }
        
        public System.Threading.Tasks.Task<string> InsertUpdateFacilityVendorAccountAsync(Inventory.Inventoryserref.BALFacilityVendorAccount argclsFacilityVendorAcc) {
            return base.Channel.InsertUpdateFacilityVendorAccountAsync(argclsFacilityVendorAcc);
        }
        
        public Inventory.Inventoryserref.GetFacilityVendorAccount[] GetFacilityVendorAccount(string SearchItem) {
            return base.Channel.GetFacilityVendorAccount(SearchItem);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetFacilityVendorAccount[]> GetFacilityVendorAccountAsync(string SearchItem) {
            return base.Channel.GetFacilityVendorAccountAsync(SearchItem);
        }
        
        public string InsertUpdateVendorOrderDue(Inventory.Inventoryserref.BALVendorOrderDue argclsvendorOrderDue) {
            return base.Channel.InsertUpdateVendorOrderDue(argclsvendorOrderDue);
        }
        
        public System.Threading.Tasks.Task<string> InsertUpdateVendorOrderDueAsync(Inventory.Inventoryserref.BALVendorOrderDue argclsvendorOrderDue) {
            return base.Channel.InsertUpdateVendorOrderDueAsync(argclsvendorOrderDue);
        }
        
        public Inventory.Inventoryserref.ValidateVendorOrderType[] ValidateVendorOrderType(Inventory.Inventoryserref.BALVendorOrderDue argclsvendorOrderDue) {
            return base.Channel.ValidateVendorOrderType(argclsvendorOrderDue);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.ValidateVendorOrderType[]> ValidateVendorOrderTypeAsync(Inventory.Inventoryserref.BALVendorOrderDue argclsvendorOrderDue) {
            return base.Channel.ValidateVendorOrderTypeAsync(argclsvendorOrderDue);
        }
        
        public Inventory.Inventoryserref.BindVendorOrderDue[] BindVendorOrderDue(Inventory.Inventoryserref.BALFacilitySupply argclsvendorOrderDue) {
            return base.Channel.BindVendorOrderDue(argclsvendorOrderDue);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.BindVendorOrderDue[]> BindVendorOrderDueAsync(Inventory.Inventoryserref.BALFacilitySupply argclsvendorOrderDue) {
            return base.Channel.BindVendorOrderDueAsync(argclsvendorOrderDue);
        }
        
        public string InsertUpdateFacilitySupply(Inventory.Inventoryserref.BALFacilitySupply argclsFacilitySupply) {
            return base.Channel.InsertUpdateFacilitySupply(argclsFacilitySupply);
        }
        
        public System.Threading.Tasks.Task<string> InsertUpdateFacilitySupplyAsync(Inventory.Inventoryserref.BALFacilitySupply argclsFacilitySupply) {
            return base.Channel.InsertUpdateFacilitySupplyAsync(argclsFacilitySupply);
        }
        
        public Inventory.Inventoryserref.GetFacilitySupply[] GetFacilitySupply(Inventory.Inventoryserref.BALFacilitySupply argclsFacilitySupply) {
            return base.Channel.GetFacilitySupply(argclsFacilitySupply);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetFacilitySupply[]> GetFacilitySupplyAsync(Inventory.Inventoryserref.BALFacilitySupply argclsFacilitySupply) {
            return base.Channel.GetFacilitySupplyAsync(argclsFacilitySupply);
        }
        
        public Inventory.Inventoryserref.GetFacilitySupplyGird[] GetFacilitySupplyGird(Inventory.Inventoryserref.BALFacilitySupply argclsFacilitySupply) {
            return base.Channel.GetFacilitySupplyGird(argclsFacilitySupply);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetFacilitySupplyGird[]> GetFacilitySupplyGirdAsync(Inventory.Inventoryserref.BALFacilitySupply argclsFacilitySupply) {
            return base.Channel.GetFacilitySupplyGirdAsync(argclsFacilitySupply);
        }
        
        public Inventory.Inventoryserref.GetEquipmentCategory[] GetEquipmentCategory(long CorporateID, string Mode) {
            return base.Channel.GetEquipmentCategory(CorporateID, Mode);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetEquipmentCategory[]> GetEquipmentCategoryAsync(long CorporateID, string Mode) {
            return base.Channel.GetEquipmentCategoryAsync(CorporateID, Mode);
        }
        
        public Inventory.Inventoryserref.GetEquipementList[] GetEquipementList(long EquipSubCategoryID, string Mode) {
            return base.Channel.GetEquipementList(EquipSubCategoryID, Mode);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetEquipementList[]> GetEquipementListAsync(long EquipSubCategoryID, string Mode) {
            return base.Channel.GetEquipementListAsync(EquipSubCategoryID, Mode);
        }
        
        public object[] InsertEquipmentCategory(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster) {
            return base.Channel.InsertEquipmentCategory(argclsmachinemaster);
        }
        
        public System.Threading.Tasks.Task<object[]> InsertEquipmentCategoryAsync(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster) {
            return base.Channel.InsertEquipmentCategoryAsync(argclsmachinemaster);
        }
        
        public string UpdateEquipmentcategory(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster) {
            return base.Channel.UpdateEquipmentcategory(argclsmachinemaster);
        }
        
        public System.Threading.Tasks.Task<string> UpdateEquipmentcategoryAsync(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster) {
            return base.Channel.UpdateEquipmentcategoryAsync(argclsmachinemaster);
        }
        
        public string InsertEquipmentList(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster) {
            return base.Channel.InsertEquipmentList(argclsmachinemaster);
        }
        
        public System.Threading.Tasks.Task<string> InsertEquipmentListAsync(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster) {
            return base.Channel.InsertEquipmentListAsync(argclsmachinemaster);
        }
        
        public string UpdateEquipmentList(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster) {
            return base.Channel.UpdateEquipmentList(argclsmachinemaster);
        }
        
        public System.Threading.Tasks.Task<string> UpdateEquipmentListAsync(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster) {
            return base.Channel.UpdateEquipmentListAsync(argclsmachinemaster);
        }
        
        public Inventory.Inventoryserref.GetMachinemasterDetails[] GetMachinemasterDetails() {
            return base.Channel.GetMachinemasterDetails();
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMachinemasterDetails[]> GetMachinemasterDetailsAsync() {
            return base.Channel.GetMachinemasterDetailsAsync();
        }
        
        public string DeleteMachinemasterDetails(long argmachineID, bool IsActive, long UpdatedBy) {
            return base.Channel.DeleteMachinemasterDetails(argmachineID, IsActive, UpdatedBy);
        }
        
        public System.Threading.Tasks.Task<string> DeleteMachinemasterDetailsAsync(long argmachineID, bool IsActive, long UpdatedBy) {
            return base.Channel.DeleteMachinemasterDetailsAsync(argmachineID, IsActive, UpdatedBy);
        }
        
        public string DeleteEquipeCategoryMaster(long argCategoryID, bool IsActive, long UpdatedBy) {
            return base.Channel.DeleteEquipeCategoryMaster(argCategoryID, IsActive, UpdatedBy);
        }
        
        public System.Threading.Tasks.Task<string> DeleteEquipeCategoryMasterAsync(long argCategoryID, bool IsActive, long UpdatedBy) {
            return base.Channel.DeleteEquipeCategoryMasterAsync(argCategoryID, IsActive, UpdatedBy);
        }
        
        public string DeleteEquipListMaster(long argListID, bool IsActive, long UpdatedBy) {
            return base.Channel.DeleteEquipListMaster(argListID, IsActive, UpdatedBy);
        }
        
        public System.Threading.Tasks.Task<string> DeleteEquipListMasterAsync(long argListID, bool IsActive, long UpdatedBy) {
            return base.Channel.DeleteEquipListMasterAsync(argListID, IsActive, UpdatedBy);
        }
        
        public string InsertMachineMaster(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster) {
            return base.Channel.InsertMachineMaster(argclsmachinemaster);
        }
        
        public System.Threading.Tasks.Task<string> InsertMachineMasterAsync(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster) {
            return base.Channel.InsertMachineMasterAsync(argclsmachinemaster);
        }
        
        public string UpdateMachineMaster(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster) {
            return base.Channel.UpdateMachineMaster(argclsmachinemaster);
        }
        
        public System.Threading.Tasks.Task<string> UpdateMachineMasterAsync(Inventory.Inventoryserref.BALMachinemaster argclsmachinemaster) {
            return base.Channel.UpdateMachineMasterAsync(argclsmachinemaster);
        }
        
        public Inventory.Inventoryserref.GetMachineMasterbasedMachineID[] GetMachinemasterbasedmachineID(long MachineID) {
            return base.Channel.GetMachinemasterbasedmachineID(MachineID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetMachineMasterbasedMachineID[]> GetMachinemasterbasedmachineIDAsync(long MachineID) {
            return base.Channel.GetMachinemasterbasedmachineIDAsync(MachineID);
        }
        
        public Inventory.Inventoryserref.SearchMachinemasterdetails[] SearchMachinemasterdetails(Inventory.Inventoryserref.BALMachinemaster argstrmach) {
            return base.Channel.SearchMachinemasterdetails(argstrmach);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SearchMachinemasterdetails[]> SearchMachinemasterdetailsAsync(Inventory.Inventoryserref.BALMachinemaster argstrmach) {
            return base.Channel.SearchMachinemasterdetailsAsync(argstrmach);
        }
        
        public Inventory.Inventoryserref.CheckEquipmentlist[] GetCheckEquipmentlist(long EquipcategoryID) {
            return base.Channel.GetCheckEquipmentlist(EquipcategoryID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.CheckEquipmentlist[]> GetCheckEquipmentlistAsync(long EquipcategoryID) {
            return base.Channel.GetCheckEquipmentlistAsync(EquipcategoryID);
        }
        
        public Inventory.Inventoryserref.SavedEquipmentCategory[] SavedEquipmentCategory(long FacilityID, long EquipcategoryID) {
            return base.Channel.SavedEquipmentCategory(FacilityID, EquipcategoryID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SavedEquipmentCategory[]> SavedEquipmentCategoryAsync(long FacilityID, long EquipcategoryID) {
            return base.Channel.SavedEquipmentCategoryAsync(FacilityID, EquipcategoryID);
        }
        
        public Inventory.Inventoryserref.SavedEquipmentList[] SavedEquipmentList(long EquipmentListID) {
            return base.Channel.SavedEquipmentList(EquipmentListID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.SavedEquipmentList[]> SavedEquipmentListAsync(long EquipmentListID) {
            return base.Channel.SavedEquipmentListAsync(EquipmentListID);
        }
        
        public Inventory.Inventoryserref.GetActiveEquipementListvalue[] GetActiveEquipementListvalue(long EquiplistID) {
            return base.Channel.GetActiveEquipementListvalue(EquiplistID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetActiveEquipementListvalue[]> GetActiveEquipementListvalueAsync(long EquiplistID) {
            return base.Channel.GetActiveEquipementListvalueAsync(EquiplistID);
        }
        
        public Inventory.Inventoryserref.GetNonsuperAdminMedicalSupplyMaster[] GetNonsuperAdminMedicalSupplyMaster(long CorporateID, long FacilityID) {
            return base.Channel.GetNonsuperAdminMedicalSupplyMaster(CorporateID, FacilityID);
        }
        
        public System.Threading.Tasks.Task<Inventory.Inventoryserref.GetNonsuperAdminMedicalSupplyMaster[]> GetNonsuperAdminMedicalSupplyMasterAsync(long CorporateID, long FacilityID) {
            return base.Channel.GetNonsuperAdminMedicalSupplyMasterAsync(CorporateID, FacilityID);
        }
    }
}
